package query

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _template_genny_dummy_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x3d\x6e\xc3\x30\x0c\x85\x67\xf3\x14\x44\x86\x20\xc9\x10\xed\xdd\x8a\xee\x1e\x8a\x5e\x40\x72\x68\x5b\x88\x28\xa9\x12\x89\xc2\x35\x7c\xf7\xc2\xfd\x81\x3d\x15\xd9\x88\xc7\x8f\xdf\x63\xb6\xdd\xdd\x0e\x84\xef\x4a\x65\x02\x30\x06\x65\xf4\x15\x7d\xc5\x9b\x32\x4f\x38\x50\x8c\x13\x0a\x71\x0e\x56\x08\x7b\x1f\x08\x3c\xe7\x54\x04\x4f\xd0\x1c\x06\x2f\xa3\xba\x6b\x97\xd8\xdc\xed\xa7\x9a\xde\xd5\x91\x42\xa6\x62\xbe\x85\xc6\xd9\x4a\x07\x68\x1c\x3e\x48\x9e\x01\x64\xca\x84\xaf\x54\x35\xc8\xdb\x3a\xb6\xe9\x46\xad\x65\xfa\xdb\xa4\xf4\x93\x57\x29\xda\x09\xce\xd0\x5c\xdc\xf5\x25\x31\xa7\xb8\xa2\xb0\xfc\x82\xcf\xc1\xdb\xba\x1e\xfe\x47\xf6\x1a\x3b\x6c\xe9\x63\xeb\x3b\x9d\xf1\xb2\x6b\x9f\xa1\x29\x24\x5a\x22\x1e\xb7\x74\xde\x24\x4f\x78\x5c\x3f\xdf\x69\xe7\x65\x81\x05\xbe\x02\x00\x00\xff\xff\x9f\x7a\x36\xb0\x58\x01\x00\x00")

func template_genny_dummy_go() ([]byte, error) {
	return bindata_read(
		_template_genny_dummy_go,
		"../template/genny/dummy.go",
	)
}

var _template_genny_field_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x51\xcb\x6e\xdb\x30\x10\x3c\x7b\xbf\x62\xc1\x13\x69\xb8\xe2\xbd\x80\x0a\x18\xe8\x03\x05\x6a\x1d\x5a\xf7\xd0\x93\xa1\xc7\xda\x26\x2c\x91\x2a\x45\x26\x56\x82\xfc\x7b\x40\x4a\x96\x9c\xc4\xb0\x0e\x12\x67\x67\x76\x76\x96\x6a\xf3\xf2\x94\x1f\x08\xff\x7b\xb2\x3d\x80\x6a\x5a\x63\x1d\x72\x58\xb0\x83\x72\x47\x5f\x24\xa5\x69\x64\x79\x24\x3a\xf5\x85\x72\x9d\x3c\x90\xd6\x7d\x78\x93\x55\x25\x7b\x2b\x3b\xe5\x4f\x5e\xee\x8b\xee\x48\x75\x4b\x56\x46\x4b\x59\xe4\x1d\x31\x10\x00\x72\x09\xb1\x19\x1b\xdf\x39\x2c\x08\xcb\xbc\xae\xa9\xc2\x96\x2c\x7e\x57\x54\x57\xb0\x94\x00\xae\x6f\x69\x80\x59\xde\x10\x8e\x83\x92\x6d\xdf\xd2\x35\x19\xf0\x3b\xf2\x21\xb7\x21\x77\x66\x2a\x0a\xad\xbb\xc9\x64\x3c\xf9\x06\x95\x76\x98\x62\x48\x94\xac\x9d\x51\x99\xf9\x66\x2d\x0f\x27\xce\x2e\x1a\x26\xc4\x2d\x0f\x9c\x9e\xc1\xe3\xce\x94\xb8\xab\x44\xbe\x0f\x18\x95\xa6\xea\xbc\xc2\x01\x84\xfc\x02\x3f\x7d\xc1\xb9\xff\x67\x75\xde\x9a\xb8\x40\xc8\xff\xf5\xef\x66\xf3\x6f\x77\x63\x7c\x61\x4c\x8d\x29\xfe\x21\x77\x21\x23\xd7\x71\x76\xc1\x6c\x85\x6c\xd2\x4f\x20\x38\xb3\xd5\xbd\xb8\x02\x60\xef\x75\x89\x5c\x9b\x8a\x26\xa1\x98\xff\x01\x17\xc8\x2d\x75\xbe\x76\xb8\xfc\x1d\xbf\xdb\xb8\xc6\x33\x2c\xc6\x72\x8a\x19\x3d\xce\x14\x17\xb0\x28\x4d\xd3\x18\x8d\x9f\x53\x0c\xb6\x49\x34\x5b\x3b\x7e\x3f\xc7\xe8\x97\xc4\x8d\x53\x1c\x3c\x22\x9a\x29\x53\xd1\x2f\xd5\xb9\x2b\x7a\xac\x4c\x92\xe9\x46\x67\xcd\x7c\xc9\x1f\x44\x3f\xac\xf1\xed\x0d\x65\xac\xc7\x48\xce\x5b\x0d\x2f\xf0\x1a\x00\x00\xff\xff\xcd\x2a\xfa\x2f\x29\x03\x00\x00")

func template_genny_field_go() ([]byte, error) {
	return bindata_read(
		_template_genny_field_go,
		"../template/genny/field.go",
	)
}

var _template_genny_list_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x41\x8b\xdb\x3c\x10\x3d\x47\xbf\x62\xd8\x43\x90\x82\x3f\x7b\xbf\x6b\x60\x0f\xcb\x42\xa1\x10\x72\x69\xd9\x4b\x29\x45\x51\xc6\x59\x13\x6b\xe4\xca\x12\x25\x35\xfe\xef\x45\xb6\x15\x8b\x6d\xbd\x59\x4a\x0f\x01\x31\x33\x79\xef\xcd\x9b\xe7\x46\xaa\xb3\x3c\x21\x7c\xf7\x68\x2f\x8c\x55\xba\x31\xd6\xc1\xdd\xa9\x72\x2f\xfe\x90\x2b\xa3\x8b\xb3\xfc\xe9\x8b\xf2\xd0\xbe\x60\xdd\xa0\x2d\x86\xc1\xe2\x20\x5b\xbc\x63\xcc\x5d\x1a\x84\x5d\xd5\xba\xcf\xe1\xd1\x3a\xeb\x95\x83\x0e\x8a\x02\x4e\x48\x74\x61\xab\xcd\x93\xd1\xda\xd0\xde\x1c\x91\xf5\x8c\x15\x05\x84\xe7\x5e\x6a\x9c\x26\x58\xe9\x49\xc1\x1e\x7f\x44\x14\x2e\x60\x73\x45\xec\xd8\xca\xa2\xf3\x96\x60\x1d\x6b\xdd\x8c\xb8\x85\x75\xd0\x91\xcf\x95\xae\xef\x03\xcd\x80\xc9\xc9\x1c\x67\x71\x02\x1e\x1d\xaf\xa0\x22\x27\x80\x5b\x6c\x7d\xed\x60\x13\xb5\x64\x80\x80\xd6\x1a\x2b\x46\xc6\xa1\xfb\x00\xeb\xd8\xef\xfa\x58\x4d\xb8\xc2\x9f\x1e\x20\x90\x24\xc5\x3c\xb0\x88\xa8\x7a\x51\xcb\x87\xca\xb6\x8e\xbf\x43\xc9\xb0\x3b\x4d\xc0\xf7\x62\x11\x70\x27\xff\x02\xaf\x22\x37\xe0\xe4\x61\x3a\x60\xe5\xcf\xb2\xf6\xf8\x91\x4a\x93\x3f\xef\x90\x04\xfc\x07\xff\x2f\x73\x7e\xc2\x1a\x95\xe3\x25\x41\x68\xf3\x2b\xa7\x80\x83\x31\xf5\x2c\xe6\xcb\xd7\xa4\x95\xfa\xab\xe5\x19\x79\xd2\xcd\xe0\x3e\x83\x9b\xa2\x04\x5b\xa9\xc1\xef\x16\xb6\xbf\xfb\x1f\x45\x05\x45\x4a\x43\x92\xbf\x51\x56\x10\x10\x7d\x28\x89\xcf\x27\x4e\x63\xa5\x74\x2f\xd8\x2a\xfc\x4a\x63\xe1\x5b\x06\x4a\x07\x2e\x2b\xe9\x84\x10\xc9\x47\xa0\x69\x15\xd9\x34\x48\xc7\x69\xe3\x0c\xde\x84\xbd\xde\x61\x9c\x7e\x23\x24\x74\x5c\x76\xf7\x5a\x48\x2c\xdd\xde\xca\xec\x1f\x02\x3b\xb2\xfc\x23\xbb\xde\xb7\xd8\x63\x5d\x73\x91\xc6\xe2\x75\x36\xd3\x23\xbe\x5a\x1c\x3a\x98\x26\x9d\xf5\x08\xfd\x72\x3c\x9f\x8c\xa7\xf0\x4d\x54\xe4\x12\xfc\x9b\xf1\x62\x3d\xfb\x15\x00\x00\xff\xff\x15\x40\x60\x64\x14\x05\x00\x00")

func template_genny_list_go() ([]byte, error) {
	return bindata_read(
		_template_genny_list_go,
		"../template/genny/list.go",
	)
}

var _template_genny_node_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x55\x4b\x6f\xe3\x36\x10\x3e\x6b\x7e\xc5\xc0\x87\x05\x19\x18\x51\x7b\x0d\x20\x14\x69\x5a\x07\x06\x36\xde\x22\x76\x1f\x80\x11\x04\xb2\x4c\x29\xac\x25\x52\x2b\x51\x69\x52\xaf\xff\x7b\x31\xa4\x9e\xb6\xec\x74\x2f\xbb\x0e\xf9\xbd\x38\x33\xa4\xf2\x30\xda\x85\x89\xc0\xaf\x95\x28\xde\x01\x64\x96\xeb\xc2\x20\x03\x6f\x92\x48\xf3\x52\x6d\xae\x23\x9d\xf9\xbb\xf0\xdf\xca\x8f\x37\xe5\x8b\x48\x73\x51\xf8\x16\xeb\x6f\xc2\x52\x4c\xc0\x7b\xc6\x0f\x91\xa9\x4e\x26\xc0\x01\xc0\xbf\x02\x44\xc4\xac\x2a\x0d\x46\x61\x9a\xe2\x8f\x68\x64\x26\x4a\xcc\x45\x81\xab\x70\x93\x0a\xbf\x34\x45\x15\x19\xb6\xd0\x5b\xb1\x08\x33\xc1\xe1\xca\x07\x30\xef\xb9\xc0\x66\x09\x1d\x04\xf7\xe0\x5d\x51\x86\xeb\x3b\x9d\x65\x5a\xd1\x36\x1c\x00\xe2\x4a\x45\xb8\x10\xff\x34\x70\xc6\xf1\xaa\xa5\xee\xc1\x2b\x84\xa9\x0a\x85\x9f\x9a\xb5\x7d\x47\xbf\xc1\x4f\x47\x82\xfb\xc3\x81\x34\x5f\xc3\xa2\xb5\x7f\x9e\x6f\xdf\x56\x7a\x45\x89\xb2\x30\x5f\x4b\x65\x9e\xa4\x32\x18\xf4\xff\xda\x1f\xce\x50\xee\x0b\x5d\xe5\xdf\xc9\xb3\xc1\x1b\x50\x69\x0a\xa9\x92\x1e\xcb\x2d\x1c\x13\xe9\x9f\x95\x9e\x6f\xdf\x2c\xce\x61\x7a\x76\xdd\xc2\xfe\x00\xee\x78\xbf\xfc\xfe\xf0\xf0\xdb\x73\x23\x30\x2f\x97\xae\xc8\x1b\xad\x53\x0c\xd0\x96\x65\x29\x4c\xb7\xa7\x22\xc3\x26\x0d\x7c\x32\x75\x88\x95\xfe\x59\xeb\x94\x4d\x1a\xfa\x84\xf3\xba\x21\xc4\xad\xc1\x33\x29\xd2\x6d\xc9\x14\xfd\x9e\x62\x5c\xff\x67\x0b\xea\x72\xd1\x62\x95\xa1\x54\x86\x3b\xff\x3d\x78\xe0\x59\x83\x47\xf1\xb5\x12\xa5\x59\x0a\x63\xa4\x4a\x2e\xab\x39\x19\x4e\x5c\xa1\xaa\x6c\x66\xec\x9a\xde\xe1\x4d\x7d\x1e\x57\x24\x82\xae\x2d\xe1\x09\x3c\x19\x13\x60\x0f\x9e\xd7\xa4\x5d\x0a\xd3\x76\x8f\x91\xe0\x14\x5b\x35\x0e\xde\x01\x3c\xdf\x9f\xcd\xff\x7a\xf8\xf5\x86\x44\x65\x84\x76\x56\xb5\x4a\xdf\xb1\x34\xba\x10\x3f\x01\x9c\x68\xd9\xb1\x74\x5a\xd6\x98\x03\x78\x49\x91\x53\xb0\x06\x7a\x2f\x4c\x3b\x2f\xac\x06\xf5\x75\x7a\x9b\x56\x27\x29\x72\xde\x73\xea\x26\x67\x4d\xfb\x4f\x18\x38\xa7\x3e\xa4\x9d\x91\xb5\xad\x9a\xc5\x2c\xaa\xac\xae\x74\xdd\x6c\x0b\x18\x34\xfa\x94\x4f\xc6\xf5\xad\x32\x45\x25\x00\x0e\xf5\x25\x1c\x3b\xb6\xa4\xbe\x4e\xb1\xac\x7b\xcd\xa9\xd8\x23\xa9\x25\xc5\x29\xa1\x0b\xd3\x29\x8c\x86\x69\xb7\x79\xf7\x06\x8c\x75\x70\x37\xc5\xd7\xe1\x64\x9d\x5e\xd2\xf5\x8e\xcc\x5f\x8f\xbc\x2d\xfd\xbc\x77\xdd\xa2\x7e\x1d\x46\x82\x74\x6d\xfb\x3f\x41\x2c\xf2\x24\xcd\x60\xf7\x83\x44\x16\xf3\x41\xac\xc1\xa8\x75\x7d\x61\x85\x28\xab\xd4\xb8\x8c\xdd\xbb\x69\x53\x0c\x29\x5d\xc9\x99\xd2\xdb\xee\xa1\xe6\x18\xb5\x0f\x29\xbd\xc2\x47\x6f\x2b\x89\xca\x18\x89\xd2\x5f\x0d\x02\x54\xd2\x16\xc4\x9d\xf8\xb3\x4e\x98\xfb\xf1\xe5\xfe\xf9\xcf\xdb\xc7\xc5\x14\xc9\x8b\x71\x6c\xb6\x6f\x8b\xa4\xb4\xf8\x41\xc6\x19\x9b\xf4\x54\x95\x36\x18\xeb\x4a\x6d\xdb\x74\x13\x0e\x9e\x77\xa0\x2b\x2c\xd2\x52\xa0\x8c\x31\x15\x8a\x1d\xa5\xb9\x76\xe7\x08\x02\xfc\x01\xbf\x7d\x1b\x45\x74\xdd\x77\x30\x0a\x32\xa6\x82\x01\x76\xbd\x1a\xc1\x74\x9f\x95\x60\xa4\x91\x97\x08\xee\xa3\x32\xc6\xb2\x3b\xf6\x91\xaa\x2b\x73\x5c\xec\xe6\xaa\x1e\x37\x6e\x29\xc2\x22\x7a\x99\xab\x58\xb3\x5c\x97\xee\xca\xc6\x75\x61\x1f\x45\x34\x53\x53\x8c\xb4\xda\xce\xea\xa5\x3b\xfb\x9b\xc6\x04\x5c\xcc\x7e\xe3\xaf\x87\x62\x24\xd4\xb0\xe9\x71\xa6\x0f\xd0\x68\x06\x4b\xe0\xc8\xa4\x8a\xb5\xb3\xa1\x15\x67\xd2\x3f\xce\xc0\xcb\x91\xe0\xec\x44\xce\xcb\xcf\x22\x8c\x6f\x0d\xfb\x7b\x70\xf9\x2e\x29\xb6\x8c\x0b\xb2\x77\xba\x52\xe6\x4b\x6c\x3f\x46\x8c\x93\x74\xef\xca\xd0\xd4\x8c\x3d\x16\xe7\xc4\xfe\x08\xd3\x4a\xd8\x83\xc8\x3a\x24\x1d\xbe\x5d\xed\x29\x9f\xa6\xed\x71\xad\xc1\x19\x0b\x1b\xf4\xd6\x30\xb9\x7d\x73\x16\xec\xf8\x76\xf2\x8b\x36\x3d\xbe\xb5\xf9\x2f\x00\x00\xff\xff\x45\xba\xfe\x9d\x46\x0a\x00\x00")

func template_genny_node_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_go,
		"../template/genny/node.go",
	)
}

var _template_genny_node_test_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcf\x6a\xf3\x30\x10\xc4\xcf\xda\xa7\x58\x7c\x08\xd6\xf7\x19\xab\xe7\xd2\xf4\x18\xc8\xc5\x04\x92\x7b\x91\xec\x75\x2c\x62\x4b\xaa\xfe\x50\x9a\x90\x77\x2f\x52\x92\x06\x7a\xd3\x68\xf4\x9b\x59\xad\x93\xfd\x49\x1e\x09\x3f\x13\xf9\x6f\x00\xbd\x38\xeb\x23\xd6\xc0\xaa\x48\x21\x6a\x73\xac\x00\x98\xc2\xea\xa8\xe3\x94\x54\xdb\xdb\x45\x9c\xe4\x39\x89\x51\x85\x89\x66\x47\x5e\x14\x52\x28\x19\xa8\x02\x0e\x30\x26\xd3\xe3\x81\x42\xfc\x08\x24\x7d\x3f\x6d\xcd\x68\xeb\x88\xff\xee\x71\xed\x81\xe3\x05\x80\x49\x7c\x5d\x63\x47\x5f\x9d\x1d\xa8\x93\x0b\xd5\x1c\x98\x10\x0f\xb5\xd1\x34\x0f\xa1\x4b\xcb\xd6\xe8\x98\xad\xde\x9a\x21\x13\x39\xbd\x76\x36\xa0\x36\xb1\x41\x6d\x46\x8b\xaa\xcd\x15\x1c\x95\xb5\x33\x5e\x80\x31\x4f\x31\x79\x53\xcc\x76\x67\x03\xbe\xad\x31\x13\xab\x15\xd6\x8f\xbb\xff\xe5\xb0\xd7\x67\xe2\xf8\x9e\x5d\x60\x4c\x88\x3b\x18\x7d\x22\x60\x57\x60\x9e\xfa\x8d\xf9\x6d\x0d\xa8\xda\x3c\xdf\x4e\xc6\xe9\x4f\xf5\xa5\xe0\xb9\x39\xa4\x39\xe2\x1a\xa5\x73\x64\x86\xfa\xa6\x1b\x0c\xfc\xfe\x20\x53\xe1\xe9\x17\x79\xcb\xe2\xa5\x51\xb6\xfb\xe7\xd2\x5e\x1a\x2c\x13\x34\x98\x7f\xcf\x01\xae\xf0\x13\x00\x00\xff\xff\x79\x9d\x3b\x9e\xae\x01\x00\x00")

func template_genny_node_test_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_test_go,
		"../template/genny/node_test.go",
	)
}

var _template_genny_root_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xcd\x6e\xdb\x3c\x10\x3c\x8b\x4f\xb1\x9f\x0e\x01\xf9\x35\x90\x9a\x1f\x18\x45\x50\x1f\xea\x02\x69\x03\x04\x0e\x10\x24\xa7\xa2\x07\xca\x5e\x39\x44\x64\xd2\x25\xa9\x3a\xae\xa1\x77\x2f\x48\x4a\x14\xed\xa6\x40\x51\xf4\xa6\x9d\x9d\x9d\x5d\x0e\x57\xdc\xf0\xc5\x33\x5f\x21\x7c\x6b\x51\xef\x08\x11\xeb\x8d\xd2\x16\x28\xc9\x72\xa1\x72\x92\xe5\xc6\xea\x85\x92\xdf\x73\x42\xb2\xba\xe1\xb6\x6a\xeb\x1a\xb5\x81\x7c\x25\xec\x53\x5b\x15\x0b\xb5\x2e\x57\x4a\xad\x1a\x2c\x93\x74\xb9\xf2\xb5\x09\xe7\x99\xff\x68\xcb\xba\x32\x4f\xd8\x6c\x50\x97\xbe\x5b\x59\x71\x83\x39\x61\x84\xd8\xdd\x06\x61\xa6\x54\x03\x53\x70\x60\xe1\xbe\x7b\x74\x67\x31\xa2\x3b\x8b\x01\xbd\x91\xf6\xdd\x80\xba\xef\x88\x9e\x4d\x12\xf8\x6c\x12\xf1\x8b\xf3\x04\xbf\x38\x8f\xf8\xe4\x32\xc1\x27\x97\x01\x7f\x14\x89\xbc\x0f\x46\x7c\x6c\x10\xa2\x31\x33\xb6\x08\xd1\x98\x19\x9b\x84\x28\x64\xae\x1b\xc5\x93\xa2\x3e\x4c\x72\x63\x59\x1f\xf6\x46\x7d\x54\xeb\xb5\x92\x73\xb5\x8c\xc6\x8c\xc8\x2f\x94\x5b\x61\xec\x6b\xb4\xba\x95\x0b\x98\xe3\x76\xc4\x28\x83\xff\x8f\x68\xb0\x27\x99\x46\xdb\x6a\x09\x27\x47\xa9\x7d\x47\xba\xd7\x54\x5c\x3f\xa7\x74\x34\x41\x22\x74\x98\x49\x74\xee\x36\x28\xa9\x06\xa1\x8a\x7b\xe4\x4b\xd4\xa7\xb0\xe0\x1b\x10\xd2\x32\xb8\x57\xca\x3e\xb8\x83\x79\x1d\xd3\x36\x16\xae\xa6\x11\xdd\x8f\x92\x57\xe1\xa4\x41\xca\x0b\xb0\x6e\x28\x49\xa6\x2f\xe6\x7c\xed\xdc\xcb\x07\x89\x3c\x92\xae\xd1\x2e\x9e\x6e\xe4\x12\x5f\x28\x8b\x43\x87\x1c\xc9\xca\xb2\x07\xfe\xb4\x75\x7a\xb6\xd9\x6e\xd6\xd6\xb4\x6a\x6b\xf8\xf2\xb5\xda\x59\xfc\xbb\x63\x45\x95\x7f\x79\xb0\x61\x4c\x2a\xdd\xad\x0f\xb5\x0c\xe6\xf8\xe2\x6e\x33\x9d\xd3\x58\xae\xfd\x98\x8e\x5a\xdc\xa2\xa4\x8c\x90\x4c\xd4\x31\x76\xe3\xb1\x37\x97\xf0\x1e\x02\x75\x4f\xb2\xa1\x9b\xa3\x90\xac\x23\x24\x93\xb8\x9d\x71\x83\x51\xc7\x05\x85\xeb\xe6\x3e\xa8\x2f\x74\xb2\x5a\xa9\x43\x4b\xba\x80\x15\x07\xff\xc0\xd1\x1a\xf7\x94\x64\xfb\xc3\xf2\x26\x2b\x37\x32\x86\x7f\x63\x8e\x5b\x5f\xdd\x0f\x76\xea\xf6\x8e\x26\x4f\x5a\xf1\x09\xed\xe3\x5d\x5d\x1b\xb4\x0f\x03\xa9\xb8\xa7\x6f\x19\x63\x89\x9b\x4a\xfd\xde\xcb\xcf\xdc\xf4\x76\x56\xee\xa5\xdb\x13\x92\xda\x72\xe8\x5c\xe2\xed\x20\xf7\xc1\x2a\x41\x0d\x18\xab\x85\x5c\x31\xa0\x42\xda\x53\x40\xad\x95\x66\x5e\x4b\xfa\xc8\x99\xd5\x3f\xd9\x45\xa8\x60\xfe\x72\x5c\xea\xbf\x29\x48\xd1\xc0\xc9\x09\x18\x98\x4e\x21\xbf\x16\xd8\x2c\xe7\xed\x3a\xf7\x57\xe4\x18\x9e\xe0\x2e\x28\x4e\xe6\x45\x49\x47\x7e\x06\x00\x00\xff\xff\x9c\x31\x83\x97\x27\x06\x00\x00")

func template_genny_root_go() ([]byte, error) {
	return bindata_read(
		_template_genny_root_go,
		"../template/genny/root.go",
	)
}

var _template_genny_union_alias_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcb\x6a\xeb\x30\x10\x86\xd7\x9e\xa7\x18\xb4\x38\xd8\xe1\x60\xed\x03\x5e\x94\x96\x42\xa1\x09\x85\x92\x75\x91\xed\x89\x2d\xa2\x8b\xab\x4b\x69\x1a\xf2\xee\x45\x0e\x95\xbd\xc8\x6e\xe6\xff\x3f\x7d\x8c\x26\xd1\x9d\xc4\x40\xf8\x19\xc9\x9d\x01\xf8\x06\x06\x32\xe6\x8c\x3a\xfa\x80\x2d\x61\x27\x94\xa2\x1e\x27\x72\x78\x30\xd2\x9a\xbd\xd0\x04\x1b\x0e\x20\xf5\x64\x5d\xc0\x12\x0a\x36\xc8\x30\xc6\xb6\xee\xac\xe6\x27\xf1\x13\xf9\xb1\xf5\x23\xa9\x89\x1c\x9f\xad\xbc\x15\x9e\x18\x54\x00\x5f\xc2\xe1\xd3\x61\xb7\x7b\xfb\xc8\xae\x07\x25\x85\x4f\x03\xb6\xd6\x2a\x6c\x30\xc1\xf5\x3b\x85\xb9\x28\x59\x06\xd9\x7f\x64\x19\x66\x15\xc0\x31\x9a\x0e\x4b\x63\x7b\x5a\x2e\xab\x30\x23\xe5\x6a\xc6\x0b\x14\x9c\x3b\xf2\x51\x05\xdc\x36\x4b\x71\x79\xb4\x5a\x5b\xb3\xb7\x3d\x6d\x31\xa9\xea\x25\xb8\x42\x71\xef\x45\x8e\x57\x28\x36\xf8\x6f\xd9\x56\x48\x5a\x5f\xa5\x0f\xd8\xdc\xec\x7f\xfb\x1d\x47\x3d\x1f\xda\xac\x3f\x99\xa9\x67\x0a\xdd\xf8\x62\x7a\xfa\x2e\xab\x14\x86\xe8\x0c\xde\x3a\xb8\xc2\x6f\x00\x00\x00\xff\xff\xbc\x73\x10\xa1\xc3\x01\x00\x00")

func template_genny_union_alias_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_alias_go,
		"../template/genny/union-alias.go",
	)
}

var _template_genny_union_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xbd\x6e\xac\x30\x10\x85\x6b\xe6\x29\x8e\x28\x56\x40\x81\x75\xdb\x95\xb6\xba\x75\xe8\xf2\x00\xc6\x0c\xac\xb5\xd8\x26\xfe\x51\x44\x10\xef\x1e\x99\x55\xd8\x28\xcd\x14\x33\xe7\x7c\xf3\x2d\x52\x3d\xe4\xc4\xf8\x48\xec\x57\x22\xd1\x10\x80\x89\xad\x5d\x61\x52\x88\xe8\x19\x4a\xce\x33\x0f\xf8\x87\xa8\x0d\x07\x2c\xec\xd1\xb9\x81\x3b\x69\x98\x1a\x41\xa4\xcd\xe2\x7c\x44\x45\x45\x39\xe9\x78\x4f\x7d\xab\x9c\x11\x0f\xf9\x95\xc4\xd8\x87\x3b\xcf\x0b\x7b\x71\xf0\x45\x2f\x03\x97\x54\x13\xc5\x75\x61\xbc\x5b\xed\x6c\xc6\x20\x44\x9f\x54\xc4\x46\x45\x93\x23\xed\x7f\x67\x8c\xb3\xf9\x0b\xed\x44\x63\xb2\x0a\x1d\x7f\x9e\xf9\xaa\x46\xf3\x2a\x6f\x54\x78\x0e\x69\x8e\xb8\xde\x70\x39\xf7\xdb\x0b\x72\xc5\xe5\x0f\x76\xdb\xf7\x9f\x56\x7b\x40\x6e\x28\xcf\x66\x99\x4f\x31\x79\x8b\x67\xe2\x74\xa8\xac\x1b\x7e\x69\xd7\x78\x63\xd3\xb3\xaf\x34\xb4\x8d\x75\x1e\xec\x47\xa9\x78\xdb\x9f\x52\x07\xc3\xea\x99\x76\xfa\x0e\x00\x00\xff\xff\x89\x66\x96\xee\x68\x01\x00\x00")

func template_genny_union_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_go,
		"../template/genny/union.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"../template/genny/dummy.go": template_genny_dummy_go,
	"../template/genny/field.go": template_genny_field_go,
	"../template/genny/list.go": template_genny_list_go,
	"../template/genny/node.go": template_genny_node_go,
	"../template/genny/node_test.go": template_genny_node_test_go,
	"../template/genny/root.go": template_genny_root_go,
	"../template/genny/union-alias.go": template_genny_union_alias_go,
	"../template/genny/union.go": template_genny_union_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"..": &_bintree_t{nil, map[string]*_bintree_t{
		"template": &_bintree_t{nil, map[string]*_bintree_t{
			"genny": &_bintree_t{nil, map[string]*_bintree_t{
				"dummy.go": &_bintree_t{template_genny_dummy_go, map[string]*_bintree_t{
				}},
				"field.go": &_bintree_t{template_genny_field_go, map[string]*_bintree_t{
				}},
				"list.go": &_bintree_t{template_genny_list_go, map[string]*_bintree_t{
				}},
				"node.go": &_bintree_t{template_genny_node_go, map[string]*_bintree_t{
				}},
				"node_test.go": &_bintree_t{template_genny_node_test_go, map[string]*_bintree_t{
				}},
				"root.go": &_bintree_t{template_genny_root_go, map[string]*_bintree_t{
				}},
				"union-alias.go": &_bintree_t{template_genny_union_alias_go, map[string]*_bintree_t{
				}},
				"union.go": &_bintree_t{template_genny_union_go, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
