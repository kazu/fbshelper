package query

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _template_genny_basic_nogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x4f\x4f\x84\x30\x10\xc5\xcf\x3b\x9f\x62\xc2\xc1\x80\x21\x60\x3c\x9a\x70\x59\x13\x4f\x66\x3d\xac\x37\xe3\xa1\xad\x03\x34\x58\x8a\xfd\xa3\x61\x37\xfb\xdd\x4d\xc1\xc2\xe2\xa5\xe9\xeb\xfb\xbd\x37\xcd\x0c\x4c\x74\xac\x21\xfc\xf2\x64\x46\x00\xa9\x06\x6d\x1c\xa6\xb0\x4b\x1a\xe9\x5a\xcf\x0b\xa1\x55\x29\x5a\xa2\x6e\xe4\xd2\xd9\xb2\xa1\xbe\x1f\xc3\x49\x46\x8a\x64\x8b\x75\xec\xe4\xcb\x9a\xdb\x96\x3e\x07\x32\xe5\x54\x59\x72\x66\x29\x81\x0c\xc0\x8d\x03\xe1\x9e\x59\x29\x5e\xc3\xed\xaf\xa2\x38\x78\xc5\xc9\x00\xd4\xbe\x17\xf8\x64\xb4\x5a\x90\xf4\x7b\xc5\x33\xbc\x7d\xd4\x4a\xe9\xfe\xa0\x3f\x08\xcf\x00\x3b\x31\x49\x7c\xa8\xf0\x26\x8c\x28\x56\xfb\x7c\x89\x6e\x11\xe4\xb3\xb4\x0e\x23\x15\x1f\xae\x19\xa6\x08\x2b\x4c\x96\x59\xc9\x26\x8e\x15\xce\x49\xfa\x09\xf2\x3e\x8d\x6a\xcf\x2c\xa5\x8a\x75\x94\xbe\xbd\xf3\xd1\x51\x3e\x73\x47\x79\xa2\x97\x7a\xfd\x78\x96\xe3\x5d\x8e\xce\x78\xca\x36\xbd\x13\x18\xcb\xff\x85\x16\xf0\x48\xee\x6a\x1d\x19\xec\x0c\x39\x6f\x7a\x9c\x6d\xb8\xc0\x6f\x00\x00\x00\xff\xff\xfa\xfb\xaf\x05\xbf\x01\x00\x00")

func template_genny_basic_nogo() ([]byte, error) {
	return bindata_read(
		_template_genny_basic_nogo,
		"../template/genny/basic.nogo",
	)
}

var _template_genny_dummy_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xb1\x6e\xeb\x30\x0c\x45\x67\xf3\x2b\x88\x0c\x41\x92\x21\x7a\xc3\x9b\x0a\x74\x68\x0b\x74\x74\x81\xb6\x3f\x20\xcb\xb4\x2d\x44\x94\x54\x89\x1a\x1c\xc3\xff\x5e\x38\x69\xe0\x4c\x45\x37\xe1\xde\xa3\x73\x19\xb5\x39\xe9\x9e\xf0\xab\x50\x1a\x01\x94\x42\x19\x6c\x46\x9b\xb1\x2d\xcc\x23\xf6\xe4\xfd\x88\x42\x1c\x9d\x16\xc2\xce\x3a\x02\xcb\x31\x24\xc1\x1d\x54\x9b\xde\xca\x50\x9a\xa3\x09\xac\x4e\xfa\x5c\x54\xd7\xe4\x81\x5c\xa4\xa4\x2e\x42\xd5\xe8\x4c\x1b\xa8\x1a\xfc\x23\xb9\x07\x90\x31\x12\xbe\x53\x2e\x4e\x3e\x97\x67\x1d\x5a\xaa\x35\xd3\xad\x09\xe1\x9a\x67\x49\xc5\x08\x4e\x50\x1d\x9a\xe3\x4b\x60\x0e\x7e\x41\x61\xfe\x01\x9f\x9c\xd5\x79\xf9\xf8\x1b\xd9\x15\x6f\x90\x38\xca\xb8\x2e\xee\xf6\x78\xb8\xdb\x9f\xa0\x4a\x24\x25\x79\xdc\xae\xe9\xb4\x6a\x1e\x70\xbb\xdc\x7e\x27\x9e\xe6\x79\x71\x9b\xe0\xb3\xe0\xab\x25\xd7\xd6\x85\xd1\x7a\xc1\x47\xfc\x77\xcb\x3f\xec\x99\xde\xba\x67\x9d\xad\xb9\xcc\x5c\xeb\xff\xf0\x1d\x00\x00\xff\xff\x20\xb9\x45\xb7\x91\x01\x00\x00")

func template_genny_dummy_go() ([]byte, error) {
	return bindata_read(
		_template_genny_dummy_go,
		"../template/genny/dummy.go",
	)
}

var _template_genny_field_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x4d\x8f\xdb\x20\x14\x3c\xe7\xfd\x8a\x27\x4e\x10\xa5\xf6\xbd\x92\x2b\x45\xfd\x52\xa5\x6e\x0e\xdd\xf4\xd0\xd3\xca\x1f\x2f\x09\x8a\x6d\x28\x86\x68\xdd\xd5\xfe\xf7\x0a\x6c\x43\xda\xa6\xc9\x21\x66\x98\x61\x98\x37\xb6\x2e\xeb\x73\x79\x24\xfc\xe9\xc8\x8c\x00\xb2\xd3\xca\x58\xe4\xb0\x62\x47\x69\x4f\xae\xca\x6a\xd5\xe5\xf5\x89\xe8\x3c\x56\xd2\x0e\xf9\x91\xfa\x7e\xf4\xff\x64\x64\xcd\xfe\x94\x9d\xcb\x5f\x2e\x3f\x54\xc3\x89\x5a\x4d\x26\x0f\x96\x79\x55\x0e\xc4\x40\x00\xe4\x6b\x08\x87\xb1\x73\x83\xc5\x8a\xb0\x2e\xdb\x96\x1a\xd4\x64\xf0\x93\xa4\xb6\x81\x75\x0e\x60\x47\x4d\x13\xdc\x95\x1d\xe1\x7c\x51\xb6\x1f\x35\x5d\x93\x1e\xff\x45\x5e\x4a\xe3\x73\xef\x54\x43\xfe\xe8\x53\x34\x99\x57\xae\x43\xd9\x5b\x2c\xd0\x27\xca\xb6\x56\xc9\x9d\xfa\x68\x0c\xf7\x2b\xce\x16\x0d\x13\xe2\x96\x07\xc6\xdf\xe4\x71\xe7\x96\x30\x6b\x8e\xfc\xe0\x31\xca\x9e\x9a\xe7\x0d\x4e\xc0\xe7\x17\xf8\xe6\x1d\xa6\xf3\x5f\x9a\xe7\xbd\x0a\x03\xf8\xfc\x1f\xbe\x3f\x3c\xfc\x78\xba\x71\x7d\xa5\x54\x8b\x05\x3e\x92\x5d\xc8\xc0\x0d\x9c\x2d\x98\x6d\x90\x45\x7d\x04\xde\x99\x6d\xee\xc5\x15\x00\x07\xd7\xd7\xc8\x7b\xd5\x50\x14\x8a\xf4\x0e\xb8\x40\x6e\x68\x70\xad\xc5\xf5\xb7\xf0\xdc\x87\x31\x5e\x60\x35\x6f\x17\x48\x9d\xb6\x63\x22\xb9\x80\x55\xad\xba\x4e\xf5\xf8\xb6\x40\x6f\x9c\x05\xbb\xad\xe5\xf7\x93\xcc\x8e\x59\x98\xb9\xc0\xc9\x23\xa0\x44\xa9\x86\xbe\xca\xc1\x5e\xd1\xf3\x4e\x94\xc4\x4e\x93\x26\xd5\xfc\x8f\xe8\xb3\x51\x4e\xdf\x50\x86\xfd\x10\xc9\x3a\xd3\xc3\xeb\x7f\x7a\x7a\x24\x9b\xaa\xba\xe0\x3a\x7c\x5d\xef\x83\x97\x17\x09\x24\x63\x94\xc1\x97\xe8\x34\xf5\x91\x14\xd9\xe2\xb0\xb5\x7c\xa9\x62\x83\x17\x01\xaf\xf0\x3b\x00\x00\xff\xff\x84\x25\xaf\x6c\x9d\x03\x00\x00")

func template_genny_field_go() ([]byte, error) {
	return bindata_read(
		_template_genny_field_go,
		"../template/genny/field.go",
	)
}

var _template_genny_list_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4f\x8b\xdb\x3e\x10\x3d\x47\x9f\x62\xc8\x21\x58\xc1\x3f\x7b\x7f\xd7\x80\x0f\xcb\x42\x61\x21\xe4\xd2\xb2\x97\x65\x29\x8a\x33\xce\x8a\x58\x92\x2b\x4b\x94\xd4\xf8\xbb\x97\xf1\x5f\x35\xd4\x9b\x52\x7a\x30\x98\x99\xd1\x7b\x6f\x9e\x9e\x2a\x91\x5f\xc4\x19\xe1\x9b\x47\x7b\x65\x4c\xaa\xca\x58\x07\xeb\xb3\x74\xef\xfe\x98\xe4\x46\xa5\x17\xf1\xc3\xa7\xc5\xb1\x7e\xc7\xb2\x42\x9b\x76\x83\xe9\x51\xd4\xb8\x66\xcc\x5d\x2b\x84\xbd\xac\xdd\x17\xfa\xa9\x9d\xf5\xb9\x83\x06\xd2\x14\xce\xa8\xf5\x95\xad\xb6\x4f\x46\x29\xa3\x0f\xe6\x84\xac\x65\x2c\x4d\x81\x7e\x0f\x42\xe1\x30\x51\x78\x9d\xc3\x01\xbf\x8f\x20\x11\x87\xed\x04\xd8\x30\xb6\x2a\x65\xed\x60\x97\x01\xaa\xca\x5d\xe7\xa9\xbe\x91\x10\x1a\x15\x21\x83\x0d\x69\x9a\x0a\x4d\x3b\x4c\xcc\x02\x92\x8e\x36\x83\xf5\xeb\xdb\x28\x62\x3d\x10\x24\xcf\x5a\x3a\x3a\x46\xc0\x16\x9d\xb7\x1a\xa8\x4e\x9a\x3b\x85\x37\xec\xbf\x68\x1c\x0f\x6c\xc6\x5a\x33\x73\xee\x06\x59\x73\xa5\x69\xdb\x09\x35\xd2\xe6\x34\xfb\xc7\xe1\xd1\x45\x12\xa4\x76\x1c\x22\x8b\xb5\x2f\x1d\x6c\x47\xa5\x31\x20\xa0\xb5\xc6\xf2\x9e\xb1\xeb\x66\xb0\x19\xfb\xb4\x6f\x5f\x0d\xb8\xe8\x50\x06\x44\x12\xda\x40\x2c\xd3\x9a\x8b\x5a\x3e\x49\x4b\x76\xdc\x57\xd2\xed\xae\x07\xe0\x07\xbe\x08\xb8\x17\x7f\x81\x27\xb5\xeb\x70\xa6\x7b\x4d\x5e\x44\xe9\xf1\x59\x17\x26\x79\xd9\xa3\xe6\xf0\x1f\xfc\xbf\xcc\xf9\x19\x4b\xcc\x5d\x54\x68\xa0\x76\x34\x71\x72\x38\x1a\x53\xce\x62\x5e\xdf\x82\x56\xe8\xaf\x12\x17\x8c\x82\x6e\x0c\x0f\x31\xdc\x15\xc5\xd9\x2a\xef\xfc\xae\x29\xb9\xb7\xfe\x8f\xa2\x48\x51\xae\x20\x78\x22\xbd\x2c\x12\x30\xfa\x50\xe8\x68\xbe\xe2\x30\x56\xb9\x6a\x39\x5b\xd1\x57\x18\x0b\x5f\x63\xc8\x15\x71\x59\xa1\xcf\x08\x23\x79\x0f\x34\xac\x22\xaa\x0a\xf5\x69\xd8\x38\x86\x0f\x61\xa7\x7b\xe8\xa7\x3f\x08\x89\x3e\x2d\xbb\x3b\x15\x02\x4b\x77\xf7\x32\xfb\x9b\xc0\xf6\x2c\xff\xc8\xae\x3f\x5b\xec\xb1\x2c\x23\x1e\xc6\xe2\x36\x9b\xe1\x25\xde\x2c\x0e\x0d\x0c\x93\xce\x7a\x84\x76\x39\x9e\x4f\xc6\x6b\x7a\x13\x52\xbb\x00\xff\x6e\xbc\x58\xcb\x7e\x06\x00\x00\xff\xff\x9c\x14\xb9\x3f\xb7\x05\x00\x00")

func template_genny_list_go() ([]byte, error) {
	return bindata_read(
		_template_genny_list_go,
		"../template/genny/list.go",
	)
}

var _template_genny_node_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xdf\x4f\xe3\x38\x10\x7e\x8e\xff\x8a\xb9\x3e\xac\x6c\x54\xd1\xbb\x57\xa4\xea\xc4\xb2\x14\x55\x82\x72\x2a\xdd\xdb\x93\x10\xaa\x42\xea\x04\x1f\x89\x9d\x75\x1c\x0e\x2e\x9b\xff\xfd\x34\xb6\xf3\xa3\x69\xca\x72\x2f\x84\x8e\xbf\xf9\xe6\xf3\xcc\x78\xec\x3c\x8c\x9e\xc3\x84\xc3\xf7\x92\xeb\x37\x42\x44\x96\x2b\x6d\x80\x92\x60\x92\x08\xf3\x54\x3e\x9e\x46\x2a\x9b\x3d\x87\xff\x96\xb3\xf8\xb1\x78\xe2\x69\xce\xf5\xcc\x62\x67\x8f\x61\xc1\x27\x1f\xc0\xa5\x2a\x99\x10\x46\xc8\xec\x84\x00\x40\x56\x16\x06\xa2\x30\x4d\xe1\x37\x30\x22\xe3\x05\xe4\x5c\xc3\x26\x7c\x4c\xf9\xac\x30\xba\x8c\x0c\x5d\xa9\x1d\x5f\x85\x19\x67\xe4\x64\x46\x88\x79\xcb\x39\x34\x26\x70\x10\xa8\x48\x70\x82\xf1\x4f\x2f\x54\x96\x29\x89\xcb\xa4\x26\x24\x2e\x65\x04\x3c\xcb\xcd\x5b\xe3\x40\x19\x9c\xb4\xce\x15\x09\x34\x37\xa5\x96\xf0\xa9\xb1\x55\x1d\xc1\x19\x7c\x1a\x50\x56\x75\x8d\xac\x2f\xa1\x6e\x05\x6c\x97\xbb\xd7\x8d\xda\xa0\xa6\x2c\xcc\xef\x85\x34\x0f\x42\x1a\x98\xf7\x7f\x55\xf5\x11\x97\x2b\xad\xca\xfc\x7f\xfa\x59\xe1\x0d\xa8\x30\x5a\xc8\xa4\xe7\xe5\x0c\x43\x47\xfc\xb3\x51\xcb\xdd\xab\xc5\x39\x4c\x2f\x5c\x67\xa8\xfc\xee\xbe\x7c\xbd\xb9\xf9\x63\xdb\xf8\x2f\x8b\x3b\x97\xe5\x47\xa5\x52\x98\x83\xcd\xca\x1d\x37\xdd\x9a\x8c\x0c\x9d\x34\xf0\xc9\xd4\x21\x36\xea\xb3\x52\x29\x9d\x34\xee\x13\xc6\x7c\x45\xd0\xd7\x83\x17\x82\xa7\xbb\x82\x4a\xfc\x7f\x0a\xb1\xff\xd8\x7c\x3a\x59\x68\x2c\x33\x10\xd2\x30\x17\xbf\x22\x24\xb0\xfc\x6b\xfe\xbd\xe4\x85\xb9\xe3\xc6\x08\x99\xbc\x4f\xe6\x58\x18\x21\x01\x97\x65\xb6\x30\xd6\xa4\x9e\xe1\xcc\xef\xc6\x65\x08\x91\xf7\x16\xff\x40\x02\x11\x23\xa0\x22\x41\xd0\x68\xbd\xe3\xa6\x2d\x1d\x45\xbe\x29\xb4\x6c\x8c\x04\x35\x09\x66\xb3\xc5\xf2\xaf\x9b\xcb\x33\x24\x15\x11\xd8\x56\x55\x32\x7d\x83\xc2\x28\xcd\x7f\x27\xe4\x80\xcb\xf6\xa4\xe3\xb2\x81\x51\x62\xa2\x73\x14\xd6\x40\xaf\xb8\x69\x9b\x85\x7a\x50\x9f\xa7\xb7\x68\x79\x12\x9d\xb3\x5e\xa4\xae\x6d\xee\x71\xfd\x01\xe6\x2e\x52\x1f\xd2\x36\xc8\xbd\x4d\x9a\xc5\xac\xca\xcc\x27\xda\x97\xda\x02\xf6\xca\x7c\xe8\x8f\x81\xfd\x91\x32\xba\xe4\x84\xd4\xae\xe2\xa3\xdb\x16\x58\xd5\x29\x14\xbe\xd2\x0c\x93\x3d\xa2\x5a\xa0\x9c\x82\x74\x62\x3a\x86\x51\x31\xed\x32\x6b\x47\xc0\x68\x05\x9f\xa7\xf0\xb2\xd7\x57\xc1\xe1\x09\xbd\x7f\xc6\xe0\x2f\x83\xd8\xd6\xfd\x78\x6c\x5f\xa2\x7e\x1e\x46\x84\x74\x65\xfb\x88\x10\x8b\x3c\x50\xb3\xb7\xfa\x13\x45\x16\xf3\x13\x59\x7b\xad\xd6\xd5\x85\x6a\x5e\x94\xa9\x71\x1a\xbb\xa1\x69\x55\xec\xbb\x74\x29\xa7\x52\xed\xba\x39\xcd\x20\x6a\xa7\x28\x8e\xe0\xc1\x60\x45\x52\x11\x03\xba\xf4\xad\xf3\x39\x48\x61\x13\x12\xa4\x2a\x39\xbd\x56\x09\xb5\xdf\xdb\xab\xed\xb7\xf3\xf5\x6a\x0a\x18\x89\x32\xf0\x8b\xe7\x3a\x29\x2c\xb8\x11\x88\xf6\x05\x9d\xf4\x18\xa5\x32\x10\xab\x52\xee\x5a\x65\x13\x46\x82\xa0\xc6\xe3\x0b\x3c\x2d\x38\x88\x18\x52\x2e\xe9\x40\xca\xa9\xdb\xc4\x7c\x0e\xbf\xc2\x8f\x1f\xa3\x88\xae\xf4\x0e\x86\x42\xc6\x58\x60\x0e\x5d\xa1\x46\x30\xdd\x85\x32\x1f\xa9\xe2\x7b\x0e\xee\x3a\x19\xf3\xb2\x2b\x76\x42\xf9\xcc\x0c\x38\x9a\x63\x3a\x2c\xda\x1d\x0f\x75\xf4\xb4\x94\xb1\xa2\xb9\x2a\xdc\x71\x8d\x7d\xe1\xd7\x3c\x5a\xc8\x29\x44\x4a\xee\x16\xde\x74\x61\xff\x67\x76\x44\xdb\x08\xfd\xa2\x9f\xee\x93\x21\x51\xe3\xcd\xc8\xd1\xb6\xb1\x70\x06\x54\xc8\x58\xb9\x20\x68\x71\x21\xfa\x7b\xd9\x8b\xe4\x9c\xde\x21\x2d\xae\x79\x18\x9f\x1b\xfa\xf7\xe0\x5e\x39\xce\xd8\x7a\xbc\x43\x7b\xa1\x4a\x69\x6e\x63\x7b\x0b\x51\x86\xd4\xbd\xc3\x82\x2d\x33\x36\x26\x8e\x91\xfd\x19\xa6\x25\xb7\x1b\x11\x5e\x24\x6e\xbe\xb5\xf6\x98\x0f\xd5\xf6\x7c\x8f\x07\xb0\x32\xcf\x0d\x15\xbb\x57\x17\x60\xec\x50\x1e\x0d\xd1\xf3\xb6\x21\xf6\x5e\x65\xdf\x84\x79\xba\xd4\xba\xff\x38\x6b\x96\x48\x80\x0b\x5c\x6b\xa5\x0f\x87\xa2\x90\x49\xca\x9d\xce\xd6\x61\x0a\xdc\xc1\xd9\x01\x7d\xa7\x6f\xb0\x52\x35\xbf\xcf\xac\xf2\x29\x5c\x6a\x7d\x06\xbc\xee\x22\xf2\x7f\x8e\x3d\x08\x6d\x12\xce\xf3\x3c\x7d\xf3\xef\x8b\xde\xc3\x82\xb9\xb6\xc6\xcb\x79\xf0\xa8\xf4\xfd\x8e\x86\x6b\x51\xe0\xc3\xca\xbd\x1d\x1b\x43\x55\x93\x8f\x0c\x03\x0b\x59\x4a\x61\x28\xdb\xef\xc6\xf7\xab\x68\x8f\x77\x41\xd9\xde\x53\xf2\x30\x3b\xc3\x79\x70\x8c\x73\xad\x94\xc1\x33\x87\x5f\xf7\x78\xf2\x05\x70\x53\xfa\x17\xaf\xd2\xc3\x70\xce\xf9\x40\x8d\x43\x55\x4f\xed\xec\xbd\x5c\xaf\xb7\xab\xdb\xed\x72\x75\x71\xfd\xf5\xcb\xe5\x76\x7d\x7b\xbb\x71\x43\x48\x29\x83\x49\x34\xca\x72\x58\xbe\xcf\x61\xd1\xbb\x34\x11\x31\xc5\xe1\x4f\x6a\xf2\x5f\x00\x00\x00\xff\xff\xba\x67\xd3\xd4\x92\x0c\x00\x00")

func template_genny_node_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_go,
		"../template/genny/node.go",
	)
}

var _template_genny_node_test_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcf\x6e\xf2\x30\x10\xc4\xcf\xde\xa7\x58\xe5\x80\xe2\xef\x8b\xe2\x9e\xab\xd2\x23\x12\x17\x84\x04\xf7\xca\x4e\x36\xc4\x22\xb1\x5d\xff\x39\x00\xe2\xdd\x2b\x9b\x50\xa4\xde\x3c\x1e\xff\x66\xd6\xeb\x64\x77\x96\x27\xc2\xef\x44\xfe\x02\xa0\x67\x67\x7d\xc4\x1a\x58\x15\x29\x44\x6d\x4e\x15\x00\x53\x58\x9d\x74\x1c\x93\x6a\x3b\x3b\x8b\xb3\xbc\x26\x31\xa8\x30\xd2\xe4\xc8\x8b\x42\x0a\x25\x03\x55\xc0\x01\x86\x64\x3a\x3c\x52\x88\x5f\x81\xa4\xef\xc6\xad\x19\x6c\x1d\xf1\xdf\x12\xd7\x1e\x39\xde\x00\x98\xc4\xf7\x35\xd2\xec\xe2\x65\x67\x7b\xda\xc9\x99\x6a\x0e\x4c\x88\xa7\xda\x68\x9a\xfa\xb0\x4b\xf3\xd6\xe8\x98\xad\xce\x9a\x3e\x33\x39\xbf\x76\x36\xa0\x36\xb1\x41\x6d\x06\x8b\xaa\xcd\x25\x1c\x95\xb5\x13\xde\x80\x31\x4f\x31\x79\x53\xcc\x76\x6f\x03\x7e\xac\x31\x13\xab\x15\xd6\xcf\xbb\xff\xe5\x70\xd0\x57\xe2\xf8\x99\x5d\x60\x4c\x88\x05\x8c\x3e\x11\xb0\x3b\x30\x4f\xdd\xc6\xfc\xb6\x06\x54\x6d\x9e\x6f\x2f\xe3\xf8\xa7\xfa\x56\xf0\xdc\x1c\xd2\x14\x71\x8d\xd2\x39\x32\x7d\xfd\xd0\x0d\x06\xbe\x3c\xc8\x54\x78\xf9\x45\x3e\xb2\x78\x69\x94\xed\xe1\xb5\xb6\xb7\x06\xcb\x04\x0d\xe6\xdf\x73\x80\x3b\xfc\x04\x00\x00\xff\xff\x93\x01\x9e\x3b\xb0\x01\x00\x00")

func template_genny_node_test_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_test_go,
		"../template/genny/node_test.go",
	)
}

var _template_genny_root_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x98\xcf\x8f\x9b\x38\x14\xc7\xcf\xf8\xaf\x70\x39\x8c\xcc\x36\x22\xcd\x0f\xa1\xa8\x6a\x0e\x9b\x95\x66\x3b\x52\x95\x59\x4d\x5b\xf5\xb0\xda\x03\x64\x4c\x82\x26\xc1\x2c\xd8\x99\x61\xa2\xfc\xef\xab\x67\x1b\x30\x24\x93\x2c\x2b\x96\x5e\xaa\xf8\xf9\xf9\xfd\xf8\xf8\xf1\x85\x4e\xe2\xaf\x9e\xfc\x35\xc5\x7f\x0b\x9a\xe6\x08\x45\xbb\x84\xa5\x1c\x13\x64\xd9\x11\xb3\x91\x65\x67\x3c\x5d\xb1\x78\x6f\x23\x64\x85\x5b\x9f\x07\x22\x0c\x69\x9a\x61\x7b\x1d\xf1\x8d\x08\xdc\x15\xdb\x0d\xd7\x8c\xad\xb7\x74\x68\x6c\x0f\xd7\xf2\xac\xe1\xf3\xe4\xbf\x8a\x61\x18\x64\x1b\xba\x4d\x68\x3a\x94\xd9\x86\x81\x9f\x51\x1b\x39\x08\xf1\x3c\xa1\x78\xc1\xd8\x16\xcf\x31\x18\x5d\xf8\xad\xad\x39\xa7\xa5\x35\xe7\x54\x59\xef\x62\x3e\x2b\xac\xf0\xbb\xb4\x8e\x3c\xc3\x3c\xf2\x4a\xfb\x64\x6c\xd8\x27\xe3\xd2\xee\x4d\x0d\xbb\x37\x55\xf6\xef\x91\x11\x5e\x2e\x2a\x7b\x95\x40\xad\xaa\x9d\x2a\x85\x5a\x55\x3b\x55\x12\xb5\x52\x3b\xb7\x5b\xe6\x1b\x87\xf4\xd2\xd8\xab\x8e\xe9\xa5\x06\xf5\x1b\xdb\xed\x58\xbc\x64\x8f\x25\x98\xca\x72\xe2\xf2\x25\xca\xf8\x39\xb7\x50\xc4\x2b\x4c\x77\x09\xcf\x2b\x2b\x71\xf0\x2f\x0d\x47\x7c\x40\x56\x4a\xb9\x48\x63\x7c\xd3\xd8\x3a\x1c\xd1\xf1\x7c\x1c\xc8\x09\xb1\x1a\x55\x18\xa1\xea\x3b\x46\xa4\xfb\x84\xc6\x24\xc5\x11\x73\x1f\xa8\xff\x48\xd3\x01\x5e\xf9\x09\x8e\x62\xee\xe0\x07\xc6\xf8\x37\x68\x4e\xc6\xc9\xc4\x96\xe3\x8f\xf3\xd2\x7a\xa8\x42\x7e\x54\xdd\xaa\x50\x32\x80\x73\x2c\x8e\x18\xf5\xbb\x4b\x7f\x07\x04\xed\x22\x84\x8d\x2c\x79\xf0\x2b\xe5\x60\x82\x6d\x72\xfe\x94\x53\x86\xbb\xa5\x7c\xb5\xb9\x8b\x1f\xe9\x0b\x71\xca\xf6\xd4\x1e\xb2\x86\x43\x6d\xf8\xb7\x45\x9a\x14\x16\xf9\x42\x84\x24\x10\x21\xfe\xf3\xaf\x20\xe7\xf4\xbf\x01\x28\xa3\xfc\x1c\x04\x45\x43\x9c\x41\x38\x12\xe8\xf9\x5a\xf8\x59\xa3\x9f\x95\x8c\x0e\xfd\xdc\xd4\x26\x4c\x6f\xb8\xc6\x28\xab\x39\x34\x66\xc7\xf4\x29\x46\x7d\x49\x9f\xe5\x44\x07\x03\x18\x1e\x62\x68\x93\xfb\x3b\xe5\xdf\xef\xc3\x30\xa3\xfc\x1b\x09\xdc\x07\xf2\xc1\x71\x1c\x28\x9c\xb1\xb7\x79\xaa\x0c\x47\xe5\x75\x05\xa0\x74\x39\x0f\x85\xb1\x0a\x09\x9c\xb8\x4d\xd9\x4e\x05\x23\xab\x93\x47\xaf\x79\xe1\xf5\x49\x42\x96\x55\x2b\xd0\x85\x1d\x1d\xcb\x19\x20\xab\x1a\x26\x12\x03\x97\xe2\xa0\x83\x97\xf4\x05\x9e\x4e\x33\x78\xc6\xfd\x54\x36\x0f\xae\xee\x17\x1a\x13\x07\x21\x2b\x0a\xcb\x35\x0c\x91\x83\x3f\x61\xe5\x08\xc9\x75\x3d\xe0\x00\xc9\x90\x15\xd3\x67\xb8\xd6\x32\xca\x42\x5d\xc3\x0b\x87\x1f\x44\x1e\x84\xa0\x27\x98\x4f\xa1\xe2\xf9\xa9\x30\x69\xa7\x8b\x63\x50\x7a\x34\x87\x40\x97\x76\x79\x14\xb4\x93\x31\x10\x67\x2e\xad\xc9\xf2\x2e\xce\x68\xca\x81\x4e\xc2\xb2\x01\xce\xa2\x57\xaa\xc4\xea\x80\x2c\x49\xc1\x18\x95\x33\xbe\xce\x9b\x81\x3f\xfb\x99\xbe\xa7\x00\x5e\x8b\x07\x84\x4c\xe2\xe5\x95\xbc\x9f\xe2\x4f\xe6\xa5\xbd\x15\xee\x47\xc4\x37\x9f\xa5\xa0\x36\x6e\x3e\x0a\xf1\xbb\x58\x55\x27\x9f\x50\x59\xb9\xb5\x91\xae\x70\x4d\x3b\xff\x89\x12\x25\x40\x03\x3c\x73\x90\x65\x25\x2c\x2b\xef\x58\xf6\xf5\x07\xcb\xf0\x7b\x3c\x43\x96\xf9\x81\xe0\xfe\x48\x23\x4e\xd5\x8b\x90\x6c\xb4\x94\x0b\xb5\x4c\x58\x06\x7c\x0b\x40\x49\x4e\x8a\xdb\x92\xa3\xa2\xbc\x9d\x01\xfe\x30\xc0\x33\xf5\x2f\x0c\x8e\xd5\xc8\x38\x87\x94\xc7\x1a\x96\xb2\xfd\x5f\x39\x8b\x48\x86\x33\x9e\x46\xf1\xda\xc1\x24\x8a\xf9\x00\xd3\x34\x65\xa9\x23\x51\xc6\x72\x05\x6d\xe8\xcf\x1b\x57\x9d\x70\x24\x10\xd8\x7a\x37\xc7\x71\xb4\xc5\x37\x37\x38\xc3\xf3\x39\xb6\x6f\x23\xba\x7d\x5c\x8a\x9d\x2d\xf9\x80\x87\x74\xa8\x55\x20\x83\x96\x35\xc0\xb3\x0d\x9f\x31\x64\x2f\xaf\xb0\xf6\x3a\x94\x45\x18\x92\x77\xfa\x66\x6d\xa5\x7b\x5a\x83\x20\x9b\x7d\x49\x0d\xc7\x75\xd0\xb5\xbb\x55\xb2\x1f\xbd\xd2\xfb\x50\x96\xab\xf8\xf3\x54\x80\xd2\x1b\x21\xa5\x4f\x11\xb7\xf2\x2f\x7d\xbe\x52\xae\xba\xae\x9e\x20\xb5\x53\x07\x93\x73\x0a\x60\xe4\x7b\xed\xff\x07\x93\x73\xda\x09\x18\x28\xb7\x0d\x18\xf8\x5e\x35\xc1\xc8\xae\x2f\x82\x81\x8f\x59\xb2\x07\x0d\x99\xf5\x00\x06\xb2\x75\x01\x46\x96\xdb\x02\x8c\xfc\xa4\x36\xc0\xa8\xae\xaf\x81\x19\x79\x8a\xcc\xc8\xeb\x07\xcd\xc8\xeb\x88\xcd\xc8\x6b\x09\x67\xe4\x35\xe8\x40\xeb\xd7\xf0\x4c\xc6\x0a\xcf\x64\xdc\x0f\x9e\xc9\xb8\x23\x3c\x93\x71\x4b\x3c\x93\x71\x03\x0f\xb4\x7e\x0d\x8f\x37\x55\x78\xbc\x69\x3f\x78\xbc\x69\x47\x78\xbc\x69\x4b\x3c\xde\xb4\x81\x07\x5a\xbf\x88\x47\xfe\x1f\x97\xec\xe5\x0b\xba\x0f\xdd\x91\xf9\xba\xc0\x23\xda\x2a\x8f\x68\x4a\x8f\x6e\xfd\x2a\x1e\x29\x3e\xa2\x2f\xf5\x51\x19\xbb\x22\xd4\x4e\x7f\xc4\x89\x00\x15\xfd\x5f\x85\x24\x25\x48\xf4\xa5\x41\x2a\x63\x57\x90\xda\xa9\x90\x38\x91\xa1\xa2\xff\xab\x90\xa4\x10\x89\xbe\x94\x48\x65\xec\x0a\x52\x3b\x2d\x12\x27\x62\x54\xf4\x7f\x11\x92\xfe\x4b\x18\xd9\xe3\x50\xfd\xea\x01\x93\xce\xd9\x05\xa7\xa2\xe8\x16\xa0\xf4\x11\x93\x54\x09\xe1\x3a\x2a\x39\x50\xa1\xfa\xd5\x17\xaa\x6e\x46\xaa\x28\xba\x2d\xaa\xfa\x50\x95\x10\xce\xa0\xfa\x27\x00\x00\xff\xff\xb0\xb9\x11\x15\xdf\x16\x00\x00")

func template_genny_root_go() ([]byte, error) {
	return bindata_read(
		_template_genny_root_go,
		"../template/genny/root.go",
	)
}

var _template_genny_union_alias_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcb\x6a\xeb\x30\x10\x86\xd7\x9e\xa7\x18\xb4\x38\xd8\xe1\x60\xed\x03\x5e\x94\x96\x42\xa1\x09\x85\x92\x75\x91\xed\x89\x2d\xa2\x8b\xab\x4b\x69\x1a\xf2\xee\x45\x0e\x95\xbd\xc8\x6e\xe6\xff\x3f\x7d\x8c\x26\xd1\x9d\xc4\x40\xf8\x19\xc9\x9d\x01\xf8\x06\x06\x32\xe6\x8c\x3a\xfa\x80\x2d\x61\x27\x94\xa2\x1e\x27\x72\x78\x30\xd2\x9a\xbd\xd0\x04\x1b\x0e\x20\xf5\x64\x5d\xc0\x12\x0a\x36\xc8\x30\xc6\xb6\xee\xac\xe6\x27\xf1\x13\xf9\xb1\xf5\x23\xa9\x89\x1c\x9f\xad\xbc\x15\x9e\x18\x54\x00\x5f\xc2\xe1\xd3\x61\xb7\x7b\xfb\xc8\xae\x07\x25\x85\x4f\x03\xb6\xd6\x2a\x6c\x30\xc1\xf5\x3b\x85\xb9\x28\x59\x06\xd9\x7f\x64\x19\x66\x15\xc0\x31\x9a\x0e\x4b\x63\x7b\x5a\x2e\xab\x30\x23\xe5\x6a\xc6\x0b\x14\x9c\x3b\xf2\x51\x05\xdc\x36\x4b\x71\x79\xb4\x5a\x5b\xb3\xb7\x3d\x6d\x31\xa9\xea\x25\xb8\x42\x71\xef\x45\x8e\x57\x28\x36\xf8\x6f\xd9\x56\x48\x5a\x5f\xa5\x0f\xd8\xdc\xec\x7f\xfb\x1d\x47\x3d\x1f\xda\xac\x3f\x99\xa9\x67\x0a\xdd\xf8\x62\x7a\xfa\x2e\xab\x14\x86\xe8\x0c\xde\x3a\xb8\xc2\x6f\x00\x00\x00\xff\xff\xbc\x73\x10\xa1\xc3\x01\x00\x00")

func template_genny_union_alias_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_alias_go,
		"../template/genny/union-alias.go",
	)
}

var _template_genny_union_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x3d\x6e\xc3\x30\x0c\x85\xe7\xf0\x14\x0f\x1e\x02\xdb\x43\x84\xae\x01\x32\x75\x6e\xb6\x1e\x40\x56\x68\x47\x88\xf5\x53\x89\x1a\x5c\xc3\x77\x2f\xec\xa0\x4e\xd1\x85\x03\xf9\xbe\x8f\x2f\x6a\xf3\xd0\x03\xe3\xab\x70\x9a\x88\x54\x4b\x00\x06\xf6\x7e\x82\x2b\x59\xd0\x31\x8c\x1e\x47\xbe\xe1\x0d\x62\x1d\x67\x44\x4e\xb8\x86\x1b\x5f\xb5\x63\x6a\x15\x91\x75\x31\x24\x41\x4d\x87\x6a\xb0\x72\x2f\xdd\xc9\x04\xa7\x1e\xfa\xbb\xa8\xbe\xcb\x77\x1e\x23\x27\xb5\xf9\x55\xa7\x33\x57\xd4\x10\xc9\x14\x19\x9f\xde\x06\xbf\x6a\x90\x25\x15\x23\x98\xe9\xd0\xae\x91\xd3\x7b\x70\x2e\xf8\xf5\x0b\x2d\x44\x7d\xf1\x06\xec\xa2\x4c\x3b\x51\x37\x68\x5f\xf8\x4c\x87\xc4\xb9\x8c\x82\xf3\x05\xc7\x7d\x3f\xbf\x34\x67\x1c\xff\x89\xe7\x65\xf9\xa5\x4e\x9b\xe4\x82\x6a\x27\xab\xf5\x24\x25\x79\x3c\x13\x7b\x8b\xda\x87\xdb\x9f\xe2\x0d\x3e\xd8\x75\x9c\x6a\x0b\xeb\xa5\x59\x07\xa7\x5e\x1b\x9e\x97\x67\xa9\xcd\xe1\xed\x48\x0b\xfd\x04\x00\x00\xff\xff\x03\x6e\x01\x72\x6a\x01\x00\x00")

func template_genny_union_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_go,
		"../template/genny/union.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"../template/genny/basic.nogo": template_genny_basic_nogo,
	"../template/genny/dummy.go": template_genny_dummy_go,
	"../template/genny/field.go": template_genny_field_go,
	"../template/genny/list.go": template_genny_list_go,
	"../template/genny/node.go": template_genny_node_go,
	"../template/genny/node_test.go": template_genny_node_test_go,
	"../template/genny/root.go": template_genny_root_go,
	"../template/genny/union-alias.go": template_genny_union_alias_go,
	"../template/genny/union.go": template_genny_union_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"..": &_bintree_t{nil, map[string]*_bintree_t{
		"template": &_bintree_t{nil, map[string]*_bintree_t{
			"genny": &_bintree_t{nil, map[string]*_bintree_t{
				"basic.nogo": &_bintree_t{template_genny_basic_nogo, map[string]*_bintree_t{
				}},
				"dummy.go": &_bintree_t{template_genny_dummy_go, map[string]*_bintree_t{
				}},
				"field.go": &_bintree_t{template_genny_field_go, map[string]*_bintree_t{
				}},
				"list.go": &_bintree_t{template_genny_list_go, map[string]*_bintree_t{
				}},
				"node.go": &_bintree_t{template_genny_node_go, map[string]*_bintree_t{
				}},
				"node_test.go": &_bintree_t{template_genny_node_test_go, map[string]*_bintree_t{
				}},
				"root.go": &_bintree_t{template_genny_root_go, map[string]*_bintree_t{
				}},
				"union-alias.go": &_bintree_t{template_genny_union_alias_go, map[string]*_bintree_t{
				}},
				"union.go": &_bintree_t{template_genny_union_go, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
