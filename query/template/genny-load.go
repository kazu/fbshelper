package query

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _template_genny_basic_nogo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x4f\x4f\x84\x30\x10\xc5\xcf\x3b\x9f\x62\xc2\xc1\x80\x21\x60\x3c\x9a\x70\x59\x13\x4f\x66\x3d\xac\x37\xe3\xa1\xad\x03\x34\x58\x8a\xfd\xa3\x61\x37\xfb\xdd\x4d\xc1\xc2\xe2\xa5\xe9\xeb\xfb\xbd\x37\xcd\x0c\x4c\x74\xac\x21\xfc\xf2\x64\x46\x00\xa9\x06\x6d\x1c\xa6\xb0\x4b\x1a\xe9\x5a\xcf\x0b\xa1\x55\x29\x5a\xa2\x6e\xe4\xd2\xd9\xb2\xa1\xbe\x1f\xc3\x49\x46\x8a\x64\x8b\x75\xec\xe4\xcb\x9a\xdb\x96\x3e\x07\x32\xe5\x54\x59\x72\x66\x29\x81\x0c\xc0\x8d\x03\xe1\x9e\x59\x29\x5e\xc3\xed\xaf\xa2\x38\x78\xc5\xc9\x00\xd4\xbe\x17\xf8\x64\xb4\x5a\x90\xf4\x7b\xc5\x33\xbc\x7d\xd4\x4a\xe9\xfe\xa0\x3f\x08\xcf\x00\x3b\x31\x49\x7c\xa8\xf0\x26\x8c\x28\x56\xfb\x7c\x89\x6e\x11\xe4\xb3\xb4\x0e\x23\x15\x1f\xae\x19\xa6\x08\x2b\x4c\x96\x59\xc9\x26\x8e\x15\xce\x49\xfa\x09\xf2\x3e\x8d\x6a\xcf\x2c\xa5\x8a\x75\x94\xbe\xbd\xf3\xd1\x51\x3e\x73\x47\x79\xa2\x97\x7a\xfd\x78\x96\xe3\x5d\x8e\xce\x78\xca\x36\xbd\x13\x18\xcb\xff\x85\x16\xf0\x48\xee\x6a\x1d\x19\xec\x0c\x39\x6f\x7a\x9c\x6d\xb8\xc0\x6f\x00\x00\x00\xff\xff\xfa\xfb\xaf\x05\xbf\x01\x00\x00")

func template_genny_basic_nogo() ([]byte, error) {
	return bindata_read(
		_template_genny_basic_nogo,
		"../template/genny/basic.nogo",
	)
}

var _template_genny_dummy_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xb1\x6e\xeb\x30\x0c\x45\x67\xf3\x2b\x88\x0c\x41\x92\x21\x7a\xc3\x9b\x0a\x74\x68\x0b\x74\x74\x81\xb6\x3f\x20\xcb\xb4\x2d\x44\x94\x54\x89\x1a\x1c\xc3\xff\x5e\x38\x69\xe0\x4c\x45\x37\xe1\xde\xa3\x73\x19\xb5\x39\xe9\x9e\xf0\xab\x50\x1a\x01\x94\x42\x19\x6c\x46\x9b\xb1\x2d\xcc\x23\xf6\xe4\xfd\x88\x42\x1c\x9d\x16\xc2\xce\x3a\x02\xcb\x31\x24\xc1\x1d\x54\x9b\xde\xca\x50\x9a\xa3\x09\xac\x4e\xfa\x5c\x54\xd7\xe4\x81\x5c\xa4\xa4\x2e\x42\xd5\xe8\x4c\x1b\xa8\x1a\xfc\x23\xb9\x07\x90\x31\x12\xbe\x53\x2e\x4e\x3e\x97\x67\x1d\x5a\xaa\x35\xd3\xad\x09\xe1\x9a\x67\x49\xc5\x08\x4e\x50\x1d\x9a\xe3\x4b\x60\x0e\x7e\x41\x61\xfe\x01\x9f\x9c\xd5\x79\xf9\xf8\x1b\xd9\x15\x6f\x90\x38\xca\xb8\x2e\xee\xf6\x78\xb8\xdb\x9f\xa0\x4a\x24\x25\x79\xdc\xae\xe9\xb4\x6a\x1e\x70\xbb\xdc\x7e\x27\x9e\xe6\x79\x71\x9b\xe0\xb3\xe0\xab\x25\xd7\xd6\x85\xd1\x7a\xc1\x47\xfc\x77\xcb\x3f\xec\x99\xde\xba\x67\x9d\xad\xb9\xcc\x5c\xeb\xff\xf0\x1d\x00\x00\xff\xff\x20\xb9\x45\xb7\x91\x01\x00\x00")

func template_genny_dummy_go() ([]byte, error) {
	return bindata_read(
		_template_genny_dummy_go,
		"../template/genny/dummy.go",
	)
}

var _template_genny_field_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x4d\x8f\xdb\x20\x14\x3c\xe7\xfd\x8a\x27\x4e\x10\xa5\xf6\xbd\x92\x2b\x45\xfd\x52\xa5\x6e\x0e\xdd\xf4\xd0\xd3\xca\x1f\x2f\x09\x8a\x6d\x28\x86\x68\xdd\xd5\xfe\xf7\x0a\x6c\x43\xda\xa6\xc9\x21\x66\x98\x61\x98\x37\xb6\x2e\xeb\x73\x79\x24\xfc\xe9\xc8\x8c\x00\xb2\xd3\xca\x58\xe4\xb0\x62\x47\x69\x4f\xae\xca\x6a\xd5\xe5\xf5\x89\xe8\x3c\x56\xd2\x0e\xf9\x91\xfa\x7e\xf4\xff\x64\x64\xcd\xfe\x94\x9d\xcb\x5f\x2e\x3f\x54\xc3\x89\x5a\x4d\x26\x0f\x96\x79\x55\x0e\xc4\x40\x00\xe4\x6b\x08\x87\xb1\x73\x83\xc5\x8a\xb0\x2e\xdb\x96\x1a\xd4\x64\xf0\x93\xa4\xb6\x81\x75\x0e\x60\x47\x4d\x13\xdc\x95\x1d\xe1\x7c\x51\xb6\x1f\x35\x5d\x93\x1e\xff\x45\x5e\x4a\xe3\x73\xef\x54\x43\xfe\xe8\x53\x34\x99\x57\xae\x43\xd9\x5b\x2c\xd0\x27\xca\xb6\x56\xc9\x9d\xfa\x68\x0c\xf7\x2b\xce\x16\x0d\x13\xe2\x96\x07\xc6\xdf\xe4\x71\xe7\x96\x30\x6b\x8e\xfc\xe0\x31\xca\x9e\x9a\xe7\x0d\x4e\xc0\xe7\x17\xf8\xe6\x1d\xa6\xf3\x5f\x9a\xe7\xbd\x0a\x03\xf8\xfc\x1f\xbe\x3f\x3c\xfc\x78\xba\x71\x7d\xa5\x54\x8b\x05\x3e\x92\x5d\xc8\xc0\x0d\x9c\x2d\x98\x6d\x90\x45\x7d\x04\xde\x99\x6d\xee\xc5\x15\x00\x07\xd7\xd7\xc8\x7b\xd5\x50\x14\x8a\xf4\x0e\xb8\x40\x6e\x68\x70\xad\xc5\xf5\xb7\xf0\xdc\x87\x31\x5e\x60\x35\x6f\x17\x48\x9d\xb6\x63\x22\xb9\x80\x55\xad\xba\x4e\xf5\xf8\xb6\x40\x6f\x9c\x05\xbb\xad\xe5\xf7\x93\xcc\x8e\x59\x98\xb9\xc0\xc9\x23\xa0\x44\xa9\x86\xbe\xca\xc1\x5e\xd1\xf3\x4e\x94\xc4\x4e\x93\x26\xd5\xfc\x8f\xe8\xb3\x51\x4e\xdf\x50\x86\xfd\x10\xc9\x3a\xd3\xc3\xeb\x7f\x7a\x7a\x24\x9b\xaa\xba\xe0\x3a\x7c\x5d\xef\x83\x97\x17\x09\x24\x63\x94\xc1\x97\xe8\x34\xf5\x91\x14\xd9\xe2\xb0\xb5\x7c\xa9\x62\x83\x17\x01\xaf\xf0\x3b\x00\x00\xff\xff\x84\x25\xaf\x6c\x9d\x03\x00\x00")

func template_genny_field_go() ([]byte, error) {
	return bindata_read(
		_template_genny_field_go,
		"../template/genny/field.go",
	)
}

var _template_genny_list_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x4f\x8b\xdb\x3e\x10\x3d\x47\x9f\x62\xc8\x21\x58\xc1\x3f\x7b\x7f\xd7\x80\x0f\xcb\x42\x61\x21\xe4\xd2\xb2\x97\x65\x29\x8a\x33\xce\x8a\x58\x92\x2b\x4b\x94\xd4\xf8\xbb\x97\xf1\x5f\x35\xd4\x9b\x52\x7a\x30\x98\x99\xd1\x7b\x6f\x9e\x9e\x2a\x91\x5f\xc4\x19\xe1\x9b\x47\x7b\x65\x4c\xaa\xca\x58\x07\xeb\xb3\x74\xef\xfe\x98\xe4\x46\xa5\x17\xf1\xc3\xa7\xc5\xb1\x7e\xc7\xb2\x42\x9b\x76\x83\xe9\x51\xd4\xb8\x66\xcc\x5d\x2b\x84\xbd\xac\xdd\x17\xfa\xa9\x9d\xf5\xb9\x83\x06\xd2\x14\xce\xa8\xf5\x95\xad\xb6\x4f\x46\x29\xa3\x0f\xe6\x84\xac\x65\x2c\x4d\x81\x7e\x0f\x42\xe1\x30\x51\x78\x9d\xc3\x01\xbf\x8f\x20\x11\x87\xed\x04\xd8\x30\xb6\x2a\x65\xed\x60\x97\x01\xaa\xca\x5d\xe7\xa9\xbe\x91\x10\x1a\x15\x21\x83\x0d\x69\x9a\x0a\x4d\x3b\x4c\xcc\x02\x92\x8e\x36\x83\xf5\xeb\xdb\x28\x62\x3d\x10\x24\xcf\x5a\x3a\x3a\x46\xc0\x16\x9d\xb7\x1a\xa8\x4e\x9a\x3b\x85\x37\xec\xbf\x68\x1c\x0f\x6c\xc6\x5a\x33\x73\xee\x06\x59\x73\xa5\x69\xdb\x09\x35\xd2\xe6\x34\xfb\xc7\xe1\xd1\x45\x12\xa4\x76\x1c\x22\x8b\xb5\x2f\x1d\x6c\x47\xa5\x31\x20\xa0\xb5\xc6\xf2\x9e\xb1\xeb\x66\xb0\x19\xfb\xb4\x6f\x5f\x0d\xb8\xe8\x50\x06\x44\x12\xda\x40\x2c\xd3\x9a\x8b\x5a\x3e\x49\x4b\x76\xdc\x57\xd2\xed\xae\x07\xe0\x07\xbe\x08\xb8\x17\x7f\x81\x27\xb5\xeb\x70\xa6\x7b\x4d\x5e\x44\xe9\xf1\x59\x17\x26\x79\xd9\xa3\xe6\xf0\x1f\xfc\xbf\xcc\xf9\x19\x4b\xcc\x5d\x54\x68\xa0\x76\x34\x71\x72\x38\x1a\x53\xce\x62\x5e\xdf\x82\x56\xe8\xaf\x12\x17\x8c\x82\x6e\x0c\x0f\x31\xdc\x15\xc5\xd9\x2a\xef\xfc\xae\x29\xb9\xb7\xfe\x8f\xa2\x48\x51\xae\x20\x78\x22\xbd\x2c\x12\x30\xfa\x50\xe8\x68\xbe\xe2\x30\x56\xb9\x6a\x39\x5b\xd1\x57\x18\x0b\x5f\x63\xc8\x15\x71\x59\xa1\xcf\x08\x23\x79\x0f\x34\xac\x22\xaa\x0a\xf5\x69\xd8\x38\x86\x0f\x61\xa7\x7b\xe8\xa7\x3f\x08\x89\x3e\x2d\xbb\x3b\x15\x02\x4b\x77\xf7\x32\xfb\x9b\xc0\xf6\x2c\xff\xc8\xae\x3f\x5b\xec\xb1\x2c\x23\x1e\xc6\xe2\x36\x9b\xe1\x25\xde\x2c\x0e\x0d\x0c\x93\xce\x7a\x84\x76\x39\x9e\x4f\xc6\x6b\x7a\x13\x52\xbb\x00\xff\x6e\xbc\x58\xcb\x7e\x06\x00\x00\xff\xff\x9c\x14\xb9\x3f\xb7\x05\x00\x00")

func template_genny_list_go() ([]byte, error) {
	return bindata_read(
		_template_genny_list_go,
		"../template/genny/list.go",
	)
}

var _template_genny_node_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\xea\xc3\x42\x0c\x84\xb8\xbd\x1a\x30\x8a\x6c\x36\x0e\x0c\x24\x4e\xe1\x78\xbb\x05\x82\xc0\x50\x64\x4a\x61\x23\x91\x5a\x8a\x4a\x93\x6a\xf5\xdf\x8b\x21\xa9\x0f\xcb\xb2\x37\xbd\x44\xf1\xf0\xcd\x9b\xc7\x19\xce\x90\x79\x18\xbd\x84\x09\x83\xef\x25\x53\xef\x84\xf0\x2c\x97\x4a\x83\x4f\xbc\x49\xc2\xf5\x73\xf9\x74\x1e\xc9\x6c\xfa\x12\xfe\x5b\x4e\xe3\xa7\xe2\x99\xa5\x39\x53\x53\x83\x9d\x3e\x85\x05\x9b\x7c\x00\x97\xca\x64\x42\x28\x21\xd3\x33\x02\x00\x59\x59\x68\x88\xc2\x34\x85\xdf\x40\xf3\x8c\x15\x90\x33\x05\x9b\xf0\x29\x65\xd3\x42\xab\x32\xd2\xfe\x4a\xee\xd8\x2a\xcc\x18\x25\x67\x53\x42\xf4\x7b\xce\xa0\x31\x81\x85\x40\x45\xbc\x33\x8c\x7f\x7e\x29\xb3\x4c\x0a\x5c\x26\x35\x21\x71\x29\x22\x60\x59\xae\xdf\x1b\x07\x9f\xc2\x59\xeb\x5c\x11\x4f\x31\x5d\x2a\x01\x9f\x1a\x5b\xd5\x11\xcc\xe0\xd3\x80\xb2\xaa\x6b\x64\x7d\x0d\x55\x2b\x60\xbb\xdc\xbd\x6d\xe4\x06\x35\x65\x61\xfe\xc0\x85\x7e\xe4\x42\xc3\xbc\xff\xab\xaa\x8f\xb8\x5c\x2b\x59\xe6\xff\xd3\xcf\x08\x6f\x40\x85\x56\x5c\x24\x3d\x2f\x6b\x18\x3a\xe2\x9f\x8d\x5c\xee\xde\x0c\xce\x62\x7a\xe1\x3a\x43\xe5\x76\xf7\xe5\xeb\xed\xed\x1f\xdb\xc6\x7f\x59\xdc\xdb\x2c\x3f\x49\x99\xc2\x1c\x4c\x56\xee\x99\xee\xd6\x44\xa4\xfd\x49\x03\x9f\x04\x16\xb1\x91\x9f\xa5\x4c\xfd\x49\xe3\x3e\xa1\xd4\x55\x04\x7d\x1d\x78\xc1\x59\xba\x2b\x7c\x81\xff\x07\x10\xbb\x8f\xc9\xa7\x95\x85\xc6\x32\x03\x2e\x34\xb5\xf1\x2b\x42\x3c\xc3\xbf\x66\xdf\x4b\x56\xe8\x7b\xa6\x35\x17\xc9\x69\x32\xcb\x42\x09\xf1\x98\x28\xb3\x85\x36\x26\xf9\x02\x33\xb7\x1b\x9b\x21\x44\x3e\x18\xfc\x23\xf1\x78\x8c\x80\x8a\x78\x5e\xa3\xf5\x9e\xe9\xb6\x74\x3e\xf2\x05\xd0\xb2\x51\xe2\xd5\xc4\x9b\x4e\x17\xcb\xbf\x6e\xaf\x66\x48\xca\x23\x30\x47\x55\x8a\xf4\x1d\x0a\x2d\x15\xfb\x9d\x90\x03\x2e\x73\x26\x2d\x97\x09\x8c\x12\x13\x95\xa3\xb0\x06\x7a\xcd\x74\x7b\x58\x7c\x07\xea\xf3\xf4\x16\x0d\x4f\xa2\x72\xda\x8b\xd4\x1d\x9b\x07\x5c\x7f\x84\xb9\x8d\xd4\x87\xb4\x07\xe4\xc1\x24\xcd\x60\x56\x65\xe6\x12\xed\x4a\x6d\x00\x7b\x65\x3e\xf4\xc7\xc0\xae\xa5\xb4\x2a\x19\x21\xb5\xad\xf8\xe8\xb6\x39\x56\x35\x80\xc2\x55\x9a\x62\xb2\x47\x54\x73\x94\x53\x90\x4e\x4c\xc7\x30\x2a\xa6\x5d\xa6\xed\x08\x18\xad\xe0\x4b\x00\xaf\x7b\xe7\xca\x3b\xec\xd0\x87\x17\x0c\xfe\x3a\x88\x6d\xdc\x8f\xc7\x76\x25\xea\xe7\x61\x44\x48\x57\xb6\x8f\x08\x31\xc8\x03\x35\x7b\xab\x3f\x51\x64\x30\x3f\x91\xb5\x77\xd4\xba\xba\xf8\x8a\x15\x65\xaa\xad\xc6\x6e\x68\x1a\x15\xfb\x2e\x5d\xca\x7d\x21\x77\xdd\x9c\xa6\x10\xb5\x53\x14\x47\xf0\x60\xb0\x22\x29\x8f\x01\x5d\xfa\xd6\xf9\x1c\x04\x37\x09\xf1\x52\x99\x9c\xdf\xc8\xc4\x37\xdf\xbb\xeb\xed\xb7\x8b\xf5\x2a\x00\x8c\xe4\x53\x70\x8b\x17\x2a\x29\x0c\xb8\x11\x88\xf6\x85\x3f\xe9\x31\x0a\xa9\x21\x96\xa5\xd8\xb5\xca\x26\x94\x78\x5e\x8d\xed\x0b\x2c\x2d\x18\xf0\x18\x52\x26\xfc\x81\x94\x73\xbb\x89\xf9\x1c\x7e\x85\x1f\x3f\x46\x11\x5d\xe9\x2d\x0c\x85\x8c\xb1\xc0\x1c\xba\x42\x8d\x60\xba\x0b\x65\x3e\x52\xc5\x53\x0e\xf6\x3a\x19\xf3\x32\x2b\x66\x42\xb9\xcc\x0c\x38\x9a\x36\x1d\x16\xed\x9e\x85\x2a\x7a\x5e\x8a\x58\xfa\xb9\x2c\x6c\xbb\xc6\xae\xf0\x6b\x16\x2d\x44\x00\x91\x14\xbb\x85\x33\x5d\x9a\xff\xa9\x19\xd1\x26\x42\xbf\xe8\xe7\xfb\x64\x48\xd4\x78\x53\x72\xf4\xd8\x18\x38\x05\x9f\x8b\x58\xda\x20\x68\xb1\x21\xfa\x7b\xd9\x8b\x64\x9d\x4e\x90\x16\x37\x2c\x8c\x2f\xb4\xff\xf7\xe0\x5e\x39\xce\xd8\x7a\x9c\xa0\xbd\x94\xa5\xd0\x77\xb1\xb9\x85\x7c\x8a\xd4\xbd\x66\xc1\x23\x33\x36\x26\x8e\x91\xfd\x19\xa6\x25\x33\x1b\xe1\x4e\x24\x6e\xbe\xb5\xf6\x98\x0f\xd5\xf6\x7c\x8f\x07\x30\x32\x2f\xb4\xcf\x77\x6f\x36\xc0\x58\x53\x1e\x0d\xd1\xf3\x36\x21\xf6\x5e\x65\xdf\xb8\x7e\xbe\x52\xaa\xff\x38\x6b\x96\x88\x87\x0b\x4c\x29\xa9\x0e\x87\x22\x17\x49\xca\xac\xce\xd6\x21\x00\x66\xe1\xf4\x80\xbe\xd3\x37\x58\xa9\x9a\xdf\x33\xa3\x3c\x80\x2b\xa5\x66\xc0\xea\x2e\x22\xfb\xe7\xd8\x83\xd0\x44\x9f\xcd\x87\xaf\x46\x77\xa0\xd1\x70\xc3\x0b\x7c\x39\xd9\xc7\x61\x63\xa8\x6a\xf2\x91\x6e\x37\x90\xa5\xe0\xda\xa7\xfb\xc7\xed\x74\x99\x4c\xff\x16\x3e\xdd\x7b\x2b\x1e\x6e\x7f\xd8\xf0\xc7\x38\xd7\x52\x6a\x6c\x2a\xfc\xda\xd7\x91\xcb\xb0\x1d\xc3\xbf\x38\x95\x0e\x86\x83\xcc\x05\x6a\x1c\xaa\x3a\x30\xc3\xf5\x6a\xbd\xde\xae\xee\xb6\xcb\xd5\xe5\xcd\xd7\x2f\x57\xdb\xf5\xdd\xdd\xc6\x4e\x19\x29\x35\x26\x51\x4b\xc3\x61\xf8\x3e\x87\x45\xef\x56\x44\x44\x80\xd3\x9d\xd4\xe4\xbf\x00\x00\x00\xff\xff\x8c\xef\xa8\xe7\x73\x0c\x00\x00")

func template_genny_node_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_go,
		"../template/genny/node.go",
	)
}

var _template_genny_node_test_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcf\x6e\xf2\x30\x10\xc4\xcf\xde\xa7\x58\xe5\x80\xe2\xef\x8b\xe2\x9e\xab\xd2\x23\x12\x17\x84\x04\xf7\xca\x4e\x36\xc4\x22\xb1\x5d\xff\x39\x00\xe2\xdd\x2b\x9b\x50\xa4\xde\x3c\x1e\xff\x66\xd6\xeb\x64\x77\x96\x27\xc2\xef\x44\xfe\x02\xa0\x67\x67\x7d\xc4\x1a\x58\x15\x29\x44\x6d\x4e\x15\x00\x53\x58\x9d\x74\x1c\x93\x6a\x3b\x3b\x8b\xb3\xbc\x26\x31\xa8\x30\xd2\xe4\xc8\x8b\x42\x0a\x25\x03\x55\xc0\x01\x86\x64\x3a\x3c\x52\x88\x5f\x81\xa4\xef\xc6\xad\x19\x6c\x1d\xf1\xdf\x12\xd7\x1e\x39\xde\x00\x98\xc4\xf7\x35\xd2\xec\xe2\x65\x67\x7b\xda\xc9\x99\x6a\x0e\x4c\x88\xa7\xda\x68\x9a\xfa\xb0\x4b\xf3\xd6\xe8\x98\xad\xce\x9a\x3e\x33\x39\xbf\x76\x36\xa0\x36\xb1\x41\x6d\x06\x8b\xaa\xcd\x25\x1c\x95\xb5\x13\xde\x80\x31\x4f\x31\x79\x53\xcc\x76\x6f\x03\x7e\xac\x31\x13\xab\x15\xd6\xcf\xbb\xff\xe5\x70\xd0\x57\xe2\xf8\x99\x5d\x60\x4c\x88\x05\x8c\x3e\x11\xb0\x3b\x30\x4f\xdd\xc6\xfc\xb6\x06\x54\x6d\x9e\x6f\x2f\xe3\xf8\xa7\xfa\x56\xf0\xdc\x1c\xd2\x14\x71\x8d\xd2\x39\x32\x7d\xfd\xd0\x0d\x06\xbe\x3c\xc8\x54\x78\xf9\x45\x3e\xb2\x78\x69\x94\xed\xe1\xb5\xb6\xb7\x06\xcb\x04\x0d\xe6\xdf\x73\x80\x3b\xfc\x04\x00\x00\xff\xff\x93\x01\x9e\x3b\xb0\x01\x00\x00")

func template_genny_node_test_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_test_go,
		"../template/genny/node_test.go",
	)
}

var _template_genny_root_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x98\xcd\x6e\xdb\x38\x10\x80\xcf\xe2\x53\xb0\x3e\x04\xd4\xd6\x90\xeb\x1f\x08\x41\x51\x1f\x9a\x05\xb2\x0d\x50\x24\x8b\xb4\x45\x0f\x8b\x3d\xc8\x0e\x65\x0b\xb1\x45\x55\x24\xd3\x28\x41\xde\x7d\x31\x43\x4a\xa2\x64\xc7\x5e\x2d\xb4\xee\xc5\x10\x87\xc3\xf9\xf9\x66\x34\x92\x9c\x45\xcb\xfb\x68\xc5\xe9\x0f\xcd\xf3\x82\x90\x64\x9b\x89\x5c\x51\x46\xbc\x41\x22\x06\xc4\x1b\x48\x95\x2f\x45\xfa\x30\x20\xc4\x8b\x37\x91\x5a\xe8\x38\xe6\xb9\xa4\x83\x55\xa2\xd6\x7a\x11\x2c\xc5\x76\xb4\x12\x62\xb5\xe1\x23\x67\x7b\xb4\xc2\xb3\x8e\xce\x7d\xf4\xa4\x47\xf1\x42\xae\xf9\x26\xe3\xf9\x08\xbd\x8d\x16\x91\xe4\x03\xe2\x13\xa2\x8a\x8c\xd3\x0b\x21\x36\x74\x4e\x41\x18\xc0\xb5\x95\x16\x8a\x57\xd2\x42\x71\x23\xbd\x4a\xd5\x79\x29\x85\xeb\x4a\x3a\x0e\x1d\xf1\x38\xac\xe4\xd3\x89\x23\x9f\x4e\x2a\x79\x38\x73\xe4\xe1\xcc\xc8\xbf\x25\x8e\x79\x5c\xd4\xf2\xda\x81\x59\xd5\x3b\xb5\x0b\xb3\xaa\x77\x6a\x27\x66\x65\x76\x2e\x37\x22\x72\x0e\xd9\xa5\xb3\x57\x1f\xb3\x4b\x0b\xea\x77\xb1\xdd\x8a\xf4\x5a\xdc\x55\x60\x6a\xc9\x8e\xca\xe7\x44\xaa\x7d\x6a\xb1\x4e\x97\x94\x6f\x33\x55\xd4\x52\xe6\xd3\xdf\x5a\x8a\xf4\x99\x78\x39\x57\x3a\x4f\xe9\x59\x6b\xeb\xf9\x85\xbc\xec\xb7\x03\x3e\xc1\x56\x2b\x0a\xc7\x54\x73\xc7\xb1\x74\x93\xf1\x94\xe5\x34\x11\xc1\x2d\x8f\xee\x78\x3e\xa4\xcb\x28\xa3\x49\xaa\x7c\x7a\x2b\x84\xfa\x0a\xc9\xa1\x1d\xa9\x37\x8a\xbe\x9f\x57\xd2\xe7\xda\xe4\x7b\x93\xad\x31\x85\x06\xfc\x97\xf2\x88\x13\x7f\x70\x1d\x6d\x81\xe0\xa0\x34\x31\x20\x1e\x1e\xfc\xc2\x15\x88\x60\x9b\xed\x3f\xe5\x57\xe6\x2e\xb9\x5a\xae\xaf\xd2\x3b\xfe\xc8\xfc\x2a\x3d\xb3\x47\xbc\xd1\xc8\x0a\xfe\x6d\x90\x2e\x85\x8b\xe2\x42\xc7\x6c\xa1\x63\xfa\xd7\xdf\x8b\x42\xf1\xff\x06\xa0\xb2\xf2\x6b\x10\x94\x09\x29\x01\xe6\xd8\xc2\xf6\xd7\x45\x24\x5b\xf9\x2c\xd1\x3a\xe4\x73\xd6\xe8\x30\xbb\x11\x38\xad\x6c\xfa\xd0\xe9\x1d\x57\xa7\x6c\xf5\x6b\xfe\x13\x3b\x7a\x31\x84\xe6\x61\xce\x6c\x0a\xfe\xe0\xea\xdb\x4d\x1c\x4b\xae\xbe\xb2\x45\x70\xcb\xde\xf9\xbe\x0f\x81\x0b\xf1\x3a\x4f\xe3\xe1\xc5\x68\x1d\x01\x88\x2a\xfb\xa1\x08\x51\x23\x81\x13\x97\xb9\xd8\x1a\x63\x6c\xb9\x73\xeb\xb5\x0b\xde\xec\x24\xe2\x79\x8d\x00\x03\xd8\xb1\xb6\xfc\x21\xf1\xea\x66\x62\x29\x70\x29\x0f\xfa\xf4\x9a\x3f\xc2\xdd\xe9\x1a\x97\x2a\xca\x31\x79\x50\x0d\x3e\xf3\x94\xf9\x84\x78\x49\x5c\xad\xa1\x89\x7c\xfa\x81\x1a\x45\x70\x6e\xe3\x01\x05\x70\x46\xbc\x94\xff\x84\xb2\x56\x56\x2e\x4c\x19\x1e\x15\x5c\x30\x3c\x08\x46\x77\x30\xef\x42\xa5\xf3\xdd\xc1\x64\x95\x0e\xb6\x41\xa5\xd1\x6e\x02\x1b\xda\xe1\x56\xb0\x4a\x4e\x43\xec\x29\x5a\x9b\xe5\x55\x2a\x79\xae\x80\x4e\x26\xe4\x90\xca\xe4\x89\x9b\x61\xf5\x4c\x3c\xa4\xe0\xb4\xca\x1e\x5d\xff\x55\xc3\x9f\x22\x69\xeb\xb4\x80\xc7\xe2\x33\x21\x2e\xf1\xaa\x24\x6f\x67\xf4\x83\x5b\xb4\xd7\xcc\x7d\x4f\xd4\xfa\x13\x0e\xd4\x56\xe5\x93\x98\xbe\x49\x4d\x74\x78\x87\x62\xe4\xde\x1a\x55\xa1\x4c\xdb\xe8\x9e\x33\x33\x80\x86\xf4\xdc\x27\x9e\x97\x09\x59\xd5\x18\xf3\xfa\x53\x48\xfa\x96\xce\x88\xe7\xbe\x20\x04\xdf\xf3\x44\x71\xf3\x20\x64\x6b\x3b\xca\xb5\x59\x66\x42\x02\xdf\x12\x50\x56\xb0\xb2\x5a\xd8\x2a\x46\xdb\x1f\xd2\x77\x43\x7a\x6e\x7e\xa1\x71\xbc\x96\xc7\x39\x3d\x87\xc6\x6b\x34\x62\x99\xfe\x47\x25\x12\x26\xa9\x54\x79\x92\xae\x7c\xca\x92\x54\x0d\x29\xcf\x73\x91\xfb\x88\x32\xc5\x15\xa4\x61\x5f\x6f\x02\x73\xc2\x47\x20\xb0\xf5\x66\x4e\xd3\x64\x43\xcf\xce\xa8\xa4\xf3\x39\x1d\x5c\x26\x7c\x73\x77\xad\xb7\x03\xe4\x03\x1a\xa8\xd0\x88\x00\x8d\x56\x31\xc0\xbd\x0d\xaf\x31\xec\x01\x4b\xd8\x78\x1c\x62\x10\xce\xc8\xdb\x7d\xb2\x76\x9a\x7b\x76\x06\x81\xb7\xc1\xa1\x69\x38\x69\x82\x6e\xd4\xd6\x8c\xfd\xe4\x89\xdf\xc4\x18\xae\xe1\xaf\x72\x0d\x93\xde\x31\x89\x3a\xa5\xdd\x5a\xbf\xd2\xf9\xc2\x95\xc9\xba\xbe\x83\xcc\x4e\x13\x4c\xa1\x38\x80\xc1\xe7\xda\xff\x0f\xa6\x50\xbc\x17\x30\x10\x6e\x17\x30\xf0\xbe\xea\x82\xc1\xac\x0f\x82\x81\x97\x59\xf6\x00\x33\xe4\xfc\x04\x60\xc0\x5b\x1f\x60\x30\xdc\x0e\x60\xf0\x95\xda\x01\x63\xb2\x3e\x06\x66\x1c\x1a\x32\xe3\xf0\x34\x68\xc6\x61\x4f\x6c\xc6\x61\x47\x38\xe3\xb0\x45\x07\x52\x3f\x86\x67\x3a\x31\x78\xa6\x93\xd3\xe0\x99\x4e\x7a\xc2\x33\x9d\x74\xc4\x33\x9d\xb4\xf0\x40\xea\xc7\xf0\x84\x33\x83\x27\x9c\x9d\x06\x4f\x38\xeb\x09\x4f\x38\xeb\x88\x27\x9c\xb5\xf0\x40\xea\x07\xf1\xe0\x37\x2e\x7b\xc0\x07\xf4\x29\xe6\x0e\xfa\xeb\x03\x8f\xee\x3a\x79\x74\x7b\xf4\xd8\xd4\x8f\xe2\xc1\xe1\xa3\x4f\x35\x7d\x8c\xc7\xbe\x08\x75\x9b\x3f\x7a\x67\x00\x95\xf9\x1f\x85\x84\x23\x48\x9f\x6a\x06\x19\x8f\x7d\x41\xea\x36\x85\xf4\xce\x18\x2a\xf3\x3f\x0a\x09\x07\x91\x3e\xd5\x24\x32\x1e\xfb\x82\xd4\x6d\x16\xe9\x9d\x61\x54\xe6\x7f\x10\x92\xfd\x27\x8c\x3d\xd0\xd8\x5c\x9d\x00\x93\xf5\xd9\x07\xa7\x32\xe8\x0e\xa0\xec\x11\x97\x54\x05\xe1\x38\x2a\x6c\xa8\xd8\x5c\x9d\x0a\x55\x3f\x2d\x55\x06\xdd\x15\x55\xb3\xa9\x2a\x08\xaf\xa2\x4a\xd2\xc4\x7e\xda\xa2\xa5\x8f\x59\xb6\x29\x6e\xf9\x0f\xcd\x25\xfe\xc5\x85\x1f\x77\x12\x3f\x9f\xff\x09\x00\x00\xff\xff\x97\x47\x0e\xfa\x0f\x17\x00\x00")

func template_genny_root_go() ([]byte, error) {
	return bindata_read(
		_template_genny_root_go,
		"../template/genny/root.go",
	)
}

var _template_genny_union_alias_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcb\x6a\xeb\x30\x10\x86\xd7\x9e\xa7\x18\xb4\x38\xd8\xe1\x60\xed\x03\x5e\x94\x96\x42\xa1\x09\x85\x92\x75\x91\xed\x89\x2d\xa2\x8b\xab\x4b\x69\x1a\xf2\xee\x45\x0e\x95\xbd\xc8\x6e\xe6\xff\x3f\x7d\x8c\x26\xd1\x9d\xc4\x40\xf8\x19\xc9\x9d\x01\xf8\x06\x06\x32\xe6\x8c\x3a\xfa\x80\x2d\x61\x27\x94\xa2\x1e\x27\x72\x78\x30\xd2\x9a\xbd\xd0\x04\x1b\x0e\x20\xf5\x64\x5d\xc0\x12\x0a\x36\xc8\x30\xc6\xb6\xee\xac\xe6\x27\xf1\x13\xf9\xb1\xf5\x23\xa9\x89\x1c\x9f\xad\xbc\x15\x9e\x18\x54\x00\x5f\xc2\xe1\xd3\x61\xb7\x7b\xfb\xc8\xae\x07\x25\x85\x4f\x03\xb6\xd6\x2a\x6c\x30\xc1\xf5\x3b\x85\xb9\x28\x59\x06\xd9\x7f\x64\x19\x66\x15\xc0\x31\x9a\x0e\x4b\x63\x7b\x5a\x2e\xab\x30\x23\xe5\x6a\xc6\x0b\x14\x9c\x3b\xf2\x51\x05\xdc\x36\x4b\x71\x79\xb4\x5a\x5b\xb3\xb7\x3d\x6d\x31\xa9\xea\x25\xb8\x42\x71\xef\x45\x8e\x57\x28\x36\xf8\x6f\xd9\x56\x48\x5a\x5f\xa5\x0f\xd8\xdc\xec\x7f\xfb\x1d\x47\x3d\x1f\xda\xac\x3f\x99\xa9\x67\x0a\xdd\xf8\x62\x7a\xfa\x2e\xab\x14\x86\xe8\x0c\xde\x3a\xb8\xc2\x6f\x00\x00\x00\xff\xff\xbc\x73\x10\xa1\xc3\x01\x00\x00")

func template_genny_union_alias_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_alias_go,
		"../template/genny/union-alias.go",
	)
}

var _template_genny_union_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x3d\x6e\xc3\x30\x0c\x85\xe7\xf0\x14\x0f\x1e\x02\xdb\x43\x84\xae\x01\x32\x75\x6e\xb6\x1e\x40\x56\x68\x47\x88\xf5\x53\x89\x1a\x5c\xc3\x77\x2f\xec\xa0\x4e\xd1\x85\x03\xf9\xbe\x8f\x2f\x6a\xf3\xd0\x03\xe3\xab\x70\x9a\x88\x54\x4b\x00\x06\xf6\x7e\x82\x2b\x59\xd0\x31\x8c\x1e\x47\xbe\xe1\x0d\x62\x1d\x67\x44\x4e\xb8\x86\x1b\x5f\xb5\x63\x6a\x15\x91\x75\x31\x24\x41\x4d\x87\x6a\xb0\x72\x2f\xdd\xc9\x04\xa7\x1e\xfa\xbb\xa8\xbe\xcb\x77\x1e\x23\x27\xb5\xf9\x55\xa7\x33\x57\xd4\x10\xc9\x14\x19\x9f\xde\x06\xbf\x6a\x90\x25\x15\x23\x98\xe9\xd0\xae\x91\xd3\x7b\x70\x2e\xf8\xf5\x0b\x2d\x44\x7d\xf1\x06\xec\xa2\x4c\x3b\x51\x37\x68\x5f\xf8\x4c\x87\xc4\xb9\x8c\x82\xf3\x05\xc7\x7d\x3f\xbf\x34\x67\x1c\xff\x89\xe7\x65\xf9\xa5\x4e\x9b\xe4\x82\x6a\x27\xab\xf5\x24\x25\x79\x3c\x13\x7b\x8b\xda\x87\xdb\x9f\xe2\x0d\x3e\xd8\x75\x9c\x6a\x0b\xeb\xa5\x59\x07\xa7\x5e\x1b\x9e\x97\x67\xa9\xcd\xe1\xed\x48\x0b\xfd\x04\x00\x00\xff\xff\x03\x6e\x01\x72\x6a\x01\x00\x00")

func template_genny_union_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_go,
		"../template/genny/union.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"../template/genny/basic.nogo": template_genny_basic_nogo,
	"../template/genny/dummy.go": template_genny_dummy_go,
	"../template/genny/field.go": template_genny_field_go,
	"../template/genny/list.go": template_genny_list_go,
	"../template/genny/node.go": template_genny_node_go,
	"../template/genny/node_test.go": template_genny_node_test_go,
	"../template/genny/root.go": template_genny_root_go,
	"../template/genny/union-alias.go": template_genny_union_alias_go,
	"../template/genny/union.go": template_genny_union_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"..": &_bintree_t{nil, map[string]*_bintree_t{
		"template": &_bintree_t{nil, map[string]*_bintree_t{
			"genny": &_bintree_t{nil, map[string]*_bintree_t{
				"basic.nogo": &_bintree_t{template_genny_basic_nogo, map[string]*_bintree_t{
				}},
				"dummy.go": &_bintree_t{template_genny_dummy_go, map[string]*_bintree_t{
				}},
				"field.go": &_bintree_t{template_genny_field_go, map[string]*_bintree_t{
				}},
				"list.go": &_bintree_t{template_genny_list_go, map[string]*_bintree_t{
				}},
				"node.go": &_bintree_t{template_genny_node_go, map[string]*_bintree_t{
				}},
				"node_test.go": &_bintree_t{template_genny_node_test_go, map[string]*_bintree_t{
				}},
				"root.go": &_bintree_t{template_genny_root_go, map[string]*_bintree_t{
				}},
				"union-alias.go": &_bintree_t{template_genny_union_alias_go, map[string]*_bintree_t{
				}},
				"union.go": &_bintree_t{template_genny_union_go, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
