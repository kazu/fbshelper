package query

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _template_genny_dummy_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xbd\x6e\xeb\x30\x0c\x85\x67\xf3\x29\x88\x0c\x41\x92\x21\xba\xf3\x05\x3a\x14\x05\x3a\x7a\x28\xfa\x02\xb2\x4c\xdb\x42\x44\x49\x95\xa8\x41\x35\xfc\xee\x85\xfa\x03\x67\x2a\xba\x11\x87\x1f\xbf\xc3\xa8\xcd\x4d\xcf\x84\x6f\x85\x52\x05\x50\x0a\x65\xb1\x19\x6d\xc6\xb1\x30\x57\x9c\xc9\xfb\x8a\x42\x1c\x9d\x16\xc2\xc9\x3a\x02\xcb\x31\x24\xc1\x13\x74\x87\xd9\xca\x52\x86\xab\x09\xac\x6e\xfa\xbd\xa8\x69\xc8\x0b\xb9\x48\x49\x7d\x0a\xd5\xa0\x33\x1d\xa0\x1b\xf0\x8f\xe4\x19\x40\x6a\x24\x7c\xa1\x5c\x9c\xbc\xb6\xb1\x0f\x23\xf5\x9a\xe9\x67\x13\xc2\x57\x9e\x25\x15\x23\xb8\x42\x77\x19\xae\x4f\x81\x39\xf8\x86\xc2\xf6\x0d\x3e\x3a\xab\x73\x3b\xfc\x8d\x9c\x8a\x37\x48\x1c\xa5\xee\x8d\xa7\x33\x5e\xee\xfa\x57\xe8\x12\x49\x49\x1e\x8f\x7b\xba\xee\x9a\xff\x78\x6c\xbf\xdf\x89\xd7\x6d\x6b\x6e\x13\x7c\x16\x7c\xb6\xe4\xc6\xbe\x30\x5a\x2f\xf8\x80\xff\xe0\x23\x00\x00\xff\xff\x04\x25\x85\x20\x72\x01\x00\x00")

func template_genny_dummy_go() ([]byte, error) {
	return bindata_read(
		_template_genny_dummy_go,
		"../template/genny/dummy.go",
	)
}

var _template_genny_field_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x52\x4d\x8f\xdb\x20\x14\x3c\xe7\xfd\x8a\x27\x4e\x10\xa5\xf6\xbd\x92\x2b\x45\xfd\x52\xa5\x6e\x0e\xdd\xf4\xd0\xd3\xca\x1f\x2f\x09\x8a\x6d\x28\x86\x68\xdd\xd5\xfe\xf7\x0a\x6c\x43\xda\xa6\xc9\x21\x66\x98\x61\x98\x37\xb6\x2e\xeb\x73\x79\x24\xfc\xe9\xc8\x8c\x00\xb2\xd3\xca\x58\xe4\xb0\x62\x47\x69\x4f\xae\xca\x6a\xd5\xe5\xf5\x89\xe8\x3c\x56\xd2\x0e\xf9\x91\xfa\x7e\xf4\xff\x64\x64\xcd\xfe\x94\x9d\xcb\x5f\x2e\x3f\x54\xc3\x89\x5a\x4d\x26\x0f\x96\x79\x55\x0e\xc4\x40\x00\xe4\x6b\x08\x87\xb1\x73\x83\xc5\x8a\xb0\x2e\xdb\x96\x1a\xd4\x64\xf0\x93\xa4\xb6\x81\x75\x0e\x60\x47\x4d\x13\xdc\x95\x1d\xe1\x7c\x51\xb6\x1f\x35\x5d\x93\x1e\xff\x45\x5e\x4a\xe3\x73\xef\x54\x43\xfe\xe8\x53\x34\x99\x57\xae\x43\xd9\x5b\x2c\xd0\x27\xca\xb6\x56\xc9\x9d\xfa\x68\x0c\xf7\x2b\xce\x16\x0d\x13\xe2\x96\x07\xc6\xdf\xe4\x71\xe7\x96\x30\x6b\x8e\xfc\xe0\x31\xca\x9e\x9a\xe7\x0d\x4e\xc0\xe7\x17\xf8\xe6\x1d\xa6\xf3\x5f\x9a\xe7\xbd\x0a\x03\xf8\xfc\x1f\xbe\x3f\x3c\xfc\x78\xba\x71\x7d\xa5\x54\x8b\x05\x3e\x92\x5d\xc8\xc0\x0d\x9c\x2d\x98\x6d\x90\x45\x7d\x04\xde\x99\x6d\xee\xc5\x15\x00\x07\xd7\xd7\xc8\x7b\xd5\x50\x14\x8a\xf4\x0e\xb8\x40\x6e\x68\x70\xad\xc5\xf5\xb7\xf0\xdc\x87\x31\x5e\x60\x35\x6f\x17\x48\x9d\xb6\x63\x22\xb9\x80\x55\xad\xba\x4e\xf5\xf8\xb6\x40\x6f\x9c\x05\xbb\xad\xe5\xf7\x93\xcc\x8e\x59\x98\xb9\xc0\xc9\x23\xa0\x44\xa9\x86\xbe\xca\xc1\x5e\xd1\xf3\x4e\x94\xc4\x4e\x93\x26\xd5\xfc\x8f\xe8\xb3\x51\x4e\xdf\x50\x86\xfd\x10\xc9\x3a\xd3\xc3\xeb\x7f\x7a\x7a\x24\x9b\xaa\xba\xe0\x3a\x7c\x5d\xef\x83\x97\x17\x09\x24\x63\x94\xc1\x97\xe8\x34\xf5\x91\x14\xd9\xe2\xb0\xb5\x7c\xa9\x62\x83\x17\x01\xaf\xf0\x3b\x00\x00\xff\xff\x84\x25\xaf\x6c\x9d\x03\x00\x00")

func template_genny_field_go() ([]byte, error) {
	return bindata_read(
		_template_genny_field_go,
		"../template/genny/field.go",
	)
}

var _template_genny_list_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xc1\x8a\xdb\x30\x10\x3d\x47\x5f\x31\xec\x21\x48\xc1\xb5\xb7\xd7\xc0\x1e\x96\x85\x42\x21\xec\xa5\x65\x2f\xa5\x14\x45\x19\x67\x4d\xac\x91\x2b\x4b\x87\xd4\xf8\xdf\x8b\x6c\x2b\x16\xdb\x7a\x13\x4a\x0f\x01\x31\x33\x79\xef\xcd\x9b\xe7\x46\xaa\x93\x3c\x22\xfc\xf4\x68\xcf\x8c\x55\xba\x31\xd6\xc1\xdd\xb1\x72\xaf\x7e\x9f\x2b\xa3\x8b\x93\xfc\xe5\x8b\x72\xdf\xbe\x62\xdd\xa0\x2d\x86\xc1\x62\x2f\x5b\xbc\x63\xcc\x9d\x1b\x84\x5d\xd5\xba\xaf\xe1\xd1\x3a\xeb\x95\x83\x0e\x8a\x02\x8e\x48\x74\x66\xab\xcd\x93\xd1\xda\xd0\xb3\x39\x20\xeb\x19\x2b\x0a\x08\xcf\x67\xa9\x71\x9a\x60\xa5\x27\x05\xa8\x1b\x77\x8e\x38\x5c\xc0\xe6\x82\xd9\xb1\x95\x45\xe7\x2d\xc1\x3a\xd6\xba\x19\x73\x0b\xeb\xa0\x24\x9f\x2b\x5d\xdf\x07\xa2\x01\x95\x93\x39\xcc\xf2\x04\x3c\x3a\x5e\x41\x45\x4e\x00\xb7\xd8\xfa\xda\xc1\x26\xaa\xc9\x00\x01\xad\x35\x56\x8c\x8c\x43\xf7\x01\xd6\xb1\xdf\xf5\xb1\x9a\x70\x85\x3f\x3d\x40\x20\x49\x8a\x79\x60\x11\x51\xf5\xa2\x96\x4f\x95\x6d\x1d\xbf\x41\xc9\xb0\x3b\x4d\xc0\xf7\x62\x11\x70\x27\xff\x01\xaf\x22\x37\xe0\xe4\x61\x3a\x60\xe5\x2f\xb2\xf6\xf8\x99\x4a\x93\xbf\xec\x90\x04\x7c\x80\x8f\xcb\x9c\x5f\xb0\x46\xe5\x78\x49\x10\xda\xfc\xc2\x29\x60\x6f\x4c\x3d\x8b\xf9\xf6\x3d\x69\xa5\xfe\x6a\x79\x42\x9e\x74\x33\xb8\xcf\xe0\xaa\x28\xc1\x56\x6a\xf0\xbb\x85\xed\x9f\xfe\x47\x51\x41\x91\xd2\x90\x24\x70\x94\x15\x04\x44\x1f\x4a\xe2\xf3\x89\xd3\x58\x29\xdd\x0b\xb6\x0a\xbf\xd2\x58\xf8\x91\x81\xd2\x81\xcb\x4a\x3a\x22\x44\xf2\x11\x68\x5a\x45\x36\x0d\xd2\x61\xda\x38\x83\x77\x61\x2f\x77\x18\xa7\xdf\x09\x09\x1d\x96\xdd\xbd\x14\x12\x4b\xb7\xd7\x32\xfb\x97\xc0\x8e\x2c\xff\xc9\xae\xdb\x16\x7b\xac\x6b\x2e\xd2\x58\xbc\xcd\x66\x7a\xc4\x37\x8b\x43\x07\xd3\xa4\xb3\x1e\xa1\x5f\x8e\xe7\x93\xf1\x14\xbe\x89\x8a\x5c\x82\x7f\x35\x5e\xac\x67\xbf\x03\x00\x00\xff\xff\x53\xd0\xa4\xee\x16\x05\x00\x00")

func template_genny_list_go() ([]byte, error) {
	return bindata_read(
		_template_genny_list_go,
		"../template/genny/list.go",
	)
}

var _template_genny_node_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x4d\x6f\xe3\x36\x10\x3d\x8b\xbf\x62\xe0\xc3\x82\x0c\x8c\xb8\xbd\x1a\x10\x8a\x6c\x1a\x07\x06\x92\x6c\x11\xbb\xdd\x02\x46\x10\xc8\x32\xa5\xb0\x96\x48\x2d\x49\xa5\x49\xb5\xfa\xef\x05\x49\x7d\x5b\x72\x76\x2f\xb6\x34\xf3\xe6\xcd\xe3\x0c\x39\x62\x16\x84\xc7\x20\xa6\xf0\x2d\xa7\xf2\x1d\x21\x96\x66\x42\x6a\xc0\xc8\x9b\xc5\x4c\xbf\xe4\xfb\xcb\x50\xa4\x8b\x63\xf0\x5f\xbe\x88\xf6\xea\x85\x26\x19\x95\x0b\x8b\x5d\xec\x03\x45\x67\xc8\x7b\x86\x0f\x91\x89\x88\x67\x88\x20\xb4\xb8\x40\x00\x90\xe6\x4a\x43\x18\x24\x09\xfc\x0a\x9a\xa5\x54\x41\x46\x25\x6c\x83\x7d\x42\x17\x4a\xcb\x3c\xd4\xf8\x41\x1c\xe8\x43\x90\x52\x82\x2e\x16\x08\xe9\xf7\x8c\x42\x6d\x02\x07\x81\x02\x79\x17\x46\xc1\xe5\xb5\x48\x53\xc1\x8d\x1b\x95\x08\x45\x39\x0f\x81\xa6\x99\x7e\xaf\x03\x30\x81\x8b\x26\xb8\x40\x9e\xa4\x3a\x97\x1c\x3e\xd5\xb6\xa2\x25\x58\xc2\xa7\x01\x65\x51\x96\x86\xf5\x35\x90\x8d\x80\xe7\xf5\xe1\x6d\x2b\xb6\x46\x53\x1a\x64\x3b\xc6\xf5\x13\xe3\x1a\xfc\xee\x5b\x51\x4e\x84\xdc\x4a\x91\x67\x3f\x19\x67\x85\xd7\x20\xa5\x25\xe3\x71\x27\xca\x19\x86\x81\xe6\x67\x2b\xd6\x87\x37\x8b\x73\x98\x4e\xba\xd6\x50\x54\xab\xfb\xfd\xcf\xfb\xfb\x3f\x9e\xeb\xf8\xb5\xda\xb8\x2a\xef\x85\x48\xc0\x07\x5b\x95\x0d\xd5\xad\x8f\x87\x1a\xcf\x6a\xf8\x6c\xee\x10\x5b\xf1\x59\x88\x04\xcf\xea\xf0\x19\x21\x55\x47\x4c\x6c\x05\x5e\x31\x9a\x1c\x14\xe6\xe6\x79\x0e\x51\xf5\x67\xeb\xe9\x64\x19\x63\x9e\x02\xe3\x9a\xb8\xfc\x05\x42\x9e\xe5\x7f\xa4\xdf\x72\xaa\xf4\x86\x6a\xcd\x78\x7c\x9e\xcc\xb1\x10\x84\x3c\xca\xf3\x74\xa5\xad\x49\x1c\x61\x59\xad\xc6\x55\xc8\x20\x77\x16\xff\x84\x3c\x16\x19\x40\x81\x3c\xaf\xd6\xba\xa1\xba\x69\x1d\x36\x7c\x73\x68\xd8\x08\xf2\x4a\xe4\x2d\x16\xab\xf5\xdf\xf7\x37\x4b\x43\xca\x42\xb0\x5b\x55\xf0\xe4\x1d\x94\x16\x92\xfe\x86\xd0\x09\x97\xdd\x93\x8e\xcb\x26\x36\x12\x63\x99\x19\x61\x35\xf4\x96\xea\x66\xb3\xe0\x0a\xd4\xe5\xe9\x38\x2d\x4f\x2c\x33\xd2\xc9\xd4\x6e\x9b\x9d\xf1\x3f\x81\xef\x32\x75\x21\xcd\x06\xd9\xd9\xa2\x59\xcc\x43\x9e\x56\x85\xae\x5a\x6d\x01\xbd\x36\x9f\xc6\x9b\xc4\xd5\x91\xd2\x32\xa7\x08\x95\xae\xe3\xa3\xcb\x66\xa6\xab\x73\x50\x55\xa7\x89\x29\xf6\x88\x6a\x66\xe4\x28\xd4\x8a\x69\x19\x46\xc5\x34\x6e\xd2\x8c\x80\xd1\x0e\x1e\xe7\xf0\xda\xdb\x57\xde\xe9\x09\xdd\x1d\x4d\xf2\xd7\x41\x6e\x1b\x3e\x9d\xbb\x6a\x51\xb7\x0e\x23\x42\xda\xb6\xfd\x88\x10\x8b\x3c\x51\xd3\xf3\x7e\xa0\xc8\x62\x3e\x90\xd5\xdb\x6a\x6d\x5f\xb0\xa4\x2a\x4f\xb4\xd3\xd8\x0e\x4d\xab\xa2\x1f\xd2\x96\x1c\x73\x71\x68\xe7\x34\x81\xb0\x99\xa2\x66\x04\x0f\x06\xab\x21\x65\x11\x98\x90\xae\xd5\xf7\x81\x33\x5b\x10\xb7\xe2\x3b\x11\x63\xf7\xf0\xe5\xf6\xf9\xeb\xd5\xe3\xc3\x1c\x4c\x2e\x4c\xa0\x76\x5f\xc9\x58\x59\x7c\x4f\xe3\x0a\xcf\x3a\xac\x5c\x68\x88\x44\xce\x0f\x8d\xba\x19\x41\x9e\x57\x9a\x23\x0c\x34\x51\x14\x58\x04\x09\xe5\x78\x20\xe7\xd2\x2d\xc4\xf7\xe1\x17\xf8\xfe\x7d\x14\xd1\xb6\xdf\xc1\x8c\x92\x31\x16\xf0\xa1\x6d\xd6\x08\xa6\xfd\xa8\xf8\x23\x9d\x3c\x17\xe0\x3e\x29\x63\x51\xd6\x63\xa7\x54\x55\x9a\x01\x47\x7d\x54\x87\x8d\xdb\xd0\x40\x86\x2f\x6b\x1e\x09\x9c\x09\xe5\x8e\x6c\x54\x15\xf6\x91\x86\x2b\x3e\x87\x50\xf0\xc3\xaa\x32\x5d\xdb\x67\x62\xc7\xb4\xcd\xd0\x6d\xfc\x65\x9f\xcc\x10\xd5\xd1\x04\x4d\x6e\x1d\x0b\x27\x80\x19\x8f\x84\x4b\x62\x2c\x2e\x45\x77\x2d\xbd\x4c\x2e\xe8\x0c\xa9\xba\xa3\x41\x74\xa5\xf1\x3f\x83\x6f\xcb\x34\x63\x13\x71\x86\xf6\x5a\xe4\x5c\x7f\x89\xec\x97\x08\x13\x43\xdd\x39\x30\x66\xcb\x8c\x8d\x8a\x29\xb2\xbf\x82\x24\xa7\x76\x21\xac\x12\x69\x16\xdf\x58\x3b\xcc\xa7\x6a\x3b\xb1\xd3\x09\xac\xcc\x2b\x8d\xd9\xe1\xcd\x25\x18\x3b\x98\x93\x29\x3a\xd1\xd3\x29\x1e\x85\xd0\xd8\xfd\xd9\x0d\xdd\x12\x6a\x61\x7d\x96\xf7\x73\xa0\x5c\x1d\x7a\xb7\xbb\xaf\x4c\xbf\xdc\x48\xd9\xbd\xe4\xd5\x2e\xe4\x19\x07\x95\x52\xc8\xd3\xe1\xca\x78\x9c\x50\x27\xa4\x09\x98\x03\x75\x70\x72\x42\xdf\x4a\x1a\x78\x8a\xfa\x7d\x69\x57\x3f\x87\x1b\x29\x97\x40\xcb\x36\x23\xfd\x77\xea\x62\x69\xb3\x2f\xfd\xe1\xed\xb3\x3a\x14\xc6\x70\xc7\x94\xb9\x81\xb9\x4b\x66\x6d\x28\x4a\xf4\x23\x13\xc3\x42\xd6\x9c\x69\x4c\xfa\x5b\xf6\x7c\xab\xed\x0c\x50\x98\xf4\xee\x9c\xa7\xcb\x1f\x0e\x8d\x12\xfd\x1f\x00\x00\xff\xff\xa6\x0a\x4b\x00\x18\x0c\x00\x00")

func template_genny_node_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_go,
		"../template/genny/node.go",
	)
}

var _template_genny_node_test_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcf\x6e\xf2\x30\x10\xc4\xcf\xde\xa7\x58\xe5\x80\xe2\xef\x8b\xe2\x9e\xab\xd2\x23\x12\x17\x84\x04\xf7\xca\x4e\x36\xc4\x22\xb1\x5d\xff\x39\x00\xe2\xdd\x2b\x9b\x50\xa4\xde\x3c\x1e\xff\x66\xd6\xeb\x64\x77\x96\x27\xc2\xef\x44\xfe\x02\xa0\x67\x67\x7d\xc4\x1a\x58\x15\x29\x44\x6d\x4e\x15\x00\x53\x58\x9d\x74\x1c\x93\x6a\x3b\x3b\x8b\xb3\xbc\x26\x31\xa8\x30\xd2\xe4\xc8\x8b\x42\x0a\x25\x03\x55\xc0\x01\x86\x64\x3a\x3c\x52\x88\x5f\x81\xa4\xef\xc6\xad\x19\x6c\x1d\xf1\xdf\x12\xd7\x1e\x39\xde\x00\x98\xc4\xf7\x35\xd2\xec\xe2\x65\x67\x7b\xda\xc9\x99\x6a\x0e\x4c\x88\xa7\xda\x68\x9a\xfa\xb0\x4b\xf3\xd6\xe8\x98\xad\xce\x9a\x3e\x33\x39\xbf\x76\x36\xa0\x36\xb1\x41\x6d\x06\x8b\xaa\xcd\x25\x1c\x95\xb5\x13\xde\x80\x31\x4f\x31\x79\x53\xcc\x76\x6f\x03\x7e\xac\x31\x13\xab\x15\xd6\xcf\xbb\xff\xe5\x70\xd0\x57\xe2\xf8\x99\x5d\x60\x4c\x88\x05\x8c\x3e\x11\xb0\x3b\x30\x4f\xdd\xc6\xfc\xb6\x06\x54\x6d\x9e\x6f\x2f\xe3\xf8\xa7\xfa\x56\xf0\xdc\x1c\xd2\x14\x71\x8d\xd2\x39\x32\x7d\xfd\xd0\x0d\x06\xbe\x3c\xc8\x54\x78\xf9\x45\x3e\xb2\x78\x69\x94\xed\xe1\xb5\xb6\xb7\x06\xcb\x04\x0d\xe6\xdf\x73\x80\x3b\xfc\x04\x00\x00\xff\xff\x93\x01\x9e\x3b\xb0\x01\x00\x00")

func template_genny_node_test_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_test_go,
		"../template/genny/node_test.go",
	)
}

var _template_genny_root_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\xcd\x6e\xdb\x3c\x10\x3c\x8b\x4f\xb1\x9f\x0e\x06\xf9\xd5\x90\x9a\x1f\x18\x45\x50\x1f\xea\x02\x69\x03\x04\x0e\x90\x26\xa7\xa2\x07\xc9\x5e\x39\x44\x64\x52\x25\xa9\x26\x8a\xe1\x77\x2f\x48\xea\x87\xb1\x9d\x34\xe8\xa5\x37\x71\x76\x76\xb8\x3b\xbb\xa6\xab\x6c\x71\x9f\xad\x10\x7e\xd6\xa8\x1a\x42\xf8\xba\x92\xca\x00\x25\x51\xcc\x65\x4c\xa2\x58\x1b\xb5\x90\xe2\x57\x4c\x48\x54\x94\x99\xc9\xeb\xa2\x40\xa5\x21\x5e\x71\x73\x57\xe7\xc9\x42\xae\xd3\x95\x94\xab\x12\xd3\x20\x9c\xae\x5c\x6e\xc0\xb9\xcf\x9e\xea\xb4\xc8\xf5\x1d\x96\x15\xaa\xd4\xdd\x96\xe6\x99\xc6\x98\x30\x42\x4c\x53\x21\xcc\xa4\x2c\x61\x0a\x16\x4c\xec\x77\x8b\x36\x06\x7b\xb4\x31\xe8\xd1\x0b\x61\x3e\x74\xa8\xfd\xee\xd1\xa3\x49\x00\x1f\x4d\x7a\xfc\xe4\x38\xc0\x4f\x8e\x7b\x7c\x72\x1a\xe0\x93\x53\x8f\xdf\xf2\x40\xde\x1d\x06\x7c\xb8\xc0\x9f\x86\xc8\x70\x85\x3f\x0d\x91\xe1\x12\x7f\xf2\x91\xf3\x52\x66\x41\x52\x7b\x0c\x62\x43\x5a\x7b\x6c\x8d\xfa\x2c\xd7\x6b\x29\xe6\x72\xd9\x1b\x33\x20\x7b\x94\x4b\xae\xcd\x21\x5a\x51\x8b\x05\xe0\xba\x32\xcd\x80\x52\x06\xff\xef\x10\x61\x43\x22\x85\xa6\x56\x02\x46\x3b\xa1\xcd\x96\x6c\x0f\xeb\xd8\x3b\xad\xd6\x4e\x15\x81\xd4\xf3\x48\xa0\x74\x55\xa1\xa0\x0a\xb8\x4c\xae\x31\x5b\xa2\x1a\xc3\x22\xab\x80\x0b\xc3\xe0\x5a\x4a\x73\x63\x9b\x73\x3a\xba\x2e\x0d\x9c\x4d\x7b\x74\x33\x48\x9e\xf9\x6e\xbd\x94\x13\x60\xdb\x2e\x25\xa8\x3f\x99\x67\x6b\xeb\x60\xdc\x49\xc4\x24\x72\x89\xdf\xd0\x58\xc8\x86\xe9\xe1\x2c\xd6\xcb\x9d\xa3\x59\xdc\x5d\x88\x25\x3e\x52\xd6\xb7\xe7\x63\x24\x4a\xd3\x16\x78\x6b\x91\xa1\x0b\xb3\x66\x56\x17\x34\xaf\x0b\xf8\xfe\x23\x6f\x0c\xfe\x9d\x01\xbd\xca\xbf\xb1\xa0\x6b\xc8\x48\x2b\x47\xf3\x76\xbf\x66\x99\xde\xe9\x67\xe1\xd4\x6d\x3f\xa3\x67\x1b\xd6\x06\x92\x60\x95\xfd\x1e\x06\xbb\x13\x72\xba\x55\x9f\xe3\x83\xdb\xe8\x7c\x6c\x97\x87\x06\x6f\x53\xf2\x05\xcd\xed\x55\x51\x68\x34\x37\x34\x4f\xae\xe9\x7b\xc6\x98\x2d\x5c\xca\x97\xfd\xf4\x37\x6c\x3d\xeb\x0f\x06\x3a\xca\x61\x53\xa4\x1c\x2c\xa1\xc2\x96\xdb\xe5\x31\x98\xe3\xa3\xfd\xd1\x84\xa6\x68\x93\x29\x57\x93\xa5\x26\x97\x28\x28\x23\x24\xe2\x45\x7f\xb6\xb3\x65\xef\x4e\xe1\x23\x78\xea\x86\x44\xdd\x5d\x96\x42\xa2\x2d\x21\x91\xc0\x07\xeb\x77\xaf\x33\xf3\xfe\x3c\x1a\xfb\x41\x5d\xa2\x95\xdd\xeb\x7f\xbf\x5b\x98\xee\xbf\x18\x2d\xe9\xd5\xf9\xf4\x8c\xdd\xe9\xb4\xa5\xbd\x3e\xa3\x96\x14\x4c\xea\x0d\x6e\x5e\x08\x8d\xca\x58\x7f\x2a\xa9\xc7\xa0\xf9\x13\xfa\x57\x64\x43\x22\xe7\x42\x30\xc3\x03\x5c\xf6\xa2\xf0\xd7\x4c\xb7\x93\xca\xed\xff\xd5\x86\x90\xd0\xf1\xe7\x43\x09\xc6\xd6\xc9\x7d\x32\x92\x53\x0d\xda\x28\x2e\x56\x0c\x28\x17\x66\x0c\xa8\x94\x54\xcc\x69\x09\x77\xb2\x73\x68\xff\x78\x13\x9f\xc1\xdc\xdc\x6d\xe8\xbf\x29\x08\x5e\xc2\x68\x04\x1a\xa6\x53\x88\xcf\x39\x96\xcb\x79\xbd\x8e\xdd\xf4\x2d\xc3\x11\xec\xec\xfb\xca\x9c\x28\xd9\x92\xdf\x01\x00\x00\xff\xff\x49\x9b\xf4\x56\xed\x07\x00\x00")

func template_genny_root_go() ([]byte, error) {
	return bindata_read(
		_template_genny_root_go,
		"../template/genny/root.go",
	)
}

var _template_genny_union_alias_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcb\x6a\xeb\x30\x10\x86\xd7\x9e\xa7\x18\xb4\x38\xd8\xe1\x60\xed\x03\x5e\x94\x96\x42\xa1\x09\x85\x92\x75\x91\xed\x89\x2d\xa2\x8b\xab\x4b\x69\x1a\xf2\xee\x45\x0e\x95\xbd\xc8\x6e\xe6\xff\x3f\x7d\x8c\x26\xd1\x9d\xc4\x40\xf8\x19\xc9\x9d\x01\xf8\x06\x06\x32\xe6\x8c\x3a\xfa\x80\x2d\x61\x27\x94\xa2\x1e\x27\x72\x78\x30\xd2\x9a\xbd\xd0\x04\x1b\x0e\x20\xf5\x64\x5d\xc0\x12\x0a\x36\xc8\x30\xc6\xb6\xee\xac\xe6\x27\xf1\x13\xf9\xb1\xf5\x23\xa9\x89\x1c\x9f\xad\xbc\x15\x9e\x18\x54\x00\x5f\xc2\xe1\xd3\x61\xb7\x7b\xfb\xc8\xae\x07\x25\x85\x4f\x03\xb6\xd6\x2a\x6c\x30\xc1\xf5\x3b\x85\xb9\x28\x59\x06\xd9\x7f\x64\x19\x66\x15\xc0\x31\x9a\x0e\x4b\x63\x7b\x5a\x2e\xab\x30\x23\xe5\x6a\xc6\x0b\x14\x9c\x3b\xf2\x51\x05\xdc\x36\x4b\x71\x79\xb4\x5a\x5b\xb3\xb7\x3d\x6d\x31\xa9\xea\x25\xb8\x42\x71\xef\x45\x8e\x57\x28\x36\xf8\x6f\xd9\x56\x48\x5a\x5f\xa5\x0f\xd8\xdc\xec\x7f\xfb\x1d\x47\x3d\x1f\xda\xac\x3f\x99\xa9\x67\x0a\xdd\xf8\x62\x7a\xfa\x2e\xab\x14\x86\xe8\x0c\xde\x3a\xb8\xc2\x6f\x00\x00\x00\xff\xff\xbc\x73\x10\xa1\xc3\x01\x00\x00")

func template_genny_union_alias_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_alias_go,
		"../template/genny/union-alias.go",
	)
}

var _template_genny_union_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x3d\x6e\xc3\x30\x0c\x85\xe7\xf0\x14\x0f\x1e\x02\xdb\x43\x84\xae\x01\x32\x75\x6e\xb6\x1e\x40\x56\x68\x47\x88\xf5\x53\x89\x1a\x5c\xc3\x77\x2f\xec\xa0\x4e\xd1\x85\x03\xf9\xbe\x8f\x2f\x6a\xf3\xd0\x03\xe3\xab\x70\x9a\x88\x54\x4b\x00\x06\xf6\x7e\x82\x2b\x59\xd0\x31\x8c\x1e\x47\xbe\xe1\x0d\x62\x1d\x67\x44\x4e\xb8\x86\x1b\x5f\xb5\x63\x6a\x15\x91\x75\x31\x24\x41\x4d\x87\x6a\xb0\x72\x2f\xdd\xc9\x04\xa7\x1e\xfa\xbb\xa8\xbe\xcb\x77\x1e\x23\x27\xb5\xf9\x55\xa7\x33\x57\xd4\x10\xc9\x14\x19\x9f\xde\x06\xbf\x6a\x90\x25\x15\x23\x98\xe9\xd0\xae\x91\xd3\x7b\x70\x2e\xf8\xf5\x0b\x2d\x44\x7d\xf1\x06\xec\xa2\x4c\x3b\x51\x37\x68\x5f\xf8\x4c\x87\xc4\xb9\x8c\x82\xf3\x05\xc7\x7d\x3f\xbf\x34\x67\x1c\xff\x89\xe7\x65\xf9\xa5\x4e\x9b\xe4\x82\x6a\x27\xab\xf5\x24\x25\x79\x3c\x13\x7b\x8b\xda\x87\xdb\x9f\xe2\x0d\x3e\xd8\x75\x9c\x6a\x0b\xeb\xa5\x59\x07\xa7\x5e\x1b\x9e\x97\x67\xa9\xcd\xe1\xed\x48\x0b\xfd\x04\x00\x00\xff\xff\x03\x6e\x01\x72\x6a\x01\x00\x00")

func template_genny_union_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_go,
		"../template/genny/union.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"../template/genny/dummy.go": template_genny_dummy_go,
	"../template/genny/field.go": template_genny_field_go,
	"../template/genny/list.go": template_genny_list_go,
	"../template/genny/node.go": template_genny_node_go,
	"../template/genny/node_test.go": template_genny_node_test_go,
	"../template/genny/root.go": template_genny_root_go,
	"../template/genny/union-alias.go": template_genny_union_alias_go,
	"../template/genny/union.go": template_genny_union_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"..": &_bintree_t{nil, map[string]*_bintree_t{
		"template": &_bintree_t{nil, map[string]*_bintree_t{
			"genny": &_bintree_t{nil, map[string]*_bintree_t{
				"dummy.go": &_bintree_t{template_genny_dummy_go, map[string]*_bintree_t{
				}},
				"field.go": &_bintree_t{template_genny_field_go, map[string]*_bintree_t{
				}},
				"list.go": &_bintree_t{template_genny_list_go, map[string]*_bintree_t{
				}},
				"node.go": &_bintree_t{template_genny_node_go, map[string]*_bintree_t{
				}},
				"node_test.go": &_bintree_t{template_genny_node_test_go, map[string]*_bintree_t{
				}},
				"root.go": &_bintree_t{template_genny_root_go, map[string]*_bintree_t{
				}},
				"union-alias.go": &_bintree_t{template_genny_union_alias_go, map[string]*_bintree_t{
				}},
				"union.go": &_bintree_t{template_genny_union_go, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
