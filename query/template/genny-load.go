package query

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _template_genny_dummy_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xbf\x6a\xc3\x30\x10\xc6\x67\xdf\x53\x1c\x19\x42\xe2\x21\xda\xbb\x95\xae\xc5\x43\xe9\x0b\x48\xce\xd9\x16\xd1\xbf\x4a\x27\x8a\x2b\xf4\xee\x45\x25\x60\x43\x4b\xc9\x76\xdc\xf7\xbb\xdf\xc7\x05\x39\xde\xe4\x4c\xf8\x91\x29\xae\x00\x42\x20\x2f\x3a\xa1\x4e\x78\xcd\xd6\xae\x38\x93\x73\x2b\x32\xd9\x60\x24\x13\x4e\xda\x10\x68\x1b\x7c\x64\x3c\x41\x77\x98\x35\x2f\x59\x5d\x46\x6f\xc5\x4d\x7e\x65\x31\xa9\xb4\x90\x09\x14\xc5\x8f\x50\x28\x99\xe8\x00\x9d\xc2\x07\xc9\x33\x80\xe8\x81\xd7\x40\xf8\x46\x29\x1b\x7e\x6f\x63\xe2\x98\x47\xc6\x02\x5d\xaf\x2e\x83\xbf\xd2\xab\x4e\x0c\x15\x7a\xf1\x0b\x6d\xe9\x20\x2d\xc1\x3d\xf1\xfe\x0f\xc5\x8b\xb7\xd6\xbb\x86\x42\xbd\x83\xcf\x46\xcb\xd4\x0e\xff\x23\xa7\xec\x46\x1c\xe8\x73\xeb\x3b\x9d\xb1\xdf\xb5\x17\xe8\x22\x71\x8e\x0e\x8f\xdb\xb6\x6c\x92\x27\x3c\xb6\x3f\x77\xda\x52\x2b\x54\xf8\x0e\x00\x00\xff\xff\xf0\x3b\x07\xa6\x86\x01\x00\x00")

func template_genny_dummy_go() ([]byte, error) {
	return bindata_read(
		_template_genny_dummy_go,
		"../template/genny/dummy.go",
	)
}

var _template_genny_field_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x53\x4d\x8f\xd3\x30\x10\x3d\xd7\xbf\x62\x94\xc3\xca\xae\x4a\x0d\x12\xe2\x80\x14\xa4\x15\x2c\xa8\x12\xdb\xc3\x6e\x41\xe2\x54\xe5\x63\xda\x5a\x4d\xec\xe0\xd8\xd0\x82\xf8\xef\xc8\x76\xe2\x04\x1a\x95\x95\xf0\x21\xf2\xcc\xbc\x79\xf3\xc6\x33\x69\xb2\xe2\x98\xed\x11\xbe\x5a\xd4\x67\x42\x44\xdd\x28\x6d\x80\x92\x59\xb2\x17\xe6\x60\xf3\x65\xa1\x6a\x5e\x1c\x10\x8f\xe7\x5c\x98\x96\xef\x51\xca\xb3\xfb\xa2\x16\x45\xf2\x27\xec\x98\xfd\xb0\x7c\x97\xb7\x07\xac\x1a\xd4\xdc\x53\xf2\x3c\x6b\x31\x21\x8c\x10\x3e\x27\xb5\x6d\x0d\x14\x59\x55\x41\x83\x1a\xde\x0b\xac\x4a\x32\xdb\x2b\xd0\x56\xc2\x95\x72\xb0\x47\x09\xc9\x5a\x95\xb8\xce\x6a\x4c\x1f\x94\x32\x21\xd9\x9b\x9f\x51\xb7\x42\xc9\xe0\xd9\x9c\x1b\x4c\x85\x34\xaf\x5e\xc2\x03\xb6\xb6\x32\xde\xe1\x34\x2c\xdf\xaa\xba\x56\xd2\xb1\x74\xc9\xb6\x4e\x9f\xc3\xaa\x7d\x34\xda\x16\x26\xdd\x65\x95\x13\xfa\xdf\x72\x56\xb2\xc4\x13\xc0\x48\x4e\xf0\x8c\xe4\xf4\x10\x7f\xa2\x96\x17\x17\x5a\xe6\x9c\x10\xce\x21\xce\x84\x73\x78\xe2\x58\x1c\x32\x87\x27\xce\x86\x73\x60\x84\x98\x73\x83\x43\x1b\xd0\x51\x2d\x9d\x60\xa7\x62\x14\xb6\x75\x8c\xae\x6d\x9d\xa3\x1e\xe5\x3a\xf8\x74\xee\xd0\xff\x5f\xf1\x6f\x99\x76\xfb\xd6\xbf\xe7\x36\x6a\xd8\xc6\x72\x42\x1a\x48\xc1\x4f\xf1\xd6\x28\xb1\x56\x77\x5a\x53\x77\xa3\x49\x8f\x49\x18\x9b\xe2\x80\x78\x02\xc7\x95\x2a\x7e\x47\x39\xd0\x9d\xb3\x41\x48\x2c\x4f\x0b\x08\x86\x6b\x80\xc1\xb3\x37\x30\xe4\xaf\xca\xd3\x46\xf9\x06\x9c\xfe\x77\x9f\xee\xef\xbf\x6c\x27\xca\xe7\x4a\x55\x90\xc2\x23\x9a\x3e\xe8\x63\x2d\x8d\xfb\x93\x2c\x20\x89\xf8\x68\x38\xe6\x64\x71\x4d\x6e\x50\xdb\x03\xba\x02\x1b\xb5\x2a\x4f\xf4\x32\x6b\x11\x1e\xcf\x5d\x83\xea\x3b\x69\x6b\x3a\x2a\xc5\x18\xdc\xdc\xf8\xb5\x09\x67\xc4\xeb\x3b\x75\x77\xfa\x0f\x69\x8c\x90\x9d\x95\x05\x50\xe9\xfe\xb1\x3e\xce\x86\xa5\xa2\x0c\xa8\xf6\x6b\x00\xf3\x61\x1d\x18\xfc\x24\xb3\xce\x9d\xc2\x1a\xbf\x0f\x21\xca\xc8\xac\xf0\xbf\x2d\xbc\x4e\xc1\xd1\x2e\x3d\xd9\xad\x99\xe8\x71\xfc\x32\x1d\x9f\x6f\x18\x52\x08\x1c\xde\x1a\x42\xaa\xc4\x8f\xa2\x35\xa3\x70\xe7\x89\x90\x38\xe3\x01\x33\x8c\xfd\x02\xf4\x41\x2b\xdb\x4c\x20\xbd\xdf\x4b\x32\x56\x4b\xf2\xcb\xcd\x6d\xea\x9d\xc8\xef\x00\x00\x00\xff\xff\x2c\x63\xf7\xf0\x8b\x05\x00\x00")

func template_genny_field_go() ([]byte, error) {
	return bindata_read(
		_template_genny_field_go,
		"../template/genny/field.go",
	)
}

var _template_genny_node_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\x4d\x6f\xdb\xbe\x19\x3f\x8b\x9f\xe2\x81\x81\x06\x52\xe2\xd8\xc9\x35\xa9\x37\x24\x5d\x53\x18\x68\xd2\x20\x49\xbb\x01\x9e\x11\xc8\x36\xe5\xb0\x91\x49\x4f\xa2\xb2\xa4\xae\x0f\x03\x76\xdb\xbd\xa7\x61\xc3\x80\x6d\xa7\x01\xbb\x6f\x1f\x67\xeb\xb6\x8f\x31\xf0\x21\x45\x51\xb2\x6c\xc5\x39\xfc\xff\x39\xc4\x12\xf9\xbc\xbf\xfc\x1e\x52\xf3\x70\x7c\x1f\x4e\x29\xfc\x2a\xa3\xc9\x13\x21\x6c\x36\x17\x89\x04\x9f\x78\xad\x29\x93\x77\xd9\xa8\x33\x16\xb3\xee\x7d\xf8\x25\xeb\x46\xa3\xf4\x8e\xc6\x73\x9a\x74\x91\xb6\x3b\x0a\x53\xda\x22\xde\x2d\x34\x52\xc6\x62\xda\x22\x01\x21\xa4\xdb\x05\xab\xa0\xdb\x05\x6f\xd4\xcc\xab\xb5\x28\xe2\x4e\x33\x31\x4d\x12\x91\x20\x35\x6a\xdb\x25\x00\x00\xb3\x2c\x95\x30\x0e\xe3\x18\x0e\x41\xb2\x19\x4d\x61\x4e\x13\xb8\x10\x13\x7a\x11\xce\x28\xf1\xa6\x02\x92\x8c\x83\x23\x7b\x7c\x47\xe9\xfd\xd3\x88\xc9\xb4\x3b\xa5\x9c\x3f\xc1\x94\x72\x68\xe5\x1c\xbd\x2b\x21\x24\xf4\xd3\x6b\x99\x64\x63\xd9\x8b\xc2\x58\x59\xb8\xdb\x25\x44\x3e\xcd\xa9\x15\x0c\x29\xee\xc3\x82\x78\xbb\xca\x89\xce\x1b\x31\x9b\x09\xae\xb6\xc9\x92\x90\x28\xe3\x63\xb8\xa0\xbf\xce\xc9\xfd\x00\x76\x2d\xeb\x82\x78\x09\x95\x59\xc2\x61\x27\x5f\x5b\x14\xec\x47\xb0\x53\x11\xb8\x58\x2e\x95\xcc\x87\xb0\xf0\xeb\xb6\x3f\x79\xbc\x11\x37\xca\xa2\x59\x38\x1f\x30\x2e\x87\x8c\x4b\xe8\xb9\x6f\x8b\xe5\x1a\x96\x77\x89\xc8\xe6\x5b\xf2\xa1\xe1\x39\x51\x2a\x13\xc6\xa7\x0e\x97\x5e\xa8\x32\xaa\x7f\x37\xa2\x3f\x79\x44\x3a\x4d\xe3\xa8\x2b\x16\x16\x4b\xa2\xdd\xfb\xd9\xc7\xf3\xf3\xcb\xdb\x5c\x40\x9e\x04\x18\x09\x11\x43\x0f\x30\x2c\xd7\x54\x16\x7b\x7c\x2c\x7d\x9b\xb9\x56\x5b\x53\xdc\x88\x53\x21\x62\xbf\x95\xb3\xb7\x82\xc0\x24\x44\xf1\x1a\xe2\x33\x46\xe3\x49\xea\x73\xf5\xdc\x86\xc8\xfc\x60\x40\xb5\x5d\x6a\x31\x9b\x01\xe3\x32\xd0\xfa\x17\xc4\xa3\x3c\x9b\x9d\xa9\x32\x68\x83\xb8\x87\x23\x63\x91\x76\x53\xb1\x0e\x50\xc0\x90\x78\x2c\x52\x04\x0b\xe2\x79\xb9\xbe\x6b\x2a\x6d\xfc\x7d\x25\xb9\x0d\x56\x5a\x40\xbc\x25\xf1\xba\xdd\xb3\xfe\x2f\xce\xdf\x1e\xc1\xf7\x3f\xfe\xe3\x3f\xbf\xff\xdb\xf7\x3f\xfc\xee\xdf\xff\xfc\xcb\xf7\x3f\x7f\xfb\xd7\x6f\xfe\xfe\xdf\xdf\xfe\xe9\x7f\x7f\xfd\xf6\x53\x42\x56\xc4\x61\x6d\x69\x71\xa8\x3b\x20\xc4\x9b\x26\x73\x65\x5b\x4e\xfa\x8e\x4a\x9b\x74\xdf\x10\xb9\x72\x9c\x4d\x94\x33\x4d\xe6\x81\xa3\xa9\x48\xff\x40\xed\x0f\xa1\xa7\x35\xb9\x24\x36\xd1\x03\x0c\x24\xd2\x5c\x64\x33\xe2\xb9\x19\x43\x82\x52\xb6\x56\xf9\x95\x62\xd3\x1a\x32\xc9\x28\x21\x4b\xd3\x49\x75\x6e\x33\x95\x9c\x36\xa4\x26\x61\x81\x8a\x77\x8d\xd5\x4c\x99\x93\x92\xc2\x98\x42\x42\xad\x31\x76\x3b\x28\x1a\xb9\x2e\x89\xf7\x6d\x78\x28\x97\xc7\x6a\xa7\x0d\xee\x95\xf2\x87\x8a\x6e\x64\x5f\xaf\xdb\xa4\xc8\x8d\x43\x8d\x21\x45\xda\x9e\x63\x08\x52\xae\x58\x53\xda\x6d\xb0\x08\x69\x1a\xcc\x2a\x95\x5a\x91\x17\x3f\xa1\x69\x16\x4b\x6d\x63\x01\x7e\x68\x45\x99\xa5\x08\xb9\xcf\xc5\xa4\x40\xdb\x00\xc6\x16\x0d\x15\x94\x56\x00\x52\x09\x65\x11\x28\x16\x77\xb5\xd7\x03\xce\x30\x20\xda\xe3\xf7\x62\xea\xeb\x87\x0f\xef\x6e\x7f\x7e\x72\x75\xd1\x06\xa5\xcb\x0f\x20\xdf\x3e\x49\xa6\x29\xd2\x97\x6c\x3c\xf3\x5b\x8e\x54\x2e\x24\x44\x22\xe3\x13\x6b\x5d\x2b\x20\x9e\xb7\x54\x5d\x4c\xe3\x94\x02\x8b\x20\xa6\xdc\xaf\x58\xd3\xd1\x7e\xf4\x7a\x70\x00\x5f\xbf\xd6\x52\x14\xd9\xd7\x64\xca\x90\x3a\x29\xd0\x2b\xc6\x55\xab\x86\xa6\x98\x0d\xbd\x9a\x44\x6e\x62\xd0\x93\xa1\x8e\x0b\x77\x10\xa7\x4c\x64\xaa\xc1\xce\x5b\xb5\x9a\xb8\x6b\x1a\x26\xe3\xbb\x3e\x8f\x84\x3f\x17\xa9\x6e\xd9\xc8\x04\xf6\x8a\x8e\xcf\x78\x1b\xc6\x82\x4f\xce\xcc\xd2\x1b\x7c\x56\x65\x42\xb4\x99\x6e\xe2\x3b\x65\x61\x4a\x50\xce\x1d\x28\x00\x05\xc6\x23\xa1\xb0\x0f\x39\x91\xcc\xac\x47\x86\x4c\xb3\x29\x32\xac\xc4\x6e\x57\x1d\x21\x20\xe2\xba\x2e\x94\x96\xcb\x50\xde\x2d\x94\xe9\x47\xe0\x36\x44\x7f\xf2\x78\x04\xfb\x87\x4b\xc3\x8c\xac\x98\xee\x42\x8a\x0e\x8c\xde\x21\xf8\x13\x89\x04\x98\xb2\xe7\xe0\x18\x18\xbc\xce\x63\x96\x71\xf9\x21\xc2\x01\xe4\x07\xc7\xc0\xf6\xf6\x8c\x29\xde\x54\xd1\xae\x0b\xfe\x80\x0d\xad\xaa\xbc\xd8\xfb\xe9\x7b\x1a\x46\x27\xd2\x67\xae\x3b\xe8\x52\xdf\x84\x02\x1d\xc3\x50\x20\xc7\xa7\x30\xce\x28\xbe\xb2\x20\x28\x71\x54\x62\x84\x02\xaa\x52\xb7\x09\x16\x5b\xe6\x42\x4a\x22\x96\xa5\xb7\xb1\xe0\x92\xf1\x8c\xda\x45\xbd\xad\xba\x59\x1b\x9e\x9e\x87\x72\x7c\x77\xca\xa4\x3f\x35\xe3\x1d\x03\xa7\xa2\xa2\xa7\x7b\x6e\xa2\xe7\x81\x8e\x09\xee\x63\x48\x1a\xcb\x05\x15\x42\xde\xb4\x8d\x0a\x3f\x72\x26\xb8\xab\x6f\xa6\x7c\x6e\xc3\xad\x2d\x39\x47\xf7\x39\x9d\x8d\x68\xe2\x33\x2e\xfd\xf2\x16\xec\xc3\x61\xd0\x39\x7d\x92\xd4\x0f\x82\xa0\x53\x04\x33\x09\x48\x59\x72\xa3\xfd\xde\x16\xc6\x5f\xc7\x6c\x4c\x03\xd8\xd9\x69\x26\x3d\x0d\x53\x36\x3e\xb4\x8e\x6e\xaf\xe4\xe5\x19\xd9\x46\xd9\x4d\x38\x8a\x7f\x30\x65\x18\x13\xb7\x1d\x0c\x6f\xa1\x7d\x75\xc4\xbc\xbd\xba\xfa\x70\xb5\x76\xc6\x54\xda\xaa\x32\x70\x10\x45\xf1\x6e\x33\xd2\x68\x9a\xb4\x2a\x7d\x94\xfb\x60\x00\x67\xa9\xef\x5f\xd6\x15\xdd\x1d\x78\x02\x2a\x5a\x73\x08\x0b\x45\xb5\xe2\x37\xba\xa9\x39\x34\x94\xac\x25\xc2\x1e\x68\xa0\x51\xb5\x9d\x36\xd0\x60\xa5\x34\xd0\x60\x82\x9b\x74\xa9\xbc\xe0\x81\xaa\x42\xb7\xd0\x57\xd0\xed\x92\x82\xa9\xac\x64\xa2\xcf\x1f\xc2\x98\x4d\xe0\x55\xda\x79\x95\x02\x9b\x3c\xf6\x5e\x4d\x7e\xc9\x5b\xed\x12\xe2\xb5\xd0\x18\xf3\xc2\x02\x14\xb4\xc4\x9f\x75\x07\x1a\x3d\x9d\xc0\xc7\x91\x65\x41\x5a\x0f\x3e\x77\xc4\x96\xe6\x9f\x19\x69\xf9\x4c\x43\x82\xca\x51\x47\x69\x76\xd6\xcd\x65\x52\x5f\x23\xdd\xd9\xa4\xf4\x76\x2e\x45\x0a\x06\xba\x2e\x45\x5a\xac\x5f\xb3\x2f\x8a\x77\xff\x30\xd7\xd4\x54\x54\xa8\x36\x55\x5c\x6a\xda\xe9\xd7\x7c\xfa\x3d\x73\xf8\x69\xf6\x3d\x33\xb1\xb0\xc1\x85\xb2\x63\x50\x73\xac\x66\xc3\xa1\x5b\xfd\x9e\x6b\xb4\x12\xa3\x57\x4d\x18\xd5\xe6\xa6\xa9\x6c\x8f\x62\x9f\x34\xa2\xb8\x56\xa9\xbf\x87\xbe\x7b\xaa\x70\x07\xa8\x3b\x8f\x6d\x3c\xf7\x9c\x10\xbe\xd6\xcc\x66\x5d\x3f\xe3\x46\xb9\xff\x5d\xf3\xfd\x7a\x8e\x00\xf6\xad\x8a\xca\xb0\xd4\xff\x5d\x67\xd7\x9e\xa2\xed\x79\xe1\x73\xe9\xc2\xb0\xa9\xe2\x2c\x47\x51\x76\xeb\x40\xa3\x14\x75\xfc\x70\xa2\xed\x6b\x02\x92\xad\xf8\x1c\x70\x29\xf1\xe1\x85\x64\x3d\x9b\x83\x37\x5b\xa9\x73\x30\x68\x3b\x33\xcb\xb8\xb4\xc9\x52\xb3\xfb\x82\xf9\xb1\x7a\x4f\x79\x11\x58\x79\x06\xad\x56\x8a\x49\x3b\xb9\xae\x98\xca\xbd\xac\x0a\xca\xb9\xdc\xa9\xa6\xaa\xbb\xd6\xae\x13\xe6\xb4\x95\x29\x4d\xe5\x91\x5d\x75\x24\xaf\xd6\x68\xa9\x25\xb7\x42\x2c\xf7\xaa\x66\xa5\xa4\x01\xfc\x04\x98\x0d\xb1\xab\xb6\xa0\xc9\x4f\xe3\x39\x02\x55\xb6\xf1\x13\xd7\x3d\xf5\x07\xc3\xb2\x1f\x6d\x38\x68\xd7\x21\x61\x50\xe0\x98\x3d\xb4\x5b\xa6\xc5\xa5\x48\x8f\x2c\x4a\xb7\x41\xe1\xc1\x11\x1c\x2c\x5f\x06\xb3\x05\x50\xf5\x0a\xe0\x71\xf7\x0c\x10\x6d\x03\xc3\x35\xee\x87\xf3\x39\xe5\x93\x6a\x68\xdb\xe0\xdc\x9f\xbc\xd2\x40\x32\x9f\xad\x36\x5d\x7f\x36\x00\xd0\x34\x99\x07\x4e\x56\x57\xb3\xd5\xe9\xa7\x17\x42\x5e\xd1\x70\xf2\xe4\x17\x87\xc6\x8a\xe1\x97\x22\xf5\x6d\x43\x98\x86\x8f\xcc\x5d\xc3\xfd\xa6\xe6\x7c\x5e\xfa\x6c\x42\xc0\x9c\x4b\xf7\x49\x1c\x3b\x51\xca\x05\x0c\xd7\x4e\x49\x4e\x1f\x65\x7f\xf2\x88\xab\x70\x6c\x5f\xf5\x68\xb2\x82\x83\x63\xc8\xb7\x56\xa7\x66\x35\x5b\x96\x6b\x60\x58\x86\x1b\xeb\x55\x05\xc8\x9d\x9f\x5b\x00\x77\x23\x4c\x3f\x0b\x94\x9f\x85\xc0\x5b\xc1\x6d\xe5\x80\xfe\x23\xc3\x6b\x81\xaf\x2e\xc0\x56\xfa\x7c\xb9\x16\x1e\xed\xad\x66\xf2\xa8\xe1\xd1\xaf\x7e\x03\x33\x6e\xaf\x05\x49\x47\x42\x80\xc7\xc1\xf7\x2c\x95\x1b\x40\xd5\xa5\x37\x97\x8b\xfa\xef\x3b\xec\x0b\x3d\x31\x30\x6b\xa7\x40\xf9\x0a\xbf\xe9\x2a\xe2\x39\xfd\x80\xaf\xcf\x87\x33\x9d\xa1\x2d\x4f\x8d\x3a\x17\xa5\x83\x3e\x16\xbc\x6e\x0d\x95\xa0\x39\xf9\x7f\x00\x00\x00\xff\xff\xc3\xae\xe4\xf3\x35\x1b\x00\x00")

func template_genny_node_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_go,
		"../template/genny/node.go",
	)
}

var _template_genny_node_test_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcf\x6a\xf3\x30\x10\xc4\xcf\xda\xa7\x58\x7c\x08\xd6\xf7\x19\xab\xe7\xd2\xf4\x18\xc8\xc5\x04\x92\x7b\x91\xec\x75\x2c\x62\x4b\xaa\xfe\x50\x9a\x90\x77\x2f\x52\x92\x06\x7a\xd3\x68\xf4\x9b\x59\xad\x93\xfd\x49\x1e\x09\x3f\x13\xf9\x6f\x00\xbd\x38\xeb\x23\xd6\xc0\xaa\x48\x21\x6a\x73\xac\x00\x98\xc2\xea\xa8\xe3\x94\x54\xdb\xdb\x45\x9c\xe4\x39\x89\x51\x85\x89\x66\x47\x5e\x14\x52\x28\x19\xa8\x02\x0e\x30\x26\xd3\xe3\x81\x42\xfc\x08\x24\x7d\x3f\x6d\xcd\x68\xeb\x88\xff\xee\x71\xed\x81\xe3\x05\x80\x49\x7c\x5d\x63\x47\x5f\x9d\x1d\xa8\x93\x0b\xd5\x1c\x98\x10\x0f\xb5\xd1\x34\x0f\xa1\x4b\xcb\xd6\xe8\x98\xad\xde\x9a\x21\x13\x39\xbd\x76\x36\xa0\x36\xb1\x41\x6d\x46\x8b\xaa\xcd\x15\x1c\x95\xb5\x33\x5e\x80\x31\x4f\x31\x79\x53\xcc\x76\x67\x03\xbe\xad\x31\x13\xab\x15\xd6\x8f\xbb\xff\xe5\xb0\xd7\x67\xe2\xf8\x9e\x5d\x60\x4c\x88\x3b\x18\x7d\x22\x60\x57\x60\x9e\xfa\x8d\xf9\x6d\x0d\xa8\xda\x3c\xdf\x4e\xc6\xe9\x4f\xf5\xa5\xe0\xb9\x39\xa4\x39\xe2\x1a\xa5\x73\x64\x86\xfa\xa6\x1b\x0c\xfc\xfe\x20\x53\xe1\xe9\x17\x79\xcb\xe2\xa5\x51\xb6\xfb\xe7\xd2\x5e\x1a\x2c\x13\x34\x98\x7f\xcf\x01\xae\xf0\x13\x00\x00\xff\xff\x79\x9d\x3b\x9e\xae\x01\x00\x00")

func template_genny_node_test_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_test_go,
		"../template/genny/node_test.go",
	)
}

var _template_genny_root_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\xcb\x6e\xdb\x3c\x10\x85\xd7\x9a\xa7\x98\x5f\x8b\x80\xfc\x1b\x48\xcd\x05\x46\x11\x54\x8b\xba\x40\xda\x02\x85\x03\x04\xc9\xaa\xe8\x42\x52\x46\x32\x61\x99\x54\x49\xaa\xae\x6a\xf8\xdd\x0b\x52\x37\x3a\x40\x37\xdd\xf1\x9c\x99\xf9\x48\x1e\x99\x6e\xf3\x72\x97\xd7\x84\x3f\x3a\xd2\x3d\x40\x9a\x62\xad\x50\x77\x12\x6b\x61\xb7\x5d\x91\x94\x6a\x9f\x96\x5b\xa2\x5d\x5f\x08\x6b\xd2\x9a\xa4\xec\xb1\x26\x89\xf1\xa3\x52\xf6\xa9\x6f\x29\x73\x0b\x8c\x41\xec\x5b\xa5\x2d\x32\x88\x62\xa1\x62\x88\x62\x63\x75\xa9\xe4\xcf\x18\x20\xaa\x9a\xdc\x16\x5d\x55\x91\x36\x18\x07\xe4\x5a\xa9\xba\xa1\x34\x28\xa7\xb5\x9f\x0d\x7a\x76\xf9\xef\x2e\xad\x0a\xb3\xa5\xa6\x25\x9d\xfa\x83\xa6\x45\x6e\x28\x06\x0e\x60\xfb\x96\x70\xad\x54\x83\x19\x3a\x33\x71\xeb\xd1\xed\x2d\xcd\x6e\x6f\x69\x70\xbf\x48\xfb\x6e\x72\xdd\x7a\x76\xaf\x56\x81\x7d\xb5\x9a\xfd\x9b\xeb\xc0\xbf\xb9\x9e\xfd\xd5\x6d\xe0\xaf\x6e\x07\xff\x59\x04\x78\x2f\x16\x7f\xd9\x60\x50\x4b\x65\xd9\x62\x50\x4b\x65\xd9\x64\x50\x43\xe5\xbe\x51\x79\x30\x34\xca\xa0\xb6\x8c\x8d\x72\x0c\xea\xa3\xda\xef\x95\xdc\xa8\x97\x39\x98\xc5\x01\xa8\x3a\x59\xe2\x86\x0e\x8b\xc7\x38\xfe\xff\xaa\x0d\x8f\x10\x69\xb2\x9d\x96\x78\xf1\xaa\x74\x3c\xc1\x69\xa4\x3c\xb4\x24\x99\x46\xa1\x92\x47\xca\x5f\x48\x5f\x62\x99\xb7\x28\xa4\xe5\x38\xfd\x6e\x02\xd0\x64\x1d\x17\xd6\xdd\x70\xbc\x81\xe3\xa7\xf9\x39\x7d\xdd\xaf\xbb\x8a\x15\x5d\x85\xdf\xbe\x17\xbd\xa5\x7f\x00\xcf\x88\x00\xcd\xa4\xbb\xe3\x34\xc7\x71\x43\xbf\x2c\x3b\x67\x1b\x9b\x6b\x8b\x77\x19\xba\xd6\xe4\x2b\x49\xc6\x01\x22\x51\xcd\xda\x51\xf9\x9b\x5b\x7c\x8f\x43\xeb\x11\xa2\xe9\x40\xae\x05\xa2\x13\x40\x24\xe9\xb0\xce\x0d\xcd\x1c\x27\x12\xb7\x9b\x5b\x30\x3f\xe8\xb0\xda\x3d\xae\xbb\x6c\xb9\xc9\x69\xf0\x92\xf0\x23\x6e\xe8\xe0\xbf\xd6\xc8\xbc\x74\x41\xb3\xe0\x51\x25\x9f\xc8\x3e\x3f\x54\x95\x21\xfb\x34\x35\x25\x8f\xec\x2d\xe7\x9c\xcf\x59\x39\xea\x5f\x63\xf8\x9c\x9b\x31\x89\xc2\xbd\xb5\x23\x40\x78\xa3\xf3\x4b\x07\xb1\x4c\xb8\x0f\x56\x09\x66\xd0\x58\x2d\x64\xcd\x91\x09\x69\x2f\x91\xb4\x56\x9a\x7b\x96\xf4\xca\xdd\x73\xfc\xd3\x48\x86\x09\xee\x73\x75\xa5\xff\x32\x94\xa2\xc1\x8b\x0b\x34\x98\x65\x18\xdf\x0b\x6a\x5e\x36\xdd\x3e\xf6\xe9\xba\x0e\xdf\xe0\xb2\x9d\x4f\xe6\xa1\x70\x82\x3f\x01\x00\x00\xff\xff\x5b\x48\xe2\xf5\xe4\x04\x00\x00")

func template_genny_root_go() ([]byte, error) {
	return bindata_read(
		_template_genny_root_go,
		"../template/genny/root.go",
	)
}

var _template_genny_union_alias_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\xc1\x4a\xc3\x40\x10\x86\xcf\x99\xa7\x18\xf6\x20\x49\x29\x99\x7b\x21\x07\x51\x04\xc1\x16\xb1\xd6\xab\x6c\xd2\x69\xba\x34\xd9\x8d\x9b\x5d\x31\x96\x42\xdf\xd5\x17\x91\xa4\x98\xcd\xa1\x07\x6f\x3b\xff\x7c\xff\x9f\x99\x49\x23\x8b\x83\x2c\x19\x3f\x3c\xdb\x0e\x80\x66\x50\xfb\xd6\x61\x21\xab\x0a\x1b\xb6\xb8\xd1\xca\xe8\x95\xac\x19\x7e\xce\xe7\x92\xb5\xee\xb0\x64\x8d\x62\x65\xb6\xdc\xcb\xd9\x8b\x31\x2e\x50\xd9\x1b\xdb\x56\x19\x8d\xb7\x95\x92\xed\xa0\x3c\xea\x2d\x7f\xad\x9d\x55\xba\x9c\x0f\xef\x95\xaf\x05\xcc\x08\x40\xd5\x8d\xb1\x0e\x63\x88\x44\xa9\xdc\xde\xe7\x69\x61\x6a\x3a\xc8\x6f\x4f\xbb\xbc\xdd\x73\xd5\xb0\xa5\x61\x30\xca\x65\xcb\x02\x12\x00\x22\x1c\x6d\x44\x18\xe5\xf8\x4f\x2f\x11\x0e\x76\xd7\x35\x1c\xa6\xeb\x97\x61\xab\x8a\xf4\xb5\x6b\x18\xe0\x53\x5a\xbc\xdf\x2c\x97\xcf\xef\xe3\x46\x01\xcd\x8d\xa9\x30\xc3\x3e\x2e\x5d\xb3\x1b\x1a\xb1\x18\x41\x31\x47\x31\xc2\x22\x01\xd8\x79\x5d\x60\xac\xcd\x96\xc3\x7d\x92\xf0\xe9\x78\xf2\xc6\x23\x44\x44\x96\x5b\x5f\x39\x5c\x64\xa1\x71\xbc\x33\x75\x6d\x74\x7f\xed\x05\xf6\x51\x69\x10\x4e\x10\x5d\x73\x8c\xf2\x04\xc5\x0c\x6f\x42\x35\x41\xfa\xf2\x49\xb5\x0e\xb3\x4b\xfa\x5f\x7d\x25\x23\x1d\x06\xcd\xa6\x4b\x8e\xd4\x03\xbb\x62\x3f\xfc\xdc\x38\xe9\x45\xe7\xad\xc6\x4b\x0f\x4e\xf0\x1b\x00\x00\xff\xff\x4a\x31\x3d\xc9\x64\x02\x00\x00")

func template_genny_union_alias_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_alias_go,
		"../template/genny/union-alias.go",
	)
}

var _template_genny_union_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xbf\x6e\xb3\x30\x14\x47\x67\xee\x53\xfc\xc4\x10\x01\x43\xac\x6f\x8d\x94\xe9\x9b\x3a\x34\x5b\x1f\xc0\x38\x37\xc4\x0a\xbe\xa6\xfe\xa3\x96\x22\xde\xbd\x22\x51\x09\xea\xd4\x85\x01\xff\xce\xd1\xb1\x07\x6d\x6e\xba\x63\xbc\x67\x0e\x23\x91\x6a\x08\x00\x5c\x8e\x09\x46\xf7\x3d\xfe\x21\x59\xc7\x11\x03\x07\x9c\xfc\x99\x4f\xda\x31\x15\x9d\x47\xc8\x82\xce\xa6\x6b\x6e\xf7\xc6\x3b\x65\xae\xcc\xb7\xb1\xb5\x29\xaa\x8e\x45\x46\x74\x2c\x28\xdf\xc4\x7a\x59\x90\xe3\x8b\x9c\xf9\xb3\x24\x6a\x14\x91\x75\x83\x0f\x09\x15\x15\xe5\xc6\x70\xd3\x5f\x59\x5d\xda\x78\xe5\x7e\xe0\xa0\xee\x41\xaa\xd5\x91\x4b\xaa\x89\x94\xc2\x8a\x29\x85\xa2\xc5\x1f\x59\xa5\x50\x13\xa5\x71\x60\xac\x35\x88\x29\x64\x93\x30\x51\xd1\x2c\xab\xfd\x7f\xef\x9c\x97\xe5\x7e\x34\x13\x5d\xb2\x18\x9c\xf8\x63\xdd\x57\x35\x9a\x27\x3c\x51\x11\x38\xe6\x3e\xe1\x70\xc4\x6e\xfd\x3f\x3d\x25\x07\xec\x7e\x69\xa7\x79\xfe\xa1\xf6\x77\xc9\x71\xf3\x38\xe5\x72\x94\x72\x10\x3c\x16\x6b\x43\x25\xfe\xbc\xc9\xae\xf1\xca\xae\xe5\x50\x59\x58\x49\xf5\xf2\xe1\x70\xd1\x86\xa7\xf9\x11\x75\x77\x88\xed\x69\xa6\xef\x00\x00\x00\xff\xff\x6c\x06\xe0\x77\xd8\x01\x00\x00")

func template_genny_union_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_go,
		"../template/genny/union.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"../template/genny/dummy.go": template_genny_dummy_go,
	"../template/genny/field.go": template_genny_field_go,
	"../template/genny/node.go": template_genny_node_go,
	"../template/genny/node_test.go": template_genny_node_test_go,
	"../template/genny/root.go": template_genny_root_go,
	"../template/genny/union-alias.go": template_genny_union_alias_go,
	"../template/genny/union.go": template_genny_union_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"..": &_bintree_t{nil, map[string]*_bintree_t{
		"template": &_bintree_t{nil, map[string]*_bintree_t{
			"genny": &_bintree_t{nil, map[string]*_bintree_t{
				"dummy.go": &_bintree_t{template_genny_dummy_go, map[string]*_bintree_t{
				}},
				"field.go": &_bintree_t{template_genny_field_go, map[string]*_bintree_t{
				}},
				"node.go": &_bintree_t{template_genny_node_go, map[string]*_bintree_t{
				}},
				"node_test.go": &_bintree_t{template_genny_node_test_go, map[string]*_bintree_t{
				}},
				"root.go": &_bintree_t{template_genny_root_go, map[string]*_bintree_t{
				}},
				"union-alias.go": &_bintree_t{template_genny_union_alias_go, map[string]*_bintree_t{
				}},
				"union.go": &_bintree_t{template_genny_union_go, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
