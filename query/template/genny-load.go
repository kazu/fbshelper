package query

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _template_genny_dummy_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xcb\x6a\xf3\x30\x10\x85\xd7\x9e\xa7\x18\xb2\x08\x49\x16\xd1\xbf\xf8\x57\x85\x2e\xda\x42\x97\x2e\xb4\x7d\x01\x59\x1e\xdb\x22\xba\x55\x1a\x51\x1c\xe3\x77\x2f\xca\x05\x07\x0a\x25\x3b\x71\xe6\xe8\x3b\x5f\x90\xea\x20\x7b\xc2\xaf\x4c\x71\x04\x10\x02\x79\xd0\x09\x75\xc2\x36\x5b\x3b\x62\x4f\xce\x8d\xc8\x64\x83\x91\x4c\xd8\x69\x43\xa0\x6d\xf0\x91\x71\x03\xd5\xaa\xd7\x3c\xe4\x66\xaf\xbc\x15\x07\x79\xcc\xa2\x6b\xd2\x40\x26\x50\x14\x27\xa0\x68\x64\xa2\x15\x54\x0d\xde\xd9\xdc\x02\xf0\x18\x08\xdf\x29\x65\xc3\x9f\xe5\x59\xfb\x96\x6a\x69\xe9\x7a\xf1\xfe\x9c\x27\x8e\x59\x31\x4e\x50\xed\x9a\xfd\x8b\xb7\xd6\xbb\x52\x85\xf9\x52\x7c\x32\x5a\xa6\xf2\xf1\xaf\x66\x97\x9d\x42\xb2\x81\xc7\x65\x71\xb3\xc5\xdd\xcd\xfe\x04\x55\x24\xce\xd1\xe1\x7a\x49\xa7\x05\xf3\x80\xeb\xe2\x7e\x03\x9e\xe6\xb9\xb0\x95\x77\x89\xf1\x55\x93\x69\xeb\x6c\x51\x3b\xc6\x47\xfc\x77\xcd\x3f\xf4\x91\xde\xba\x67\x99\xb4\x3a\xcd\x9c\xcf\xff\x2f\x4a\x35\x7d\xdf\x21\xf4\x4b\x1c\x66\xf8\x09\x00\x00\xff\xff\x03\x7e\x6b\x0a\xd1\x01\x00\x00")

func template_genny_dummy_go() ([]byte, error) {
	return bindata_read(
		_template_genny_dummy_go,
		"../template/genny/dummy.go",
	)
}

var _template_genny_field_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x53\x4d\x8f\xda\x30\x10\x3d\xc7\xbf\x62\xe4\x93\x8d\x68\x72\xaf\x94\x4a\xa8\x5f\xaa\xd4\xe5\x50\xe8\xa1\xa7\x55\x3e\x26\x60\x11\xdb\xa9\x63\xd3\x4d\x57\xfc\xf7\xca\x0e\x89\xd9\x6d\x84\x5a\x0e\xe0\xf1\xbc\x79\xf3\x3c\x6f\xe8\x8a\xea\x54\x1c\x10\x7e\x3a\x34\x03\x21\x42\x76\xda\x58\x60\x24\xa1\x07\x61\x8f\xae\x4c\x2b\x2d\xb3\xea\x88\x78\x1a\x4a\x61\xfb\xec\x80\x4a\x0d\xfe\x1b\x8d\xa8\xe8\x4b\xd8\xa9\xf8\xed\xb2\xa6\xec\x8f\xd8\x76\x68\xb2\x40\x99\x95\x45\x8f\x94\x70\x42\xb2\x15\x09\xc5\x20\x5d\x6f\xa1\x44\xa8\x8a\xb6\xc5\x1a\x3a\x34\xf0\x49\x60\x5b\x93\x55\x46\x88\x1d\x3a\x1c\xc3\x6d\x21\x11\xae\x8d\xd2\xfd\xd0\xe1\x6d\xd2\xc7\xaf\x92\xe7\xc2\x78\xdd\x5b\x5d\xa3\x2f\x7d\x9c\x49\xae\x27\x27\x41\x28\x0b\x39\x78\x45\xe9\xc6\x6a\xb1\xd5\x1f\x8d\x61\xfe\xc4\xe8\x84\xa1\x9c\x2f\x71\xc0\xfc\x19\x39\xee\x74\x09\x6f\xcd\x80\x35\x3e\x06\xa1\xb0\x7e\x5a\xc3\x18\x78\xfd\x1c\xde\xbc\x83\x58\xff\xa5\x7e\xda\xeb\xf0\x00\xaf\xff\xc3\xf7\x87\x87\x1f\x8f\x0b\xed\x4b\xad\x5b\xc8\x61\x87\x76\x4a\x86\x5c\xcf\xe8\x14\xd3\x35\xd0\x19\x3f\x07\x9e\x99\xae\xef\xc9\xe5\x84\x34\x4e\x55\xc0\x94\xae\x71\x06\xf2\xe8\x01\xe3\xc0\x0c\xf6\xae\xb5\xb0\xfa\x16\x7e\xf7\xe1\x19\xcf\x24\xb9\x5e\xe7\x80\xb2\xb3\x43\x4c\x32\x4e\x92\x4a\x4b\xa9\x15\xbc\xcd\xc1\x13\xa7\x81\x6e\x63\xd9\x5d\x25\x89\x68\x60\xac\x4b\x3d\x0e\xf2\x1c\x94\x68\x7d\xa7\xd8\x6a\x8b\xbf\x5e\x36\x4a\x02\xff\x0e\xed\x3f\xb4\x58\xc3\xc8\x93\xee\xb0\x6d\x36\xfd\xfb\xd0\xcb\xe3\x99\xb7\x7d\xd2\xfc\x5f\x92\x2f\x64\x9a\x43\x1a\x9c\xca\xe7\x17\x14\x12\x63\x4a\xd7\xf8\x55\xf4\xf6\x26\x7d\xbd\x99\x21\xf3\x26\x44\x4c\x5c\x8e\xbf\x40\x9f\x8d\x76\xdd\x02\x32\xdc\x07\x49\xd6\x19\x45\x2e\x7e\x17\x17\xfd\x9d\x06\x16\x2c\x3e\xc3\x2a\xfc\x2b\xe2\x40\x38\xa0\x31\xda\xc0\xf3\xf2\x76\xbc\xae\xbe\x5d\x8c\xa9\x70\x12\x31\x4e\x33\x52\xdf\x7a\x15\x8d\x39\x2f\x7a\x72\x21\x7f\x02\x00\x00\xff\xff\x1e\x42\x12\xfd\xa1\x04\x00\x00")

func template_genny_field_go() ([]byte, error) {
	return bindata_read(
		_template_genny_field_go,
		"../template/genny/field.go",
	)
}

var _template_genny_list_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x56\xc1\x6e\xe3\x36\x10\x3d\x9b\x5f\x31\xf5\x21\x20\x0d\x45\x4a\xae\x46\x75\x48\x83\x16\x08\x10\xb8\x40\x53\xa4\x87\x20\x08\x68\x99\xb2\xd9\x50\x94\x4a\x51\x49\x5d\x43\xff\x5e\x8c\x28\x59\x94\xb3\xb2\xbd\xbb\x39\xed\x21\x80\x42\x0e\xe7\xbd\x79\xf3\x66\x92\x82\x27\xaf\x7c\x2d\xe0\x9f\x4a\x98\x2d\x21\x32\x2b\x72\x63\x61\xba\x96\x76\x53\x2d\xc3\x24\xcf\xa2\x57\xfe\x5f\x15\xa5\xcb\x72\x23\x54\x21\x4c\xd4\x04\x46\x4b\x5e\x8a\x29\x21\x76\x5b\x08\xb8\x97\xa5\xfd\x13\x3f\x4a\x6b\xaa\xc4\xc2\x0e\xa2\x08\xd6\x42\xeb\x2d\x99\xcc\x6e\xf3\x2c\xcb\xf5\x22\x5f\x09\x52\x13\x12\x45\x80\x9f\x0b\x9e\x89\x36\x22\xad\x74\x02\x0b\xf1\xde\x25\xa1\x0c\x66\xfb\x84\x3b\x42\x26\x4a\x96\x16\xe6\x31\x88\xac\xb0\xdb\x3e\xca\x5d\x84\x98\x0d\x0f\x21\x86\x0b\xe4\xb4\x3f\xd8\xd5\x6d\x44\x4f\x20\x6c\x60\x63\x98\x3e\x3d\x77\x24\xa6\x84\x4c\xe8\xac\x79\x88\x8f\x18\x3d\x78\xc2\xc2\x3b\x2d\x2d\x5e\x21\xa2\x11\xb6\x32\x1a\x30\x06\x8b\x69\xa8\x1f\xd0\x1a\x90\xef\x1e\x5c\x74\x67\xbb\x3e\xf3\xbc\xe5\xdb\x9f\xec\xea\x7a\x9f\x95\xea\x7c\xd5\x0b\xcb\xe0\xc6\x52\x09\x52\x5b\x06\xd4\x88\xb2\x52\x16\x66\x5d\x09\x01\x08\x10\xc6\xe4\x86\x39\xc4\xe6\x36\x86\x8b\xee\x1e\x85\x70\xa7\x1e\x16\x3e\x8a\x61\x50\x39\x22\x0e\x2a\x47\xcc\x7d\xd1\x47\x98\xfd\x25\x37\x79\x65\x7f\x45\x0a\xa3\x24\x3d\x6e\x08\x3d\x8f\xa1\x81\x6b\x21\x64\x0a\x02\x7e\x8a\x41\x4b\x85\x71\x7d\x11\x5a\x2a\x32\xa9\x4f\x72\x78\x10\xb6\x13\x28\x80\x37\x1f\xb5\x11\xc6\xeb\xc4\xf1\x8a\xdb\x3c\x01\xbc\xf9\xc7\xa4\x1e\xa9\x7c\xb5\xa2\x6f\xde\xef\x5f\x87\x85\xaf\x07\x11\x03\x4c\x36\x5a\xeb\x1f\x5c\xaf\x05\x2d\x2d\x37\x36\x00\xc5\x4b\xeb\x14\x1f\xd8\x4e\xa1\xc0\xc7\xe1\x17\xe2\x9d\x36\xf7\xbf\x17\xf6\x43\x4a\xe6\x7a\xa2\x20\xf6\x7b\xd2\x14\x35\xec\xc8\x88\xb3\x5b\x68\x0f\x8f\x2a\x36\x6e\xee\xdf\xa4\xc1\xf9\x3a\x6d\x6d\xc7\xa0\x35\xce\xd5\xb8\x46\xf7\xfc\x1b\xf2\x49\x6d\x9d\x4c\xdd\x06\x09\x1f\xb9\xaa\xc4\x9d\x4e\xf3\xf0\xf1\x5e\x68\x06\x97\x70\x3d\x8e\xf9\x20\x94\x48\x2c\x4d\x35\xe0\x35\xf5\x3c\xb8\xcc\x73\xd5\x93\x79\x7a\xfe\xd2\x50\x40\x0c\x19\x7f\x15\xd4\xbb\x0d\xe0\x2a\x80\x93\xa4\x18\x99\x24\x8d\xcc\xe5\xe9\x9e\x77\x14\x91\x5f\x92\x81\xb7\x9a\x1d\x49\xbf\xcf\xa9\xa6\xfd\x06\xf1\x7b\x9b\x64\x35\x23\x13\xfc\x49\x73\x03\x2f\x01\x24\x19\x22\x1b\xf4\x10\x74\x54\x06\x43\xcc\x8b\x42\xe8\x15\xed\xa6\xff\x68\xda\x7d\x57\x5c\xf4\x11\xcb\xe8\xd5\xb8\xd6\xfb\x03\x4f\xe0\xf9\xa9\x95\x78\x72\x1f\x3a\xcc\x4f\x12\xef\xbc\x32\x6f\x94\xa2\xcc\xb7\xcc\xa1\x6f\xfd\x96\x1e\xc8\x00\x3b\x68\x23\xad\xa9\x04\xd4\xe3\xd6\xbd\xcd\x2b\x8d\xf3\x22\xb5\xf5\xf2\x9f\xb4\xde\xf8\x28\xbc\xf3\xc2\xed\xd1\xbf\xdd\x72\xfa\xb8\x19\xc7\x1c\xda\xbf\x3c\x92\x3e\x37\xf6\x97\x2d\x55\xa2\x2c\x5d\xff\x7b\x20\xd7\xfe\xf3\xe1\xfa\x4c\xac\xfd\xef\xe4\x41\x70\x93\x6c\x20\x0c\x43\x58\x4a\xcd\xcd\x16\xca\xe6\x64\x6c\xe8\xf1\xee\xbb\x8c\x48\x26\xf2\x9c\xc9\x45\x9c\x3b\xbd\x12\xff\x36\x7b\xea\x78\x34\x76\x87\x32\x16\xc0\x67\x99\x55\xa6\x20\xe1\x67\x38\x1b\xd9\x9b\xff\x00\x5e\x60\xf8\xc7\x1e\x4b\x3e\xcf\xfd\x7e\xd5\xa3\x12\x3b\xd3\xfe\xc0\x2a\xba\x61\x1c\xe8\x76\x79\x4d\x6a\xf2\x7f\x00\x00\x00\xff\xff\xb6\xce\xe0\x86\xb9\x0b\x00\x00")

func template_genny_list_go() ([]byte, error) {
	return bindata_read(
		_template_genny_list_go,
		"../template/genny/list.go",
	)
}

var _template_genny_node_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\xdd\x6e\xdb\x38\x13\xbd\x16\x9f\x62\xea\x8b\x42\x4c\x0d\xbb\xdf\x6d\xfa\x19\x8b\x34\xb5\x03\x03\x89\xb3\x70\xdc\xed\x02\x41\x60\x28\x32\xe5\x70\x23\x91\x0a\x49\x65\x93\x75\xf5\xee\x8b\x21\xf5\x43\xd9\x72\x9a\xbd\x89\xe2\xe1\x99\x33\x87\x33\x9c\x21\xf3\x28\x7e\x8c\xb6\x0c\x9e\x0a\xa6\x5e\x09\xe1\x59\x2e\x95\x81\x90\x04\x83\x2d\x37\x0f\xc5\xfd\x28\x96\xd9\xf8\x31\xfa\xa7\x18\x27\xf7\xfa\x81\xa5\x39\x53\x63\x8b\x1d\xdf\x47\x9a\x0d\xde\x81\x4b\xe5\x76\x40\x28\x21\xe3\x13\x02\x00\x59\xa1\x0d\xc4\x51\x9a\xc2\xff\xc0\xf0\x8c\x69\xc8\x99\x82\x55\x74\x9f\xb2\xb1\x36\xaa\x88\x4d\xb8\x90\x1b\xb6\x88\x32\x46\xc9\xc9\x98\x10\xf3\x9a\x33\xa8\x4d\xe0\x20\xb0\x23\xc1\x09\xc6\x1f\x9d\xcb\x2c\x93\x02\x97\x49\x49\x48\x52\x88\x18\x58\x96\x9b\xd7\xda\x21\xa4\x70\xd2\x38\xef\x48\xa0\x98\x29\x94\x80\x8f\xb5\x6d\xd7\x12\x9c\xc2\xc7\x3d\xca\x5d\x59\x22\xeb\x73\xa4\x1a\x01\xeb\xf9\xe6\x65\x25\x57\xa8\x29\x8b\xf2\x5b\x2e\xcc\x1d\x17\x06\x26\xfe\xaf\x5d\x79\xc4\xe5\x42\xc9\x22\xff\x8f\x7e\x56\x78\x0d\xd2\x46\x71\xb1\xf5\xbc\x9c\x61\xdf\x11\xff\xac\xe4\x7c\xf3\x62\x71\x0e\xe3\x85\x6b\x0d\xbb\x6a\x77\xdf\xbe\x5f\x5d\xfd\xbe\xae\xfd\xe7\xfa\xc6\x65\xf9\x5e\xca\x14\x26\x60\xb3\x72\xc3\x4c\xbb\x26\x62\x13\x0e\x6a\xf8\x60\xe8\x10\x2b\xf9\x55\xca\x34\x1c\xd4\xee\x03\x4a\xab\x8a\xa0\x6f\x05\x9e\x71\x96\x6e\x74\x28\xf0\xff\x21\x24\xd5\xc7\xe6\xd3\xc9\x42\x63\x91\x01\x17\x86\xba\xf8\x3b\x42\x02\xcb\xbf\x64\x4f\x05\xd3\xe6\x86\x19\xc3\xc5\xf6\x6d\x32\xc7\x42\x09\x09\x98\x28\xb2\x99\xb1\x26\xf9\x08\xa7\xd5\x6e\x5c\x86\x10\x79\x6b\xf1\x77\x24\xe0\x09\x02\x76\x24\x08\x6a\xad\x37\xcc\x34\xa5\x0b\x91\x6f\x08\x0d\x1b\x25\x41\x49\x82\xf1\x78\x36\xff\xf3\x6a\x7a\x8a\xa4\x3c\x06\x7b\x54\xa5\x48\x5f\x41\x1b\xa9\xd8\x6f\x84\x1c\x70\xd9\x33\xe9\xb8\x6c\x60\x94\xb8\x55\x39\x0a\xab\xa1\x17\xcc\x34\x87\x25\xac\x40\x3e\x8f\xb7\x68\x79\xb6\x2a\xa7\x5e\xa4\xf6\xd8\xdc\xe2\xfa\x1d\x4c\x5c\x24\x1f\xd2\x1c\x90\x5b\x9b\x34\x8b\x59\x14\x59\x95\xe8\xaa\xd4\x16\xd0\x29\xf3\xa1\x3f\x06\xae\x5a\xca\xa8\x82\x11\x52\xba\x8a\xf7\x6e\x9b\x63\x55\x87\xa0\xab\x4a\x53\x4c\x76\x8f\x6a\x8e\x72\x34\x69\xc5\xb4\x0c\xbd\x62\x9a\x65\xda\x8c\x80\xde\x0a\x3e\x0e\xe1\xb9\x73\xae\x82\xc3\x0e\xbd\x7d\xc4\xe0\xcf\x7b\xb1\xad\xfb\xf1\xd8\x55\x89\xfc\x3c\xf4\x08\x69\xcb\xf6\x1e\x21\x16\x79\xa0\xa6\xb3\xfa\x0b\x45\x16\xf3\x0b\x59\x9d\xa3\xd6\xd6\x25\x54\x4c\x17\xa9\x71\x1a\xdb\xa1\x69\x55\x74\x5d\xda\x94\x87\x42\x6e\xda\x39\x4d\x21\x6e\xa6\x28\x8e\xe0\xbd\xc1\x8a\xa4\x3c\x01\x74\xf1\xad\x93\x09\x08\x6e\x13\x12\xa4\x72\x3b\xba\x94\xdb\xd0\x7e\xaf\x2f\xd6\x3f\xce\x96\x8b\x21\x60\xa4\x90\x42\xb5\x78\xa6\xb6\xda\x82\x6b\x81\x68\x9f\x85\x03\x8f\x51\x48\x03\x89\x2c\xc4\xa6\x51\x36\xa0\x24\x08\x4a\x6c\x5f\x60\xa9\x66\xc0\x13\x48\x99\x08\xf7\xa4\x8c\xdc\x26\x26\x13\xf8\x0c\x3f\x7f\xf6\x22\xda\xd2\x3b\x18\x0a\xe9\x63\x81\x09\xb4\x85\xea\xc1\xb4\x17\xca\xa4\xa7\x8a\x6f\x39\xb8\xeb\xa4\xcf\xcb\xae\xd8\x09\x55\x65\x66\x8f\xa3\x6e\xd3\xfd\xa2\xdd\xb0\x48\xc5\x0f\x73\x91\xc8\x30\x97\xda\xb5\x6b\x52\x15\x7e\xc9\xe2\x99\x18\x42\x2c\xc5\x66\x56\x99\xce\xed\xff\xd4\x8e\x68\x1b\xc1\x2f\xfa\xa8\x4b\x86\x44\xb5\x37\x25\x47\x8f\x8d\x85\x53\x08\xb9\x48\xa4\x0b\x82\x16\x17\xc2\xdf\x4b\x27\x92\x73\x7a\x83\x54\x5f\xb2\x28\x39\x33\xe1\x5f\x7b\xf7\xca\x71\xc6\xc6\xe3\x0d\xda\x73\x59\x08\x73\x9d\xd8\x5b\x28\xa4\x48\xed\x35\x0b\x1e\x99\xbe\x31\x71\x8c\xec\x8f\x28\x2d\x98\xdd\x08\xaf\x44\xe2\xe6\x1b\xab\xc7\x7c\xa8\xd6\xf3\x3d\x1e\xc0\xca\x3c\x33\x21\xdf\xbc\xb8\x00\x7d\x4d\x79\x34\x84\xe7\xed\x85\xd0\x2a\xf6\x22\x4c\x9f\x8a\x28\x0d\x37\xda\x78\xb6\x7a\xc2\x25\x52\x01\xc7\x5b\xee\xf3\x17\xe0\xf0\x7f\xd0\x2a\x1e\x75\xf3\xf7\x05\xf8\xa7\x4f\xb6\x8b\x78\x02\x1f\x70\xbd\x89\x49\x47\x0d\xb5\x67\xa4\x9d\xde\x4f\xa2\x54\x63\xb7\x94\xfe\xb1\xaf\x87\x5e\xe7\x0d\xf9\x83\x9b\x87\xa9\x52\xfe\x53\xb2\x5e\x22\x01\x2e\x30\xa5\xa4\x3a\x1c\xe1\x5c\x6c\x53\xe6\xb2\xda\x38\x0c\x81\x39\x38\x3d\xa0\x6f\xb3\xb9\xb7\xb2\xab\x7f\x9f\xda\x3c\x0f\x61\xaa\xd4\x29\xb0\xb2\x8d\xc8\xfe\x3e\xf6\x7c\xb5\x25\x3b\xcb\xf3\xf4\xb5\x7a\x0d\x79\xcf\x20\xea\x9a\x10\x93\xbc\xf7\x04\xae\xba\x13\x0d\x97\x5c\xe3\x33\xd0\xbd\x74\x6b\xc3\xae\x24\xef\x19\x5d\x16\x32\x17\xdc\x84\xb4\xdb\x3b\x6f\x9f\x39\x3b\x8c\x74\x48\x3b\x0f\xdf\xc3\xec\xec\x4f\xaf\x63\x9c\x4b\x29\x0d\x4e\x08\xfc\xba\xa7\x5e\x55\x00\x77\xa7\x7c\xa8\x54\x56\x30\x3c\x22\x55\xa0\xda\x61\x57\x0e\xed\x4d\x31\x5d\x2e\xd7\x8b\xeb\xf5\x7c\x71\x7e\xf9\xfd\xdb\x74\xbd\xbc\xbe\x5e\xb9\xb3\x23\xa5\xc1\x24\x1a\x69\x39\x2c\xdf\xd7\x48\x7b\x57\x3c\x22\x86\x78\x55\x91\x92\xfc\x1b\x00\x00\xff\xff\xa5\x1f\x09\x86\x40\x0d\x00\x00")

func template_genny_node_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_go,
		"../template/genny/node.go",
	)
}

var _template_genny_node_test_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcf\x6e\xf2\x30\x10\xc4\xcf\xde\xa7\x58\xe5\x80\xe2\xef\x8b\xe2\x9e\xab\xd2\x23\x12\x17\x84\x04\xf7\xca\x4e\x36\xc4\x22\xb1\x5d\xff\x39\x00\xe2\xdd\x2b\x9b\x50\xa4\xde\x3c\x1e\xff\x66\xd6\xeb\x64\x77\x96\x27\xc2\xef\x44\xfe\x02\xa0\x67\x67\x7d\xc4\x1a\x58\x15\x29\x44\x6d\x4e\x15\x00\x53\x58\x9d\x74\x1c\x93\x6a\x3b\x3b\x8b\xb3\xbc\x26\x31\xa8\x30\xd2\xe4\xc8\x8b\x42\x0a\x25\x03\x55\xc0\x01\x86\x64\x3a\x3c\x52\x88\x5f\x81\xa4\xef\xc6\xad\x19\x6c\x1d\xf1\xdf\x12\xd7\x1e\x39\xde\x00\x98\xc4\xf7\x35\xd2\xec\xe2\x65\x67\x7b\xda\xc9\x99\x6a\x0e\x4c\x88\xa7\xda\x68\x9a\xfa\xb0\x4b\xf3\xd6\xe8\x98\xad\xce\x9a\x3e\x33\x39\xbf\x76\x36\xa0\x36\xb1\x41\x6d\x06\x8b\xaa\xcd\x25\x1c\x95\xb5\x13\xde\x80\x31\x4f\x31\x79\x53\xcc\x76\x6f\x03\x7e\xac\x31\x13\xab\x15\xd6\xcf\xbb\xff\xe5\x70\xd0\x57\xe2\xf8\x99\x5d\x60\x4c\x88\x05\x8c\x3e\x11\xb0\x3b\x30\x4f\xdd\xc6\xfc\xb6\x06\x54\x6d\x9e\x6f\x2f\xe3\xf8\xa7\xfa\x56\xf0\xdc\x1c\xd2\x14\x71\x8d\xd2\x39\x32\x7d\xfd\xd0\x0d\x06\xbe\x3c\xc8\x54\x78\xf9\x45\x3e\xb2\x78\x69\x94\xed\xe1\xb5\xb6\xb7\x06\xcb\x04\x0d\xe6\xdf\x73\x80\x3b\xfc\x04\x00\x00\xff\xff\x93\x01\x9e\x3b\xb0\x01\x00\x00")

func template_genny_node_test_go() ([]byte, error) {
	return bindata_read(
		_template_genny_node_test_go,
		"../template/genny/node_test.go",
	)
}

var _template_genny_root_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x98\x4d\x6f\xdb\x38\x13\xc7\xcf\xe2\xa7\x60\x75\x08\xc8\xa7\x86\x5c\xbf\x40\x08\x8a\xfa\xf0\x64\x81\x6c\x03\x14\xce\x22\x6d\xd1\xc3\x62\x0f\xb2\x43\xd9\x42\x6c\x51\x2b\x91\x49\x94\x20\xdf\x7d\x31\x24\x45\x51\xb2\x63\xaf\x00\x41\xd8\x4b\x21\x0e\x87\xf3\xf2\x23\xf9\x37\x9b\x2c\x5a\x3f\x44\x1b\x86\xff\x96\x2c\x2f\x11\x4a\xf6\x19\xcf\x05\x26\xc8\xf3\x13\xee\x23\xcf\x2f\x44\xbe\xe6\xe9\xa3\x8f\x90\x17\xef\x22\xb1\x92\x71\xcc\xf2\x02\xfb\x9b\x44\x6c\xe5\x2a\x58\xf3\xfd\x78\xc3\xf9\x66\xc7\xc6\xce\xf4\x78\xa3\xd6\x3a\x3e\x0f\xd1\x8b\x1c\xc7\xab\x62\xcb\x76\x19\xcb\xc7\x2a\xdb\x78\x15\x15\xcc\x47\x14\x21\x51\x66\x0c\x5f\x71\xbe\xc3\x0b\x0c\xc6\x00\xbe\x8d\xb5\x14\xcc\x5a\x4b\xc1\xb4\xf5\x26\x15\x97\x95\x15\xbe\xad\x75\x12\x3a\xe6\x49\x68\xed\xb3\xa9\x63\x9f\x4d\xad\x3d\x9c\x3b\xf6\x70\xae\xed\x3f\x13\x27\xbc\x1a\xd4\xf6\x3a\x81\x1e\xd5\x33\x75\x0a\x3d\xaa\x67\xea\x24\x7a\xa4\x67\xae\x77\x3c\x72\x16\x99\xa1\x33\x57\x2f\x33\x43\x03\xea\x37\xbe\xdf\xf3\x74\xc9\xef\x2d\x98\xda\xa2\x3d\xbe\x25\x85\xa8\xe6\xe0\xfb\x60\xa1\xeb\xe0\x2c\x46\xb1\x4c\xd7\x98\xed\x33\x51\xd6\x56\x42\xf1\xff\x5a\x8e\xf8\x15\x79\x39\x13\x32\x4f\xf1\x45\x6b\xea\xf5\x0d\xbd\x99\x38\x4b\xf6\xf4\x6f\xa3\x1c\xa4\xb4\x41\x5a\x33\x50\x38\x84\x6a\xb5\xe2\xd4\xd3\x9c\x79\xaf\x9c\xb3\x71\x8e\xe6\x6d\x56\x55\xc5\xb0\x98\x9d\xe5\xa4\xb6\x52\x72\xc8\x88\xba\x55\x55\x71\x8e\x55\xd0\xca\x7b\x9b\xb1\x94\xe4\x38\xe1\xc1\x1d\x8b\xee\x59\x3e\xc2\xeb\x28\xc3\x49\x2a\x46\x98\x67\xa2\xc0\x41\x10\xa8\x5c\xb7\x99\x48\x78\x4a\xf1\x1d\xe7\xe2\x07\x6c\xbd\x0a\x5b\xc8\x9d\xc0\x9f\x17\xd6\xfa\x5a\x97\xf4\x19\x9b\x75\x10\x5f\x45\xd5\x11\x83\x20\xa0\x6f\xd5\x5a\xa7\x85\x60\x19\xed\xe1\xf8\xf9\x55\x2c\x1f\x79\x2a\xc2\x77\x26\xc0\x04\xd3\xe4\xf8\x2a\x6a\xc3\x5d\x33\xb1\xde\xde\xa4\xf7\xec\x99\x50\xdb\xb6\x9e\x6b\x74\x7c\x55\x5e\xc9\x98\xac\x64\x8c\xff\xfc\x6b\x55\x0a\xd6\x63\xb3\x36\xf4\x7f\xa4\x5d\xc1\x21\x1c\x59\x19\xc1\x8b\x0a\xd6\xec\x6b\xad\x82\x43\x5f\x17\x8d\x3b\x67\x26\x02\xe7\x72\xeb\x53\xe7\x5c\x04\xd7\xa7\xba\xfc\x4b\xf6\xa4\x2e\xdc\x6a\x04\xa7\x88\x38\x1a\x1e\xfc\xce\xc4\xcf\xdb\x38\x2e\x98\xf8\x41\x56\xc1\x1d\xf9\x44\x29\x85\xba\x39\x7f\x9f\xab\xce\xf0\xa6\xbd\xce\xf0\x53\x2e\xc7\x99\x70\x5e\x13\x81\x15\xd7\x39\xdf\xeb\x60\x64\x7d\x20\x23\xed\x8d\x57\x21\x6c\x75\xc8\xf3\x1a\x05\x06\x30\x63\x62\xd1\x11\xf2\x6a\x7d\x20\x29\x70\xa9\x16\x52\xbc\x64\xcf\x70\x2d\xdd\xe0\x85\x88\x72\xd5\x3c\xb8\x06\xdf\x58\x4a\x28\x42\x5e\x12\xdb\x31\x1c\x26\x8a\xbf\x60\xed\x08\xc9\x4d\x3d\xe0\x00\xc9\x90\x97\xb2\x27\xd8\x56\x1b\xe5\x4a\x6f\xc3\xb3\x20\x6a\x11\x04\x3c\x40\x7c\x08\x14\x2f\x8e\x68\xa6\x76\x3a\x79\x04\xac\x47\xfb\x00\x98\xb2\x4e\x1f\x03\xe3\xe4\x1c\x86\x23\x1b\xd6\xe6\x78\x93\x16\x2c\x17\x40\x26\xe3\xc5\x08\x17\xc9\x0b\x83\x24\x14\xf0\x28\x02\xce\x31\x39\xe2\x4b\xdf\x0d\xfc\x35\x2a\xcc\x1e\xad\xe0\xe9\xf0\x8a\x90\x4b\xdb\x6e\xc7\xc7\x39\xfe\xe2\x6e\xd8\x7b\xe1\x7e\x25\x62\xfb\x55\xa9\x6a\x6b\xd7\x93\x18\x7f\x48\x75\x75\xea\x72\xaa\xca\xbd\xad\x72\x85\x6d\xda\x47\x0f\x8c\x54\xca\x74\x49\x91\xe7\x65\xbc\xb0\xfb\xab\xfa\xfa\x83\x17\xf8\x23\xbe\x44\x9e\xfb\x88\x0a\x7e\xe5\x89\x60\xfa\xb1\x40\xb6\x46\xcf\xa5\x1e\x66\xbc\x00\xbe\x15\xa0\xac\x24\xd5\x6e\xc1\x06\x18\x6f\x3a\xc2\x9f\x46\xf8\x52\xff\x0b\x07\xc7\x6b\x65\x5c\x40\xca\xb7\x06\x16\xdb\xfe\xff\x05\x4f\x48\x81\x0b\x91\x27\xe9\x86\x62\xa2\x7e\x44\x58\x9e\xf3\x9c\x2a\x94\xa9\x1a\x41\x1b\xe6\x09\x18\xe8\x15\x54\x01\x81\xa9\x0f\x0b\x9c\x26\x3b\x7c\x71\x81\x0b\xbc\x58\x60\xff\x3a\x61\xbb\xfb\xa5\xdc\xfb\x8a\x0f\x78\x28\x87\x46\x05\x2a\xa8\xad\x01\xee\x35\x3c\xf5\xc8\xa3\xda\xc2\xc6\xef\xb1\x2a\xc2\x91\xbb\xc3\x77\x46\x27\xcd\x33\xfa\x03\xd9\xfc\x53\x4a\x38\x6d\x82\x6e\xec\xad\x56\xfc\xe4\x85\xdd\xc6\xaa\x5c\xcd\x5f\xe4\x12\x44\xde\x09\xa9\x7c\xaa\xb8\xb5\xbf\xf5\xf9\xce\x84\xee\xba\xbe\x41\x7a\xa6\x09\xa6\x14\x0c\xc0\x94\x82\x0d\x01\xa6\x14\xac\x17\x30\x50\x6e\x17\x30\xf0\xa6\x77\xc1\xa8\xae\x4f\x82\x81\x07\x3f\x79\x04\x0d\xb9\x1c\x00\x0c\x64\xeb\x03\x8c\x2a\xb7\x03\x18\xf5\xdf\x0e\x07\x8c\xee\xfa\x1c\x98\x49\xa8\xc9\x4c\xc2\x61\xd0\x4c\xc2\x9e\xd8\x4c\xc2\x8e\x70\x26\x61\x8b\x0e\xb4\x7e\x0e\xcf\x6c\xaa\xf1\xcc\xa6\xc3\xe0\x99\x4d\x7b\xc2\x33\x9b\x76\xc4\x33\x9b\xb6\xf0\x40\xeb\xe7\xf0\x84\x73\x8d\x27\x9c\x0f\x83\x27\x9c\xf7\x84\x27\x9c\x77\xc4\x13\xce\x5b\x78\xa0\xf5\x93\x78\xd4\xdf\x01\xc8\xa3\xfa\x81\x1e\x42\x77\x54\xbe\x3e\xf0\xc8\xae\xca\x23\xdb\xd2\x63\x5a\x3f\x8b\x47\x89\x8f\x1c\x4a\x7d\x74\xc6\xbe\x08\x75\xd3\x1f\x79\x20\x40\x55\xff\x67\x21\x29\x09\x92\x43\x69\x90\xce\xd8\x17\xa4\x6e\x2a\x24\x0f\x64\xa8\xea\xff\x2c\x24\x25\x44\x72\x28\x25\xd2\x19\xfb\x82\xd4\x4d\x8b\xe4\x81\x18\x55\xfd\x9f\x84\x64\xfe\x5a\x48\x1e\x71\xac\xbf\x06\xc0\x64\x72\xf6\xc1\xa9\x2a\xba\x03\x28\xb3\xc4\x25\x65\x21\x9c\x47\xa5\x0e\x54\xac\xbf\x86\x42\xd5\xcf\x91\xaa\x8a\xee\x8a\xaa\x79\xa8\x2c\x84\x23\xa8\xfe\x09\x00\x00\xff\xff\x5c\x35\x64\x30\x03\x18\x00\x00")

func template_genny_root_go() ([]byte, error) {
	return bindata_read(
		_template_genny_root_go,
		"../template/genny/root.go",
	)
}

var _template_genny_union_alias_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\x4d\x6b\xf3\x30\x10\x84\xcf\xd9\x5f\xb1\xe8\x10\x6c\xf3\x62\xdd\x03\x3e\xbc\xb4\x04\x0a\x4d\x28\x94\x9c\x8b\x6c\x6f\x12\x13\x7d\xb8\xfa\x08\x4d\x43\xfe\x7b\x51\xd2\x4a\x3e\xa4\xd0\x9b\x66\xf6\xd1\xb0\x3b\xa3\xe8\x0e\x62\x47\xf8\x1e\xc8\x9e\x00\x78\x05\x3b\xd2\xfa\x84\x2a\x38\x8f\x2d\x61\x27\xa4\xa4\x1e\x47\xb2\xb8\xd1\x83\xd1\x6b\xa1\x08\x2a\x0e\x30\xa8\xd1\x58\x8f\x05\xcc\xd8\x6e\xf0\xfb\xd0\xd6\x9d\x51\xfc\x20\x3e\x03\xdf\xb6\x6e\x4f\x72\x24\xcb\xaf\xa9\xbc\x15\x8e\x18\x94\x00\x47\x61\xf1\x71\xb3\x5a\xbd\xbc\xa5\xac\xff\x72\x10\x2e\x3e\xb0\x35\x46\x62\x83\x11\xae\x5f\xc9\x5f\x07\x05\x4b\x20\xfb\x87\x2c\xc1\xac\x04\xd8\x06\xdd\x61\xa1\x4d\x4f\x79\xb3\x12\x13\x52\x4c\xde\x78\x86\x19\xe7\x96\x5c\x90\x1e\x17\x4d\x1e\x9c\x1f\x8c\x52\x46\xaf\x4d\x4f\x0b\x8c\x51\x75\x36\x2e\x30\xbb\xf7\x23\xd9\x13\x14\x1b\x9c\x67\x35\x41\xa2\x7c\x1e\x9c\xc7\xe6\x96\xfe\xa3\xef\x64\xd4\xd7\x45\x9b\xe9\x91\x89\x5a\x92\xef\xf6\x4f\xba\xa7\x8f\xa2\x8c\xa6\x0f\x56\xe3\x6d\x06\x97\xef\x26\x52\x07\x4b\x6b\x54\x6e\xe1\x88\x55\x12\x25\x56\x89\x8a\x95\xe4\xf3\xe6\xc9\xff\xed\xbe\xe3\x44\xfe\x71\xaf\xaf\x00\x00\x00\xff\xff\x77\x9a\xc7\x0e\x5b\x02\x00\x00")

func template_genny_union_alias_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_alias_go,
		"../template/genny/union-alias.go",
	)
}

var _template_genny_union_go = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xbd\x6e\xb3\x30\x18\x85\xe7\xbc\x57\x71\xc4\x10\x01\x03\xd6\xb7\x46\xca\xf4\xcd\x65\xeb\x05\x18\xf3\x42\xac\xe0\x9f\xfa\x47\x15\x45\xdc\x7b\x05\x51\x49\x95\xa1\x8b\x07\xfb\x3c\x8f\xcf\xf1\x52\xdd\xe5\xc8\xf8\xc8\x1c\x66\x22\x51\x13\x80\x91\xad\x9d\x61\x72\x4c\xe8\x18\x4a\x4e\x13\xf7\xf8\x87\xa4\x0d\x47\x78\x0e\x68\x5d\xcf\xad\x34\x4c\xb5\x20\xd2\xc6\xbb\x90\x50\xd2\xa9\x18\x75\xba\xe5\xae\x51\xce\x88\xbb\xfc\xca\x62\xe8\xe2\x8d\x27\xcf\x41\xec\x7e\xd1\xc9\xc8\x05\x55\x44\x69\xf6\x8c\x77\xab\x9d\xdd\x34\x88\x29\x64\x95\xb0\xd0\xa9\xde\x22\xcd\x7f\x67\x8c\xb3\xdb\x2f\xb4\x12\x0d\xd9\x2a\xb0\xf1\x69\x3e\x88\xb2\x42\xfd\xc4\x17\x3a\x05\x8e\x79\x4a\xb8\x5c\x71\x3e\xee\x97\xa7\xe6\x82\xf3\x8b\x78\x59\xd7\x1f\xaa\xd9\x25\x57\x14\x07\x59\x6c\x4f\x29\x07\x8b\x47\xe2\x68\x51\x5a\xd7\xff\x2a\x5e\xe1\x8d\x4d\xc7\xa1\xd4\xd0\x36\x55\xdb\xc1\x61\x90\x8a\x97\xf5\x51\x6a\x77\x58\x3d\x1d\x82\x96\x3f\xff\x1a\xb1\xe7\x5f\xa7\xd2\x4a\xdf\x01\x00\x00\xff\xff\x98\x1d\x38\x8d\xa7\x01\x00\x00")

func template_genny_union_go() ([]byte, error) {
	return bindata_read(
		_template_genny_union_go,
		"../template/genny/union.go",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"../template/genny/dummy.go": template_genny_dummy_go,
	"../template/genny/field.go": template_genny_field_go,
	"../template/genny/list.go": template_genny_list_go,
	"../template/genny/node.go": template_genny_node_go,
	"../template/genny/node_test.go": template_genny_node_test_go,
	"../template/genny/root.go": template_genny_root_go,
	"../template/genny/union-alias.go": template_genny_union_alias_go,
	"../template/genny/union.go": template_genny_union_go,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"..": &_bintree_t{nil, map[string]*_bintree_t{
		"template": &_bintree_t{nil, map[string]*_bintree_t{
			"genny": &_bintree_t{nil, map[string]*_bintree_t{
				"dummy.go": &_bintree_t{template_genny_dummy_go, map[string]*_bintree_t{
				}},
				"field.go": &_bintree_t{template_genny_field_go, map[string]*_bintree_t{
				}},
				"list.go": &_bintree_t{template_genny_list_go, map[string]*_bintree_t{
				}},
				"node.go": &_bintree_t{template_genny_node_go, map[string]*_bintree_t{
				}},
				"node_test.go": &_bintree_t{template_genny_node_test_go, map[string]*_bintree_t{
				}},
				"root.go": &_bintree_t{template_genny_root_go, map[string]*_bintree_t{
				}},
				"union-alias.go": &_bintree_t{template_genny_union_alias_go, map[string]*_bintree_t{
				}},
				"union.go": &_bintree_t{template_genny_union_go, map[string]*_bintree_t{
				}},
			}},
		}},
	}},
}}
