// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package query

import "github.com/kazu/fbshelper/query/base"

/*
must call per Field
go run github . com / cheekybits / genny gen "Files=Root Files=Version []File=int64 CommonNode=base.CommonNode 0=0 False=false" ;
go run github . com / cheekybits / genny gen "Files=Root Files=Index   []File=Index CommonNode=Index        0=1 False=false" ;
*/

// import (
// 	"github.com/cheekybits/genny/generic"
// 	b "github.com/kazu/fbshelper/query/base"
// )

var (
	Files_Files_0 int = base.AtoiNoErr(Atoi("0"))
	Files_Files   int = Files_Files_0
)

// (field inedx, field type) -> Files_IdxToType
var DUMMY_Files_Files bool = SetFilesFields("Files", "Files", "[]File", Files_Files_0)

// FilesSetNodeToIdx(Files_Files, base.NameToTypeEnum("[]File")) &&
// FilesSetIdxToName("[]File", Files_Files)

func (node Files) Files() (result *CommonNode) {
	result = NewCommonNode()
	common := node.FieldAt(Files_Files_0)

	result.Name = common.Name
	result.NodeList = common.NodeList
	result.IdxToType = common.IdxToType
	result.IdxToTypeGroup = common.IdxToTypeGroup

	return
}
