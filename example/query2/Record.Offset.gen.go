// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package query

import "github.com/kazu/fbshelper/query/base"

/*
must call per Field
go run github . com / cheekybits / genny gen "Record=Root Offset=Version Int64=int64 CommonNode=base.CommonNode 1=0 False=false" ;
go run github . com / cheekybits / genny gen "Record=Root Offset=Index   Int64=Index CommonNode=Index        1=1 False=false" ;
*/

// import (
// 	"github.com/cheekybits/genny/generic"
// 	b "github.com/kazu/fbshelper/query/base"
// )

var (
	Record_Offset_1 int = base.AtoiNoErr(Atoi("1"))
	Record_Offset   int = Record_Offset_1
)

// (field inedx, field type) -> Record_IdxToType
var DUMMY_Record_Offset bool = SetRecordFields("Record", "Offset", "Int64", Record_Offset_1)

// RecordSetNodeToIdx(Record_Offset, base.NameToTypeEnum("Int64")) &&
// RecordSetIdxToName("Int64", Record_Offset)

func (node Record) Offset() (result *CommonNode) {
	result = NewCommonNode()
	common := node.FieldAt(Record_Offset_1)

	result.Name = common.Name
	result.NodeList = common.NodeList
	result.IdxToType = common.IdxToType
	result.IdxToTypeGroup = common.IdxToTypeGroup

	return
}
