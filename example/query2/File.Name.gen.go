// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package query

import "github.com/kazu/fbshelper/query/base"

/*
must call per Field
go run github . com / cheekybits / genny gen "File=Root Name=Version []byte=int64 CommonNode=base.CommonNode 1=0 False=false" ;
go run github . com / cheekybits / genny gen "File=Root Name=Index   []byte=Index CommonNode=Index        1=1 False=false" ;
*/

// import (
// 	"github.com/cheekybits/genny/generic"
// 	b "github.com/kazu/fbshelper/query/base"
// )

var (
	File_Name_1 int = base.AtoiNoErr(Atoi("1"))
	File_Name   int = File_Name_1
)

// (field inedx, field type) -> File_IdxToType
var DUMMY_File_Name bool = SetFileFields("File", "Name", "[]byte", File_Name_1)

// FileSetNodeToIdx(File_Name, base.NameToTypeEnum("[]byte")) &&
// FileSetIdxToName("[]byte", File_Name)

func (node File) Name() (result *CommonNode) {
	result = NewCommonNode()
	common := node.FieldAt(File_Name_1)

	result.Name = common.Name
	result.NodeList = common.NodeList
	result.IdxToType = common.IdxToType
	result.IdxToTypeGroup = common.IdxToTypeGroup

	return
}
