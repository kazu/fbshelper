// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package query

import "github.com/kazu/fbshelper/query/base"

/*
must call per Field
go run github . com / cheekybits / genny gen "NumList=Root Num=Version []int32=int64 CommonNode=base.CommonNode 0=0 False=false" ;
go run github . com / cheekybits / genny gen "NumList=Root Num=Index   []int32=Index CommonNode=Index        0=1 False=false" ;
*/

// import (
// 	"github.com/cheekybits/genny/generic"
// 	b "github.com/kazu/fbshelper/query/base"
// )

var (
	NumList_Num_0 int = base.AtoiNoErr(Atoi("0"))
	NumList_Num   int = NumList_Num_0
)

// (field inedx, field type) -> NumList_IdxToType
var DUMMY_NumList_Num bool = SetNumListFields("NumList", "Num", "[]int32", NumList_Num_0)

// NumListSetNodeToIdx(NumList_Num, base.NameToTypeEnum("[]int32")) &&
// NumListSetIdxToName("[]int32", NumList_Num)

func (node NumList) Num() (result *CommonNode) {
	result = NewCommonNode()
	common := node.FieldAt(NumList_Num_0)

	result.Name = common.Name
	result.NodeList = common.NodeList
	result.IdxToType = common.IdxToType
	result.IdxToTypeGroup = common.IdxToTypeGroup

	return
}
