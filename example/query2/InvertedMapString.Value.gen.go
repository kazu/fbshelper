// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package query

import "github.com/kazu/fbshelper/query/base"

/*
must call per Field
go run github . com / cheekybits / genny gen "InvertedMapString=Root Value=Version Record=int64 Record=base.CommonNode 1=0 True=false" ;
go run github . com / cheekybits / genny gen "InvertedMapString=Root Value=Index   Record=Index Record=Index        1=1 True=false" ;
*/

// import (
// 	"github.com/cheekybits/genny/generic"
// 	b "github.com/kazu/fbshelper/query/base"
// )

var (
	InvertedMapString_Value_1 int = base.AtoiNoErr(Atoi("1"))
	InvertedMapString_Value   int = InvertedMapString_Value_1
)

// (field inedx, field type) -> InvertedMapString_IdxToType
var DUMMY_InvertedMapString_Value bool = SetInvertedMapStringFields("InvertedMapString", "Value", "Record", InvertedMapString_Value_1)

// InvertedMapStringSetNodeToIdx(InvertedMapString_Value, base.NameToTypeEnum("Record")) &&
// InvertedMapStringSetIdxToName("Record", InvertedMapString_Value)

func (node InvertedMapString) Value() (result *Record) {
	result = NewRecord()
	common := node.FieldAt(InvertedMapString_Value_1)

	result.Name = common.Name
	result.NodeList = common.NodeList
	result.IdxToType = common.IdxToType
	result.IdxToTypeGroup = common.IdxToTypeGroup

	return
}
