// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package example

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type MoveState struct {
	_tab flatbuffers.Struct
}

func (rcv *MoveState) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *MoveState) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *MoveState) ObjectId() int64 {
	return rcv._tab.GetInt64(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *MoveState) MutateObjectId(n int64) bool {
	return rcv._tab.MutateInt64(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *MoveState) Gps(obj *Gps) *Gps {
	if obj == nil {
		obj = new(Gps)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+8)
	return obj
}
func (rcv *MoveState) Velocity(obj *Vec3) *Vec3 {
	if obj == nil {
		obj = new(Vec3)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+24)
	return obj
}

func CreateMoveState(builder *flatbuffers.Builder, objectId int64, gps_latitude float64, gps_longitude float64, velocity_x float64, velocity_y float64, velocity_z float64) flatbuffers.UOffsetT {
	builder.Prep(8, 48)
	builder.Prep(8, 24)
	builder.PrependFloat64(velocity_z)
	builder.PrependFloat64(velocity_y)
	builder.PrependFloat64(velocity_x)
	builder.Prep(8, 16)
	builder.PrependFloat64(gps_longitude)
	builder.PrependFloat64(gps_latitude)
	builder.PrependInt64(objectId)
	return builder.Offset()
}
