// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package example

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Time struct {
	_tab flatbuffers.Struct
}

func (rcv *Time) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Time) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Time) Unix() int64 {
	return rcv._tab.GetInt64(rcv._tab.Pos + flatbuffers.UOffsetT(0))
}
func (rcv *Time) MutateUnix(n int64) bool {
	return rcv._tab.MutateInt64(rcv._tab.Pos+flatbuffers.UOffsetT(0), n)
}

func (rcv *Time) Nano() int64 {
	return rcv._tab.GetInt64(rcv._tab.Pos + flatbuffers.UOffsetT(8))
}
func (rcv *Time) MutateNano(n int64) bool {
	return rcv._tab.MutateInt64(rcv._tab.Pos+flatbuffers.UOffsetT(8), n)
}

func CreateTime(builder *flatbuffers.Builder, unix int64, nano int64) flatbuffers.UOffsetT {
	builder.Prep(8, 16)
	builder.PrependInt64(nano)
	builder.PrependInt64(unix)
	return builder.Offset()
}
